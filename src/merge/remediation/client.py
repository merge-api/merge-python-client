# This file was auto-generated by Fern. It is not intended for manual modification.

from __future__ import annotations
import typing
from ..core.client_wrapper import SyncClientWrapper, AsyncClientWrapper
from .agent import AssuranceAgent

# Define the precise shapes of the callback functions.
OnSuccessCallback = typing.Callable[[str], None]
OnFailureCallback = typing.Callable[[str, Exception], None]


class RemediationClient:
    """
    Client for managing Merge's native SDK remediation features.
    """

    def __init__(self, *, client_wrapper: SyncClientWrapper) -> None:
        self._client_wrapper = client_wrapper

    def enable_assurance(
        self,
        *,
        on_success: typing.Optional[OnSuccessCallback] = None,
        on_failure: typing.Optional[OnFailureCallback] = None,
        check_interval_seconds: int = 3600,
        expiry_threshold_days: int = 30,
    )-> "AssuranceAgent":
        """
        Configures and activates the "Merge Assurance" agent.
        """
        # Day 1+ Implementation will go here.
        raise NotImplementedError("Assurance Agent implementation pending.")

class AsyncRemediationClient:
    """
    Async client for managing Merge's native SDK remediation features.
    """

    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._client_wrapper = client_wrapper

    async def enable_assurance(
        self,
        *,
        on_success: typing.Optional[OnSuccessCallback] = None,
        on_failure: typing.Optional[OnFailureCallback] = None,
        check_interval_seconds: int = 3600,
        expiry_threshold_days: int = 30,
    ) -> "AssuranceAgent":
        """
        Configures and activates the "Merge Assurance" agent.
        """
        # Day 1+ Implementation will go here.
        raise NotImplementedError("Assurance Agent implementation pending.")