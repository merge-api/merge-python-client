# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.unchecked_base_model import UncheckedBaseModel
from .remote_field_api import RemoteFieldApi


class RemoteFieldApiResponse(UncheckedBaseModel):
    user: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="User", default=None)
    group: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Group", default=None)
    conversation: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Conversation", default=None)
    member: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Member", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
