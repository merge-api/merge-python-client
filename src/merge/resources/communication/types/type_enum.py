# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class TypeEnum(str, enum.Enum):
    """
    * `PRIVATE_INTERNAL` - PRIVATE_INTERNAL
    * `PRIVATE_EXTERNAL` - PRIVATE_EXTERNAL
    * `PUBLIC_INTERNAL` - PUBLIC_INTERNAL
    * `PUBLIC_EXTERNAL` - PUBLIC_EXTERNAL
    """

    PRIVATE_INTERNAL = "PRIVATE_INTERNAL"
    PRIVATE_EXTERNAL = "PRIVATE_EXTERNAL"
    PUBLIC_INTERNAL = "PUBLIC_INTERNAL"
    PUBLIC_EXTERNAL = "PUBLIC_EXTERNAL"

    def visit(
        self,
        private_internal: typing.Callable[[], T_Result],
        private_external: typing.Callable[[], T_Result],
        public_internal: typing.Callable[[], T_Result],
        public_external: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is TypeEnum.PRIVATE_INTERNAL:
            return private_internal()
        if self is TypeEnum.PRIVATE_EXTERNAL:
            return private_external()
        if self is TypeEnum.PUBLIC_INTERNAL:
            return public_internal()
        if self is TypeEnum.PUBLIC_EXTERNAL:
            return public_external()
