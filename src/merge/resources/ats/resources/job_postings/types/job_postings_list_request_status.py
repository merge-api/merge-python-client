# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class JobPostingsListRequestStatus(str, enum.Enum):
    CLOSED = "CLOSED"
    DRAFT = "DRAFT"
    INTERNAL = "INTERNAL"
    PENDING = "PENDING"
    PUBLISHED = "PUBLISHED"

    def visit(
        self,
        closed: typing.Callable[[], T_Result],
        draft: typing.Callable[[], T_Result],
        internal: typing.Callable[[], T_Result],
        pending: typing.Callable[[], T_Result],
        published: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is JobPostingsListRequestStatus.CLOSED:
            return closed()
        if self is JobPostingsListRequestStatus.DRAFT:
            return draft()
        if self is JobPostingsListRequestStatus.INTERNAL:
            return internal()
        if self is JobPostingsListRequestStatus.PENDING:
            return pending()
        if self is JobPostingsListRequestStatus.PUBLISHED:
            return published()
