# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ScheduledInterviewStatusEnum(str, enum.Enum):
    """
    * `SCHEDULED` - SCHEDULED
    * `AWAITING_FEEDBACK` - AWAITING_FEEDBACK
    * `COMPLETE` - COMPLETE
    """

    SCHEDULED = "SCHEDULED"
    AWAITING_FEEDBACK = "AWAITING_FEEDBACK"
    COMPLETE = "COMPLETE"

    def visit(
        self,
        scheduled: typing.Callable[[], T_Result],
        awaiting_feedback: typing.Callable[[], T_Result],
        complete: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ScheduledInterviewStatusEnum.SCHEDULED:
            return scheduled()
        if self is ScheduledInterviewStatusEnum.AWAITING_FEEDBACK:
            return awaiting_feedback()
        if self is ScheduledInterviewStatusEnum.COMPLETE:
            return complete()
