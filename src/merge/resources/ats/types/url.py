# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
import datetime as dt
import pydantic
from .url_url_type import UrlUrlType
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class Url(UniversalBaseModel):
    """
    # The Url Object

    ### Description

    The `Url` object is used to represent hyperlinks associated with the parent model.

    ### Usage Example

    Fetch from the `GET Candidate` endpoint and view their website urls.
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field()
    """
    The datetime that this object was created by Merge.
    """

    modified_at: typing.Optional[dt.datetime] = pydantic.Field()
    """
    The datetime that this object was modified by Merge.
    """

    value: typing.Optional[str] = pydantic.Field()
    """
    The site's url.
    """

    url_type: typing.Optional[UrlUrlType] = pydantic.Field()
    """
    The type of site.
    
    - `PERSONAL` - PERSONAL
    - `COMPANY` - COMPANY
    - `PORTFOLIO` - PORTFOLIO
    - `BLOG` - BLOG
    - `SOCIAL_MEDIA` - SOCIAL_MEDIA
    - `OTHER` - OTHER
    - `JOB_POSTING` - JOB_POSTING
    """

    remote_was_deleted: typing.Optional[bool] = pydantic.Field()
    """
    Indicates whether or not this object has been deleted in the third party platform.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
