# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .field_permission_deserializer_request import FieldPermissionDeserializerRequest
from .model_permission_deserializer_request import ModelPermissionDeserializerRequest


class IndividualCommonModelScopeDeserializerRequest(UniversalBaseModel):
    model_name: str
    model_permissions: typing.Optional[typing.Dict[str, ModelPermissionDeserializerRequest]]
    field_permissions: typing.Optional[FieldPermissionDeserializerRequest]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
