# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class DisabilityStatusEnum(str, enum.Enum):
    """
    * `YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY` - YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY
    * `NO_I_DONT_HAVE_A_DISABILITY` - NO_I_DONT_HAVE_A_DISABILITY
    * `I_DONT_WISH_TO_ANSWER` - I_DONT_WISH_TO_ANSWER
    """

    YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY = "YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY"
    NO_I_DONT_HAVE_A_DISABILITY = "NO_I_DONT_HAVE_A_DISABILITY"
    I_DONT_WISH_TO_ANSWER = "I_DONT_WISH_TO_ANSWER"

    def visit(
        self,
        yes_i_have_a_disability_or_previously_had_a_disability: typing.Callable[[], T_Result],
        no_i_dont_have_a_disability: typing.Callable[[], T_Result],
        i_dont_wish_to_answer: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is DisabilityStatusEnum.YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY:
            return yes_i_have_a_disability_or_previously_had_a_disability()
        if self is DisabilityStatusEnum.NO_I_DONT_HAVE_A_DISABILITY:
            return no_i_dont_have_a_disability()
        if self is DisabilityStatusEnum.I_DONT_WISH_TO_ANSWER:
            return i_dont_wish_to_answer()
