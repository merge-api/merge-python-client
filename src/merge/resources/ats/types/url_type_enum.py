# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class UrlTypeEnum(str, enum.Enum):
    """
    * `PERSONAL` - PERSONAL
    * `COMPANY` - COMPANY
    * `PORTFOLIO` - PORTFOLIO
    * `BLOG` - BLOG
    * `SOCIAL_MEDIA` - SOCIAL_MEDIA
    * `OTHER` - OTHER
    * `JOB_POSTING` - JOB_POSTING
    """

    PERSONAL = "PERSONAL"
    COMPANY = "COMPANY"
    PORTFOLIO = "PORTFOLIO"
    BLOG = "BLOG"
    SOCIAL_MEDIA = "SOCIAL_MEDIA"
    OTHER = "OTHER"
    JOB_POSTING = "JOB_POSTING"

    def visit(
        self,
        personal: typing.Callable[[], T_Result],
        company: typing.Callable[[], T_Result],
        portfolio: typing.Callable[[], T_Result],
        blog: typing.Callable[[], T_Result],
        social_media: typing.Callable[[], T_Result],
        other: typing.Callable[[], T_Result],
        job_posting: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is UrlTypeEnum.PERSONAL:
            return personal()
        if self is UrlTypeEnum.COMPANY:
            return company()
        if self is UrlTypeEnum.PORTFOLIO:
            return portfolio()
        if self is UrlTypeEnum.BLOG:
            return blog()
        if self is UrlTypeEnum.SOCIAL_MEDIA:
            return social_media()
        if self is UrlTypeEnum.OTHER:
            return other()
        if self is UrlTypeEnum.JOB_POSTING:
            return job_posting()
