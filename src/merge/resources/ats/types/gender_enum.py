# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class GenderEnum(str, enum.Enum):
    """
    * `MALE` - MALE
    * `FEMALE` - FEMALE
    * `NON-BINARY` - NON-BINARY
    * `OTHER` - OTHER
    * `DECLINE_TO_SELF_IDENTIFY` - DECLINE_TO_SELF_IDENTIFY
    """

    MALE = "MALE"
    FEMALE = "FEMALE"
    NON_BINARY = "NON-BINARY"
    OTHER = "OTHER"
    DECLINE_TO_SELF_IDENTIFY = "DECLINE_TO_SELF_IDENTIFY"

    def visit(
        self,
        male: typing.Callable[[], T_Result],
        female: typing.Callable[[], T_Result],
        non_binary: typing.Callable[[], T_Result],
        other: typing.Callable[[], T_Result],
        decline_to_self_identify: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is GenderEnum.MALE:
            return male()
        if self is GenderEnum.FEMALE:
            return female()
        if self is GenderEnum.NON_BINARY:
            return non_binary()
        if self is GenderEnum.OTHER:
            return other()
        if self is GenderEnum.DECLINE_TO_SELF_IDENTIFY:
            return decline_to_self_identify()
