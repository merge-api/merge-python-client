# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
from .remote_field_api import RemoteFieldApi
import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class RemoteFieldApiResponse(UniversalBaseModel):
    activity: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Activity")
    application: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Application")
    attachment: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Attachment")
    candidate: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Candidate")
    department: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Department")
    eeoc: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="EEOC")
    scheduled_interview: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="ScheduledInterview")
    job: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Job")
    job_posting: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="JobPosting")
    job_interview_stage: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="JobInterviewStage")
    offer: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Offer")
    office: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Office")
    reject_reason: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="RejectReason")
    scorecard: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Scorecard")
    tag: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="Tag")
    remote_user: typing.Optional[typing.List[RemoteFieldApi]] = pydantic.Field(alias="RemoteUser")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
