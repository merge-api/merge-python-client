# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class VisibilityEnum(str, enum.Enum):
    """
    * `ADMIN_ONLY` - ADMIN_ONLY
    * `PUBLIC` - PUBLIC
    * `PRIVATE` - PRIVATE
    """

    ADMIN_ONLY = "ADMIN_ONLY"
    PUBLIC = "PUBLIC"
    PRIVATE = "PRIVATE"

    def visit(
        self,
        admin_only: typing.Callable[[], T_Result],
        public: typing.Callable[[], T_Result],
        private: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is VisibilityEnum.ADMIN_ONLY:
            return admin_only()
        if self is VisibilityEnum.PUBLIC:
            return public()
        if self is VisibilityEnum.PRIVATE:
            return private()
