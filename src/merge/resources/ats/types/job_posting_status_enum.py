# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class JobPostingStatusEnum(str, enum.Enum):
    """
    - `PUBLISHED` - PUBLISHED
    - `CLOSED` - CLOSED
    - `DRAFT` - DRAFT
    - `INTERNAL` - INTERNAL
    - `PENDING` - PENDING
    """

    PUBLISHED = "PUBLISHED"
    CLOSED = "CLOSED"
    DRAFT = "DRAFT"
    INTERNAL = "INTERNAL"
    PENDING = "PENDING"

    def visit(
        self,
        published: typing.Callable[[], T_Result],
        closed: typing.Callable[[], T_Result],
        draft: typing.Callable[[], T_Result],
        internal: typing.Callable[[], T_Result],
        pending: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is JobPostingStatusEnum.PUBLISHED:
            return published()
        if self is JobPostingStatusEnum.CLOSED:
            return closed()
        if self is JobPostingStatusEnum.DRAFT:
            return draft()
        if self is JobPostingStatusEnum.INTERNAL:
            return internal()
        if self is JobPostingStatusEnum.PENDING:
            return pending()
