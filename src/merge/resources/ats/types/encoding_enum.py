# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EncodingEnum(str, enum.Enum):
    """
    * `RAW` - RAW
    * `BASE64` - BASE64
    * `GZIP_BASE64` - GZIP_BASE64
    """

    RAW = "RAW"
    BASE_64 = "BASE64"
    GZIP_BASE_64 = "GZIP_BASE64"

    def visit(
        self,
        raw: typing.Callable[[], T_Result],
        base_64: typing.Callable[[], T_Result],
        gzip_base_64: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EncodingEnum.RAW:
            return raw()
        if self is EncodingEnum.BASE_64:
            return base_64()
        if self is EncodingEnum.GZIP_BASE_64:
            return gzip_base_64()
