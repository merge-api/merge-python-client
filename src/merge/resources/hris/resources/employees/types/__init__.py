# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .employees_list_request_employment_status import EmployeesListRequestEmploymentStatus
    from .employees_list_request_expand import EmployeesListRequestExpand
    from .employees_list_request_remote_fields import EmployeesListRequestRemoteFields
    from .employees_list_request_show_enum_origins import EmployeesListRequestShowEnumOrigins
    from .employees_retrieve_request_expand import EmployeesRetrieveRequestExpand
    from .employees_retrieve_request_remote_fields import EmployeesRetrieveRequestRemoteFields
    from .employees_retrieve_request_show_enum_origins import EmployeesRetrieveRequestShowEnumOrigins
    from .ignore_common_model_request_reason import IgnoreCommonModelRequestReason
_dynamic_imports: typing.Dict[str, str] = {
    "EmployeesListRequestEmploymentStatus": ".employees_list_request_employment_status",
    "EmployeesListRequestExpand": ".employees_list_request_expand",
    "EmployeesListRequestRemoteFields": ".employees_list_request_remote_fields",
    "EmployeesListRequestShowEnumOrigins": ".employees_list_request_show_enum_origins",
    "EmployeesRetrieveRequestExpand": ".employees_retrieve_request_expand",
    "EmployeesRetrieveRequestRemoteFields": ".employees_retrieve_request_remote_fields",
    "EmployeesRetrieveRequestShowEnumOrigins": ".employees_retrieve_request_show_enum_origins",
    "IgnoreCommonModelRequestReason": ".ignore_common_model_request_reason",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "EmployeesListRequestEmploymentStatus",
    "EmployeesListRequestExpand",
    "EmployeesListRequestRemoteFields",
    "EmployeesListRequestShowEnumOrigins",
    "EmployeesRetrieveRequestExpand",
    "EmployeesRetrieveRequestRemoteFields",
    "EmployeesRetrieveRequestShowEnumOrigins",
    "IgnoreCommonModelRequestReason",
]
