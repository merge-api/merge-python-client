# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EmployeesListRequestExpandItem(str, enum.Enum):
    COMPANY = "company"
    EMPLOYMENTS = "employments"
    GROUPS = "groups"
    HOME_LOCATION = "home_location"
    MANAGER = "manager"
    PAY_GROUP = "pay_group"
    TEAM = "team"
    WORK_LOCATION = "work_location"

    def visit(
        self,
        company: typing.Callable[[], T_Result],
        employments: typing.Callable[[], T_Result],
        groups: typing.Callable[[], T_Result],
        home_location: typing.Callable[[], T_Result],
        manager: typing.Callable[[], T_Result],
        pay_group: typing.Callable[[], T_Result],
        team: typing.Callable[[], T_Result],
        work_location: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EmployeesListRequestExpandItem.COMPANY:
            return company()
        if self is EmployeesListRequestExpandItem.EMPLOYMENTS:
            return employments()
        if self is EmployeesListRequestExpandItem.GROUPS:
            return groups()
        if self is EmployeesListRequestExpandItem.HOME_LOCATION:
            return home_location()
        if self is EmployeesListRequestExpandItem.MANAGER:
            return manager()
        if self is EmployeesListRequestExpandItem.PAY_GROUP:
            return pay_group()
        if self is EmployeesListRequestExpandItem.TEAM:
            return team()
        if self is EmployeesListRequestExpandItem.WORK_LOCATION:
            return work_location()
