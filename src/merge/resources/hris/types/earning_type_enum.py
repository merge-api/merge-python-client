# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EarningTypeEnum(str, enum.Enum):
    """
    * `SALARY` - SALARY
    * `REIMBURSEMENT` - REIMBURSEMENT
    * `OVERTIME` - OVERTIME
    * `BONUS` - BONUS
    """

    SALARY = "SALARY"
    REIMBURSEMENT = "REIMBURSEMENT"
    OVERTIME = "OVERTIME"
    BONUS = "BONUS"

    def visit(
        self,
        salary: typing.Callable[[], T_Result],
        reimbursement: typing.Callable[[], T_Result],
        overtime: typing.Callable[[], T_Result],
        bonus: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EarningTypeEnum.SALARY:
            return salary()
        if self is EarningTypeEnum.REIMBURSEMENT:
            return reimbursement()
        if self is EarningTypeEnum.OVERTIME:
            return overtime()
        if self is EarningTypeEnum.BONUS:
            return bonus()
