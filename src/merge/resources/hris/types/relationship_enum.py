# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class RelationshipEnum(str, enum.Enum):
    """
    * `CHILD` - CHILD
    * `SPOUSE` - SPOUSE
    * `DOMESTIC_PARTNER` - DOMESTIC_PARTNER
    """

    CHILD = "CHILD"
    SPOUSE = "SPOUSE"
    DOMESTIC_PARTNER = "DOMESTIC_PARTNER"

    def visit(
        self,
        child: typing.Callable[[], T_Result],
        spouse: typing.Callable[[], T_Result],
        domestic_partner: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is RelationshipEnum.CHILD:
            return child()
        if self is RelationshipEnum.SPOUSE:
            return spouse()
        if self is RelationshipEnum.DOMESTIC_PARTNER:
            return domestic_partner()
