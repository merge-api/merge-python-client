# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class GroupTypeEnum(str, enum.Enum):
    """
    * `TEAM` - TEAM
    * `DEPARTMENT` - DEPARTMENT
    * `COST_CENTER` - COST_CENTER
    * `BUSINESS_UNIT` - BUSINESS_UNIT
    * `GROUP` - GROUP
    """

    TEAM = "TEAM"
    DEPARTMENT = "DEPARTMENT"
    COST_CENTER = "COST_CENTER"
    BUSINESS_UNIT = "BUSINESS_UNIT"
    GROUP = "GROUP"

    def visit(
        self,
        team: typing.Callable[[], T_Result],
        department: typing.Callable[[], T_Result],
        cost_center: typing.Callable[[], T_Result],
        business_unit: typing.Callable[[], T_Result],
        group: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is GroupTypeEnum.TEAM:
            return team()
        if self is GroupTypeEnum.DEPARTMENT:
            return department()
        if self is GroupTypeEnum.COST_CENTER:
            return cost_center()
        if self is GroupTypeEnum.BUSINESS_UNIT:
            return business_unit()
        if self is GroupTypeEnum.GROUP:
            return group()
