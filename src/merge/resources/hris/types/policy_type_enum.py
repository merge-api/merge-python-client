# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PolicyTypeEnum(str, enum.Enum):
    """
    * `VACATION` - VACATION
    * `SICK` - SICK
    * `PERSONAL` - PERSONAL
    * `JURY_DUTY` - JURY_DUTY
    * `VOLUNTEER` - VOLUNTEER
    * `BEREAVEMENT` - BEREAVEMENT
    """

    VACATION = "VACATION"
    SICK = "SICK"
    PERSONAL = "PERSONAL"
    JURY_DUTY = "JURY_DUTY"
    VOLUNTEER = "VOLUNTEER"
    BEREAVEMENT = "BEREAVEMENT"

    def visit(
        self,
        vacation: typing.Callable[[], T_Result],
        sick: typing.Callable[[], T_Result],
        personal: typing.Callable[[], T_Result],
        jury_duty: typing.Callable[[], T_Result],
        volunteer: typing.Callable[[], T_Result],
        bereavement: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PolicyTypeEnum.VACATION:
            return vacation()
        if self is PolicyTypeEnum.SICK:
            return sick()
        if self is PolicyTypeEnum.PERSONAL:
            return personal()
        if self is PolicyTypeEnum.JURY_DUTY:
            return jury_duty()
        if self is PolicyTypeEnum.VOLUNTEER:
            return volunteer()
        if self is PolicyTypeEnum.BEREAVEMENT:
            return bereavement()
