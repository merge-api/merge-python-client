# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
from .remote_response_response_type import RemoteResponseResponseType
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class RemoteResponse(UniversalBaseModel):
    """
    # The RemoteResponse Object

    ### Description

    The `RemoteResponse` object is used to represent information returned from a third-party endpoint.

    ### Usage Example

    View the `RemoteResponse` returned from your `DataPassthrough`.
    """

    method: str
    path: str
    status: int
    response: typing.Optional[typing.Any]
    response_headers: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]]
    response_type: typing.Optional[RemoteResponseResponseType]
    headers: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
