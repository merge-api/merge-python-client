# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ContainersRetrieveRequestExpand(str, enum.Enum):
    PARENT_ARTICLE = "parent_article"
    PARENT_ARTICLE_PARENT_CONTAINER = "parent_article,parent_container"
    PARENT_CONTAINER = "parent_container"
    PERMISSIONS = "permissions"
    PERMISSIONS_PARENT_ARTICLE = "permissions,parent_article"
    PERMISSIONS_PARENT_ARTICLE_PARENT_CONTAINER = "permissions,parent_article,parent_container"
    PERMISSIONS_PARENT_CONTAINER = "permissions,parent_container"

    def visit(
        self,
        parent_article: typing.Callable[[], T_Result],
        parent_article_parent_container: typing.Callable[[], T_Result],
        parent_container: typing.Callable[[], T_Result],
        permissions: typing.Callable[[], T_Result],
        permissions_parent_article: typing.Callable[[], T_Result],
        permissions_parent_article_parent_container: typing.Callable[[], T_Result],
        permissions_parent_container: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ContainersRetrieveRequestExpand.PARENT_ARTICLE:
            return parent_article()
        if self is ContainersRetrieveRequestExpand.PARENT_ARTICLE_PARENT_CONTAINER:
            return parent_article_parent_container()
        if self is ContainersRetrieveRequestExpand.PARENT_CONTAINER:
            return parent_container()
        if self is ContainersRetrieveRequestExpand.PERMISSIONS:
            return permissions()
        if self is ContainersRetrieveRequestExpand.PERMISSIONS_PARENT_ARTICLE:
            return permissions_parent_article()
        if self is ContainersRetrieveRequestExpand.PERMISSIONS_PARENT_ARTICLE_PARENT_CONTAINER:
            return permissions_parent_article_parent_container()
        if self is ContainersRetrieveRequestExpand.PERMISSIONS_PARENT_CONTAINER:
            return permissions_parent_container()
