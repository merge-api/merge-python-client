# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.unchecked_base_model import UncheckedBaseModel
from .field_mapping_api_instance import FieldMappingApiInstance


class FieldMappingApiInstanceResponse(UncheckedBaseModel):
    container: typing.Optional[typing.List[FieldMappingApiInstance]] = pydantic.Field(alias="Container", default=None)
    article: typing.Optional[typing.List[FieldMappingApiInstance]] = pydantic.Field(alias="Article", default=None)
    attachment: typing.Optional[typing.List[FieldMappingApiInstance]] = pydantic.Field(alias="Attachment", default=None)
    user: typing.Optional[typing.List[FieldMappingApiInstance]] = pydantic.Field(alias="User", default=None)
    group: typing.Optional[typing.List[FieldMappingApiInstance]] = pydantic.Field(alias="Group", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
