# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class VisibilityEnum(str, enum.Enum):
    """
    * `PUBLIC` - PUBLIC
    * `INTERNAL` - INTERNAL
    * `RESTRICTED` - RESTRICTED
    """

    PUBLIC = "PUBLIC"
    INTERNAL = "INTERNAL"
    RESTRICTED = "RESTRICTED"

    def visit(
        self,
        public: typing.Callable[[], T_Result],
        internal: typing.Callable[[], T_Result],
        restricted: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is VisibilityEnum.PUBLIC:
            return public()
        if self is VisibilityEnum.INTERNAL:
            return internal()
        if self is VisibilityEnum.RESTRICTED:
            return restricted()
