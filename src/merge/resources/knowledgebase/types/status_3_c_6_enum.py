# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class Status3C6Enum(str, enum.Enum):
    """
    * `DRAFT` - DRAFT
    * `PUBLISHED` - PUBLISHED
    * `ARCHIVED` - ARCHIVED
    * `TRASH` - TRASH
    """

    DRAFT = "DRAFT"
    PUBLISHED = "PUBLISHED"
    ARCHIVED = "ARCHIVED"
    TRASH = "TRASH"

    def visit(
        self,
        draft: typing.Callable[[], T_Result],
        published: typing.Callable[[], T_Result],
        archived: typing.Callable[[], T_Result],
        trash: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is Status3C6Enum.DRAFT:
            return draft()
        if self is Status3C6Enum.PUBLISHED:
            return published()
        if self is Status3C6Enum.ARCHIVED:
            return archived()
        if self is Status3C6Enum.TRASH:
            return trash()
