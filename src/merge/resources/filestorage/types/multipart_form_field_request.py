# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ....core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .multipart_form_field_request_encoding import MultipartFormFieldRequestEncoding


class MultipartFormFieldRequest(pydantic_v1.BaseModel):
    """
    # The MultipartFormField Object

    ### Description

    The `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.

    ### Usage Example

    Create a `MultipartFormField` to define a multipart form entry.
    """

    name: str = pydantic_v1.Field()
    """
    The name of the form field
    """

    data: str = pydantic_v1.Field()
    """
    The data for the form field.
    """

    encoding: typing.Optional[MultipartFormFieldRequestEncoding] = pydantic_v1.Field()
    """
    The encoding of the value of `data`. Defaults to `RAW` if not defined.
    
    - `RAW` - RAW
    - `BASE64` - BASE64
    - `GZIP_BASE64` - GZIP_BASE64
    """

    file_name: typing.Optional[str] = pydantic_v1.Field()
    """
    The file name of the form field, if the field is for a file.
    """

    content_type: typing.Optional[str] = pydantic_v1.Field()
    """
    The MIME type of the file, if the field is for a file.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.forbid
        json_encoders = {dt.datetime: serialize_datetime}
