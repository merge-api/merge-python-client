# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class CategoryEnum(str, enum.Enum):
    """
    * `hris` - hris
    * `ats` - ats
    * `accounting` - accounting
    * `ticketing` - ticketing
    * `crm` - crm
    * `mktg` - mktg
    * `filestorage` - filestorage
    """

    HRIS = "hris"
    ATS = "ats"
    ACCOUNTING = "accounting"
    TICKETING = "ticketing"
    CRM = "crm"
    MKTG = "mktg"
    FILESTORAGE = "filestorage"

    def visit(
        self,
        hris: typing.Callable[[], T_Result],
        ats: typing.Callable[[], T_Result],
        accounting: typing.Callable[[], T_Result],
        ticketing: typing.Callable[[], T_Result],
        crm: typing.Callable[[], T_Result],
        mktg: typing.Callable[[], T_Result],
        filestorage: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is CategoryEnum.HRIS:
            return hris()
        if self is CategoryEnum.ATS:
            return ats()
        if self is CategoryEnum.ACCOUNTING:
            return accounting()
        if self is CategoryEnum.TICKETING:
            return ticketing()
        if self is CategoryEnum.CRM:
            return crm()
        if self is CategoryEnum.MKTG:
            return mktg()
        if self is CategoryEnum.FILESTORAGE:
            return filestorage()
