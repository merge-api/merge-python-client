# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from . import (
        account_details,
        account_token,
        accounting_periods,
        accounts,
        addresses,
        async_passthrough,
        async_tasks,
        attachments,
        audit_trail,
        available_actions,
        balance_sheets,
        bank_feed_accounts,
        bank_feed_transactions,
        cash_flow_statements,
        company_info,
        contacts,
        credit_notes,
        delete_account,
        employees,
        expense_reports,
        expenses,
        field_mapping,
        force_resync,
        general_ledger_transactions,
        generate_key,
        income_statements,
        invoices,
        issues,
        items,
        journal_entries,
        link_token,
        linked_accounts,
        passthrough,
        payment_methods,
        payment_terms,
        payments,
        phone_numbers,
        projects,
        purchase_orders,
        regenerate_key,
        scopes,
        sync_status,
        tax_rates,
        tracking_categories,
        transactions,
        vendor_credits,
        webhook_receivers,
    )
    from .accounts import (
        AccountsListRequestRemoteFields,
        AccountsListRequestShowEnumOrigins,
        AccountsRetrieveRequestRemoteFields,
        AccountsRetrieveRequestShowEnumOrigins,
    )
    from .async_passthrough import AsyncPassthroughRetrieveResponse
    from .company_info import CompanyInfoListRequestExpand, CompanyInfoRetrieveRequestExpand
    from .contacts import ContactsListRequestExpand, ContactsRetrieveRequestExpand
    from .credit_notes import (
        CreditNotesListRequestExpand,
        CreditNotesListRequestRemoteFields,
        CreditNotesListRequestShowEnumOrigins,
        CreditNotesRetrieveRequestExpand,
        CreditNotesRetrieveRequestRemoteFields,
        CreditNotesRetrieveRequestShowEnumOrigins,
    )
    from .expense_reports import (
        ExpenseReportsLinesListRequestExpand,
        ExpenseReportsListRequestExpand,
        ExpenseReportsRetrieveRequestExpand,
    )
    from .expenses import ExpensesListRequestExpand, ExpensesRetrieveRequestExpand
    from .general_ledger_transactions import (
        GeneralLedgerTransactionsListRequestExpand,
        GeneralLedgerTransactionsRetrieveRequestExpand,
    )
    from .invoices import (
        InvoicesListRequestExpand,
        InvoicesListRequestStatus,
        InvoicesListRequestType,
        InvoicesRetrieveRequestExpand,
    )
    from .issues import IssuesListRequestStatus
    from .items import ItemsListRequestExpand, ItemsRetrieveRequestExpand
    from .journal_entries import JournalEntriesListRequestExpand, JournalEntriesRetrieveRequestExpand
    from .link_token import EndUserDetailsRequestLanguage
    from .linked_accounts import LinkedAccountsListRequestCategory
    from .payments import PaymentsListRequestExpand, PaymentsRetrieveRequestExpand
    from .projects import ProjectsListRequestExpand, ProjectsRetrieveRequestExpand
    from .purchase_orders import PurchaseOrdersListRequestExpand, PurchaseOrdersRetrieveRequestExpand
    from .transactions import TransactionsListRequestExpand, TransactionsRetrieveRequestExpand
    from .vendor_credits import VendorCreditsListRequestExpand, VendorCreditsRetrieveRequestExpand
_dynamic_imports: typing.Dict[str, str] = {
    "AccountsListRequestRemoteFields": ".accounts",
    "AccountsListRequestShowEnumOrigins": ".accounts",
    "AccountsRetrieveRequestRemoteFields": ".accounts",
    "AccountsRetrieveRequestShowEnumOrigins": ".accounts",
    "AsyncPassthroughRetrieveResponse": ".async_passthrough",
    "CompanyInfoListRequestExpand": ".company_info",
    "CompanyInfoRetrieveRequestExpand": ".company_info",
    "ContactsListRequestExpand": ".contacts",
    "ContactsRetrieveRequestExpand": ".contacts",
    "CreditNotesListRequestExpand": ".credit_notes",
    "CreditNotesListRequestRemoteFields": ".credit_notes",
    "CreditNotesListRequestShowEnumOrigins": ".credit_notes",
    "CreditNotesRetrieveRequestExpand": ".credit_notes",
    "CreditNotesRetrieveRequestRemoteFields": ".credit_notes",
    "CreditNotesRetrieveRequestShowEnumOrigins": ".credit_notes",
    "EndUserDetailsRequestLanguage": ".link_token",
    "ExpenseReportsLinesListRequestExpand": ".expense_reports",
    "ExpenseReportsListRequestExpand": ".expense_reports",
    "ExpenseReportsRetrieveRequestExpand": ".expense_reports",
    "ExpensesListRequestExpand": ".expenses",
    "ExpensesRetrieveRequestExpand": ".expenses",
    "GeneralLedgerTransactionsListRequestExpand": ".general_ledger_transactions",
    "GeneralLedgerTransactionsRetrieveRequestExpand": ".general_ledger_transactions",
    "InvoicesListRequestExpand": ".invoices",
    "InvoicesListRequestStatus": ".invoices",
    "InvoicesListRequestType": ".invoices",
    "InvoicesRetrieveRequestExpand": ".invoices",
    "IssuesListRequestStatus": ".issues",
    "ItemsListRequestExpand": ".items",
    "ItemsRetrieveRequestExpand": ".items",
    "JournalEntriesListRequestExpand": ".journal_entries",
    "JournalEntriesRetrieveRequestExpand": ".journal_entries",
    "LinkedAccountsListRequestCategory": ".linked_accounts",
    "PaymentsListRequestExpand": ".payments",
    "PaymentsRetrieveRequestExpand": ".payments",
    "ProjectsListRequestExpand": ".projects",
    "ProjectsRetrieveRequestExpand": ".projects",
    "PurchaseOrdersListRequestExpand": ".purchase_orders",
    "PurchaseOrdersRetrieveRequestExpand": ".purchase_orders",
    "TransactionsListRequestExpand": ".transactions",
    "TransactionsRetrieveRequestExpand": ".transactions",
    "VendorCreditsListRequestExpand": ".vendor_credits",
    "VendorCreditsRetrieveRequestExpand": ".vendor_credits",
    "account_details": ".",
    "account_token": ".",
    "accounting_periods": ".",
    "accounts": ".",
    "addresses": ".",
    "async_passthrough": ".",
    "async_tasks": ".",
    "attachments": ".",
    "audit_trail": ".",
    "available_actions": ".",
    "balance_sheets": ".",
    "bank_feed_accounts": ".",
    "bank_feed_transactions": ".",
    "cash_flow_statements": ".",
    "company_info": ".",
    "contacts": ".",
    "credit_notes": ".",
    "delete_account": ".",
    "employees": ".",
    "expense_reports": ".",
    "expenses": ".",
    "field_mapping": ".",
    "force_resync": ".",
    "general_ledger_transactions": ".",
    "generate_key": ".",
    "income_statements": ".",
    "invoices": ".",
    "issues": ".",
    "items": ".",
    "journal_entries": ".",
    "link_token": ".",
    "linked_accounts": ".",
    "passthrough": ".",
    "payment_methods": ".",
    "payment_terms": ".",
    "payments": ".",
    "phone_numbers": ".",
    "projects": ".",
    "purchase_orders": ".",
    "regenerate_key": ".",
    "scopes": ".",
    "sync_status": ".",
    "tax_rates": ".",
    "tracking_categories": ".",
    "transactions": ".",
    "vendor_credits": ".",
    "webhook_receivers": ".",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "AccountsListRequestRemoteFields",
    "AccountsListRequestShowEnumOrigins",
    "AccountsRetrieveRequestRemoteFields",
    "AccountsRetrieveRequestShowEnumOrigins",
    "AsyncPassthroughRetrieveResponse",
    "CompanyInfoListRequestExpand",
    "CompanyInfoRetrieveRequestExpand",
    "ContactsListRequestExpand",
    "ContactsRetrieveRequestExpand",
    "CreditNotesListRequestExpand",
    "CreditNotesListRequestRemoteFields",
    "CreditNotesListRequestShowEnumOrigins",
    "CreditNotesRetrieveRequestExpand",
    "CreditNotesRetrieveRequestRemoteFields",
    "CreditNotesRetrieveRequestShowEnumOrigins",
    "EndUserDetailsRequestLanguage",
    "ExpenseReportsLinesListRequestExpand",
    "ExpenseReportsListRequestExpand",
    "ExpenseReportsRetrieveRequestExpand",
    "ExpensesListRequestExpand",
    "ExpensesRetrieveRequestExpand",
    "GeneralLedgerTransactionsListRequestExpand",
    "GeneralLedgerTransactionsRetrieveRequestExpand",
    "InvoicesListRequestExpand",
    "InvoicesListRequestStatus",
    "InvoicesListRequestType",
    "InvoicesRetrieveRequestExpand",
    "IssuesListRequestStatus",
    "ItemsListRequestExpand",
    "ItemsRetrieveRequestExpand",
    "JournalEntriesListRequestExpand",
    "JournalEntriesRetrieveRequestExpand",
    "LinkedAccountsListRequestCategory",
    "PaymentsListRequestExpand",
    "PaymentsRetrieveRequestExpand",
    "ProjectsListRequestExpand",
    "ProjectsRetrieveRequestExpand",
    "PurchaseOrdersListRequestExpand",
    "PurchaseOrdersRetrieveRequestExpand",
    "TransactionsListRequestExpand",
    "TransactionsRetrieveRequestExpand",
    "VendorCreditsListRequestExpand",
    "VendorCreditsRetrieveRequestExpand",
    "account_details",
    "account_token",
    "accounting_periods",
    "accounts",
    "addresses",
    "async_passthrough",
    "async_tasks",
    "attachments",
    "audit_trail",
    "available_actions",
    "balance_sheets",
    "bank_feed_accounts",
    "bank_feed_transactions",
    "cash_flow_statements",
    "company_info",
    "contacts",
    "credit_notes",
    "delete_account",
    "employees",
    "expense_reports",
    "expenses",
    "field_mapping",
    "force_resync",
    "general_ledger_transactions",
    "generate_key",
    "income_statements",
    "invoices",
    "issues",
    "items",
    "journal_entries",
    "link_token",
    "linked_accounts",
    "passthrough",
    "payment_methods",
    "payment_terms",
    "payments",
    "phone_numbers",
    "projects",
    "purchase_orders",
    "regenerate_key",
    "scopes",
    "sync_status",
    "tax_rates",
    "tracking_categories",
    "transactions",
    "vendor_credits",
    "webhook_receivers",
]
