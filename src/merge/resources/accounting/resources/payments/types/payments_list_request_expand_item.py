# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PaymentsListRequestExpandItem(str, enum.Enum):
    ACCOUNT = "account"
    ACCOUNTING_PERIOD = "accounting_period"
    APPLIED_TO_LINES = "applied_to_lines"
    COMPANY = "company"
    CONTACT = "contact"
    PAYMENT_METHOD = "payment_method"
    TRACKING_CATEGORIES = "tracking_categories"

    def visit(
        self,
        account: typing.Callable[[], T_Result],
        accounting_period: typing.Callable[[], T_Result],
        applied_to_lines: typing.Callable[[], T_Result],
        company: typing.Callable[[], T_Result],
        contact: typing.Callable[[], T_Result],
        payment_method: typing.Callable[[], T_Result],
        tracking_categories: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PaymentsListRequestExpandItem.ACCOUNT:
            return account()
        if self is PaymentsListRequestExpandItem.ACCOUNTING_PERIOD:
            return accounting_period()
        if self is PaymentsListRequestExpandItem.APPLIED_TO_LINES:
            return applied_to_lines()
        if self is PaymentsListRequestExpandItem.COMPANY:
            return company()
        if self is PaymentsListRequestExpandItem.CONTACT:
            return contact()
        if self is PaymentsListRequestExpandItem.PAYMENT_METHOD:
            return payment_method()
        if self is PaymentsListRequestExpandItem.TRACKING_CATEGORIES:
            return tracking_categories()
