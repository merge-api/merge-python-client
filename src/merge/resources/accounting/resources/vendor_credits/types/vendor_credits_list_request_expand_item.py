# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class VendorCreditsListRequestExpandItem(str, enum.Enum):
    ACCOUNTING_PERIOD = "accounting_period"
    COMPANY = "company"
    LINES = "lines"
    TRACKING_CATEGORIES = "tracking_categories"
    VENDOR = "vendor"

    def visit(
        self,
        accounting_period: typing.Callable[[], T_Result],
        company: typing.Callable[[], T_Result],
        lines: typing.Callable[[], T_Result],
        tracking_categories: typing.Callable[[], T_Result],
        vendor: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is VendorCreditsListRequestExpandItem.ACCOUNTING_PERIOD:
            return accounting_period()
        if self is VendorCreditsListRequestExpandItem.COMPANY:
            return company()
        if self is VendorCreditsListRequestExpandItem.LINES:
            return lines()
        if self is VendorCreditsListRequestExpandItem.TRACKING_CATEGORIES:
            return tracking_categories()
        if self is VendorCreditsListRequestExpandItem.VENDOR:
            return vendor()
