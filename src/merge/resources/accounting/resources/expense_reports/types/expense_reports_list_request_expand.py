# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ExpenseReportsListRequestExpand(str, enum.Enum):
    ACCOUNTING_PERIOD = "accounting_period"
    ACCOUNTING_PERIOD_COMPANY = "accounting_period,company"
    COMPANY = "company"
    EMPLOYEE = "employee"
    EMPLOYEE_ACCOUNTING_PERIOD = "employee,accounting_period"
    EMPLOYEE_ACCOUNTING_PERIOD_COMPANY = "employee,accounting_period,company"
    EMPLOYEE_COMPANY = "employee,company"
    LINES = "lines"
    LINES_ACCOUNTING_PERIOD = "lines,accounting_period"
    LINES_ACCOUNTING_PERIOD_COMPANY = "lines,accounting_period,company"
    LINES_COMPANY = "lines,company"
    LINES_EMPLOYEE = "lines,employee"
    LINES_EMPLOYEE_ACCOUNTING_PERIOD = "lines,employee,accounting_period"
    LINES_EMPLOYEE_ACCOUNTING_PERIOD_COMPANY = "lines,employee,accounting_period,company"
    LINES_EMPLOYEE_COMPANY = "lines,employee,company"

    def visit(
        self,
        accounting_period: typing.Callable[[], T_Result],
        accounting_period_company: typing.Callable[[], T_Result],
        company: typing.Callable[[], T_Result],
        employee: typing.Callable[[], T_Result],
        employee_accounting_period: typing.Callable[[], T_Result],
        employee_accounting_period_company: typing.Callable[[], T_Result],
        employee_company: typing.Callable[[], T_Result],
        lines: typing.Callable[[], T_Result],
        lines_accounting_period: typing.Callable[[], T_Result],
        lines_accounting_period_company: typing.Callable[[], T_Result],
        lines_company: typing.Callable[[], T_Result],
        lines_employee: typing.Callable[[], T_Result],
        lines_employee_accounting_period: typing.Callable[[], T_Result],
        lines_employee_accounting_period_company: typing.Callable[[], T_Result],
        lines_employee_company: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ExpenseReportsListRequestExpand.ACCOUNTING_PERIOD:
            return accounting_period()
        if self is ExpenseReportsListRequestExpand.ACCOUNTING_PERIOD_COMPANY:
            return accounting_period_company()
        if self is ExpenseReportsListRequestExpand.COMPANY:
            return company()
        if self is ExpenseReportsListRequestExpand.EMPLOYEE:
            return employee()
        if self is ExpenseReportsListRequestExpand.EMPLOYEE_ACCOUNTING_PERIOD:
            return employee_accounting_period()
        if self is ExpenseReportsListRequestExpand.EMPLOYEE_ACCOUNTING_PERIOD_COMPANY:
            return employee_accounting_period_company()
        if self is ExpenseReportsListRequestExpand.EMPLOYEE_COMPANY:
            return employee_company()
        if self is ExpenseReportsListRequestExpand.LINES:
            return lines()
        if self is ExpenseReportsListRequestExpand.LINES_ACCOUNTING_PERIOD:
            return lines_accounting_period()
        if self is ExpenseReportsListRequestExpand.LINES_ACCOUNTING_PERIOD_COMPANY:
            return lines_accounting_period_company()
        if self is ExpenseReportsListRequestExpand.LINES_COMPANY:
            return lines_company()
        if self is ExpenseReportsListRequestExpand.LINES_EMPLOYEE:
            return lines_employee()
        if self is ExpenseReportsListRequestExpand.LINES_EMPLOYEE_ACCOUNTING_PERIOD:
            return lines_employee_accounting_period()
        if self is ExpenseReportsListRequestExpand.LINES_EMPLOYEE_ACCOUNTING_PERIOD_COMPANY:
            return lines_employee_accounting_period_company()
        if self is ExpenseReportsListRequestExpand.LINES_EMPLOYEE_COMPANY:
            return lines_employee_company()
