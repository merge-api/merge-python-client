# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

try:
    import pydantic.v1 as pydantic
except ImportError:
    import pydantic

from ....core.datetime_utils import serialize_datetime


class AccountingAttachmentRequest(pydantic.BaseModel):
    """
    # The Accounting Attachment Object
    ### Description
    The `AccountingAttachment` object is used to represent a company's attachments.

    ### Usage Example
    Fetch from the `LIST AccountingAttachments` endpoint and view a company's attachments.
    """

    file_name: typing.Optional[str] = pydantic.Field(description="The attachment's name.")
    file_url: typing.Optional[str] = pydantic.Field(description="The attachment's url.")
    company: typing.Optional[str] = pydantic.Field(description="The company the accounting attachment belongs to.")
    integration_params: typing.Optional[typing.Dict[str, typing.Any]]
    linked_account_params: typing.Optional[typing.Dict[str, typing.Any]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
