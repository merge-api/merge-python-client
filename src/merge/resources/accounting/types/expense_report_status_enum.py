# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ExpenseReportStatusEnum(str, enum.Enum):
    """
    * `DRAFT` - DRAFT
    * `SUBMITTED` - SUBMITTED
    * `APPROVED` - APPROVED
    * `REJECTED` - REJECTED
    """

    DRAFT = "DRAFT"
    SUBMITTED = "SUBMITTED"
    APPROVED = "APPROVED"
    REJECTED = "REJECTED"

    def visit(
        self,
        draft: typing.Callable[[], T_Result],
        submitted: typing.Callable[[], T_Result],
        approved: typing.Callable[[], T_Result],
        rejected: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ExpenseReportStatusEnum.DRAFT:
            return draft()
        if self is ExpenseReportStatusEnum.SUBMITTED:
            return submitted()
        if self is ExpenseReportStatusEnum.APPROVED:
            return approved()
        if self is ExpenseReportStatusEnum.REJECTED:
            return rejected()
