# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import datetime as dt
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class ReportItem(UniversalBaseModel):
    """
    # The ReportItem Object

    ### Description

    The `ReportItem` object is used to represent a report item for a Balance Sheet, Cash Flow Statement or Profit and Loss Report.

    ### Usage Example

    Fetch from the `GET BalanceSheet` endpoint and view the balance sheet's report items.
    """

    remote_id: typing.Optional[str] = pydantic.Field()
    """
    The third-party API ID of the matching object.
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field()
    """
    The datetime that this object was created by Merge.
    """

    modified_at: typing.Optional[dt.datetime] = pydantic.Field()
    """
    The datetime that this object was modified by Merge.
    """

    name: typing.Optional[str] = pydantic.Field()
    """
    The report item's name.
    """

    value: typing.Optional[float] = pydantic.Field()
    """
    The report item's value.
    """

    sub_items: typing.Optional[typing.List[typing.Dict[str, typing.Optional[typing.Any]]]]
    company: typing.Optional[str] = pydantic.Field()
    """
    The company the report item belongs to.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
