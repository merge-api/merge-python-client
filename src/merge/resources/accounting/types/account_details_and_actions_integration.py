# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
from .categories_enum import CategoriesEnum
from .model_operation import ModelOperation
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class AccountDetailsAndActionsIntegration(UniversalBaseModel):
    name: str
    categories: typing.List[CategoriesEnum]
    image: typing.Optional[str]
    square_image: typing.Optional[str]
    color: str
    slug: str
    passthrough_available: bool
    available_model_operations: typing.Optional[typing.List[ModelOperation]]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
