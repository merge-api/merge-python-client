# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import datetime as dt
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.pydantic_utilities import update_forward_refs


class CreditNoteApplyLineForInvoice(UniversalBaseModel):
    """
    # The CreditNoteApplyLine Object

    ### Description

    The `CreditNoteApplyLine` is attached to the CreditNote model.

    ### Usage Example

    Fetch from the `GET CreditNote` endpoint and view the invoice's applied to lines.
    """

    remote_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The third-party API ID of the matching object.
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The datetime that this object was created by Merge.
    """

    modified_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The datetime that this object was modified by Merge.
    """

    credit_note: typing.Optional["CreditNoteApplyLineForInvoiceCreditNote"] = None
    applied_date: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Date that the credit note is applied to the invoice.
    """

    applied_amount: typing.Optional[str] = pydantic.Field(default=None)
    """
    The amount of the Credit Note applied to the invoice.
    """

    remote_was_deleted: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .credit_note import CreditNote  # noqa: E402
from .credit_note_apply_line_for_credit_note import CreditNoteApplyLineForCreditNote  # noqa: E402
from .invoice import Invoice  # noqa: E402
from .vendor_credit import VendorCredit  # noqa: E402
from .vendor_credit_apply_line_for_invoice import VendorCreditApplyLineForInvoice  # noqa: E402
from .vendor_credit_apply_line_for_vendor_credit import VendorCreditApplyLineForVendorCredit  # noqa: E402
from .credit_note_apply_line_for_invoice_credit_note import CreditNoteApplyLineForInvoiceCreditNote  # noqa: E402

update_forward_refs(CreditNote, CreditNoteApplyLineForInvoice=CreditNoteApplyLineForInvoice)
update_forward_refs(CreditNoteApplyLineForCreditNote, CreditNoteApplyLineForInvoice=CreditNoteApplyLineForInvoice)
update_forward_refs(Invoice, CreditNoteApplyLineForInvoice=CreditNoteApplyLineForInvoice)
update_forward_refs(VendorCredit, CreditNoteApplyLineForInvoice=CreditNoteApplyLineForInvoice)
update_forward_refs(VendorCreditApplyLineForInvoice, CreditNoteApplyLineForInvoice=CreditNoteApplyLineForInvoice)
update_forward_refs(VendorCreditApplyLineForVendorCredit, CreditNoteApplyLineForInvoice=CreditNoteApplyLineForInvoice)
update_forward_refs(CreditNoteApplyLineForInvoice)
