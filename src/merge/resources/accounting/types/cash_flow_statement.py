# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.unchecked_base_model import UncheckedBaseModel
from .cash_flow_statement_company import CashFlowStatementCompany
from .remote_data import RemoteData
from .report_item import ReportItem


class CashFlowStatement(UncheckedBaseModel):
    """
    # The CashFlowStatement Object
    ### Description
    The `CashFlowStatement` object shows operating activities, investing activities, and financing activities over a period of time (month, quarter, or year).

    ### Usage Example
    Fetch from the `LIST CashFlowStatements` endpoint and view a company's cash flow statements.
    """

    id: typing.Optional[str] = None
    remote_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The third-party API ID of the matching object.
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The datetime that this object was created by Merge.
    """

    modified_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The datetime that this object was modified by Merge.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The cash flow statement's name.
    """

    currency: typing.Optional[typing.Optional[typing.Any]] = None
    company: typing.Optional[CashFlowStatementCompany] = pydantic.Field(default=None)
    """
    The company the cash flow statement belongs to.
    """

    start_period: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The cash flow statement's start period.
    """

    end_period: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The cash flow statement's end period.
    """

    cash_at_beginning_of_period: typing.Optional[float] = pydantic.Field(default=None)
    """
    Cash and cash equivalents at the beginning of the cash flow statement's period.
    """

    cash_at_end_of_period: typing.Optional[float] = pydantic.Field(default=None)
    """
    Cash and cash equivalents at the beginning of the cash flow statement's period.
    """

    operating_activities: typing.Optional[typing.List[ReportItem]] = None
    investing_activities: typing.Optional[typing.List[ReportItem]] = None
    financing_activities: typing.Optional[typing.List[ReportItem]] = None
    remote_generated_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The time that cash flow statement was generated by the accounting system.
    """

    remote_was_deleted: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/).
    """

    field_mappings: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    remote_data: typing.Optional[typing.List[RemoteData]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
