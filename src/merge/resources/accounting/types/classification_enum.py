# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ClassificationEnum(str, enum.Enum):
    """
    * `ASSET` - ASSET
    * `EQUITY` - EQUITY
    * `EXPENSE` - EXPENSE
    * `LIABILITY` - LIABILITY
    * `REVENUE` - REVENUE
    """

    ASSET = "ASSET"
    EQUITY = "EQUITY"
    EXPENSE = "EXPENSE"
    LIABILITY = "LIABILITY"
    REVENUE = "REVENUE"

    def visit(
        self,
        asset: typing.Callable[[], T_Result],
        equity: typing.Callable[[], T_Result],
        expense: typing.Callable[[], T_Result],
        liability: typing.Callable[[], T_Result],
        revenue: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ClassificationEnum.ASSET:
            return asset()
        if self is ClassificationEnum.EQUITY:
            return equity()
        if self is ClassificationEnum.EXPENSE:
            return expense()
        if self is ClassificationEnum.LIABILITY:
            return liability()
        if self is ClassificationEnum.REVENUE:
            return revenue()
