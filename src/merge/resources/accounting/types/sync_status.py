# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
import datetime as dt
from .sync_status_status_enum import SyncStatusStatusEnum
from .selective_sync_configurations_usage_enum import SelectiveSyncConfigurationsUsageEnum
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class SyncStatus(UniversalBaseModel):
    """
    # The SyncStatus Object

    ### Description

    The `SyncStatus` object is used to represent the syncing state of an account

    ### Usage Example

    View the `SyncStatus` for an account to see how recently its models were synced.
    """

    model_name: str
    model_id: str
    last_sync_start: typing.Optional[dt.datetime]
    next_sync_start: typing.Optional[dt.datetime]
    status: SyncStatusStatusEnum
    is_initial_sync: bool
    selective_sync_configurations_usage: typing.Optional[SelectiveSyncConfigurationsUsageEnum]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
