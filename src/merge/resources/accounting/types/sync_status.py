# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ....core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .selective_sync_configurations_usage_enum import SelectiveSyncConfigurationsUsageEnum
from .sync_status_status_enum import SyncStatusStatusEnum


class SyncStatus(pydantic_v1.BaseModel):
    """
    # The SyncStatus Object

    ### Description

    The `SyncStatus` object is used to represent the syncing state of an account

    ### Usage Example

    View the `SyncStatus` for an account to see how recently its models were synced.
    """

    model_name: str
    model_id: str
    last_sync_start: typing.Optional[dt.datetime]
    next_sync_start: typing.Optional[dt.datetime]
    status: SyncStatusStatusEnum
    is_initial_sync: bool
    selective_sync_configurations_usage: typing.Optional[SelectiveSyncConfigurationsUsageEnum]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.forbid
        json_encoders = {dt.datetime: serialize_datetime}
