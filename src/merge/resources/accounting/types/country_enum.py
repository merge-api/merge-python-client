# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class CountryEnum(str, enum.Enum):
    """
    * `AF` - Afghanistan
    * `AX` - Åland Islands
    * `AL` - Albania
    * `DZ` - Algeria
    * `AS` - American Samoa
    * `AD` - Andorra
    * `AO` - Angola
    * `AI` - Anguilla
    * `AQ` - Antarctica
    * `AG` - Antigua and Barbuda
    * `AR` - Argentina
    * `AM` - Armenia
    * `AW` - Aruba
    * `AU` - Australia
    * `AT` - Austria
    * `AZ` - Azerbaijan
    * `BS` - Bahamas
    * `BH` - Bahrain
    * `BD` - Bangladesh
    * `BB` - Barbados
    * `BY` - Belarus
    * `BE` - Belgium
    * `BZ` - Belize
    * `BJ` - Benin
    * `BM` - Bermuda
    * `BT` - Bhutan
    * `BO` - Bolivia
    * `BQ` - Bonaire, Sint Eustatius and Saba
    * `BA` - Bosnia and Herzegovina
    * `BW` - Botswana
    * `BV` - Bouvet Island
    * `BR` - Brazil
    * `IO` - British Indian Ocean Territory
    * `BN` - Brunei
    * `BG` - Bulgaria
    * `BF` - Burkina Faso
    * `BI` - Burundi
    * `CV` - Cabo Verde
    * `KH` - Cambodia
    * `CM` - Cameroon
    * `CA` - Canada
    * `KY` - Cayman Islands
    * `CF` - Central African Republic
    * `TD` - Chad
    * `CL` - Chile
    * `CN` - China
    * `CX` - Christmas Island
    * `CC` - Cocos (Keeling) Islands
    * `CO` - Colombia
    * `KM` - Comoros
    * `CG` - Congo
    * `CD` - Congo (the Democratic Republic of the)
    * `CK` - Cook Islands
    * `CR` - Costa Rica
    * `CI` - Côte d'Ivoire
    * `HR` - Croatia
    * `CU` - Cuba
    * `CW` - Curaçao
    * `CY` - Cyprus
    * `CZ` - Czechia
    * `DK` - Denmark
    * `DJ` - Djibouti
    * `DM` - Dominica
    * `DO` - Dominican Republic
    * `EC` - Ecuador
    * `EG` - Egypt
    * `SV` - El Salvador
    * `GQ` - Equatorial Guinea
    * `ER` - Eritrea
    * `EE` - Estonia
    * `SZ` - Eswatini
    * `ET` - Ethiopia
    * `FK` - Falkland Islands (Malvinas)
    * `FO` - Faroe Islands
    * `FJ` - Fiji
    * `FI` - Finland
    * `FR` - France
    * `GF` - French Guiana
    * `PF` - French Polynesia
    * `TF` - French Southern Territories
    * `GA` - Gabon
    * `GM` - Gambia
    * `GE` - Georgia
    * `DE` - Germany
    * `GH` - Ghana
    * `GI` - Gibraltar
    * `GR` - Greece
    * `GL` - Greenland
    * `GD` - Grenada
    * `GP` - Guadeloupe
    * `GU` - Guam
    * `GT` - Guatemala
    * `GG` - Guernsey
    * `GN` - Guinea
    * `GW` - Guinea-Bissau
    * `GY` - Guyana
    * `HT` - Haiti
    * `HM` - Heard Island and McDonald Islands
    * `VA` - Holy See
    * `HN` - Honduras
    * `HK` - Hong Kong
    * `HU` - Hungary
    * `IS` - Iceland
    * `IN` - India
    * `ID` - Indonesia
    * `IR` - Iran
    * `IQ` - Iraq
    * `IE` - Ireland
    * `IM` - Isle of Man
    * `IL` - Israel
    * `IT` - Italy
    * `JM` - Jamaica
    * `JP` - Japan
    * `JE` - Jersey
    * `JO` - Jordan
    * `KZ` - Kazakhstan
    * `KE` - Kenya
    * `KI` - Kiribati
    * `KW` - Kuwait
    * `KG` - Kyrgyzstan
    * `LA` - Laos
    * `LV` - Latvia
    * `LB` - Lebanon
    * `LS` - Lesotho
    * `LR` - Liberia
    * `LY` - Libya
    * `LI` - Liechtenstein
    * `LT` - Lithuania
    * `LU` - Luxembourg
    * `MO` - Macao
    * `MG` - Madagascar
    * `MW` - Malawi
    * `MY` - Malaysia
    * `MV` - Maldives
    * `ML` - Mali
    * `MT` - Malta
    * `MH` - Marshall Islands
    * `MQ` - Martinique
    * `MR` - Mauritania
    * `MU` - Mauritius
    * `YT` - Mayotte
    * `MX` - Mexico
    * `FM` - Micronesia (Federated States of)
    * `MD` - Moldova
    * `MC` - Monaco
    * `MN` - Mongolia
    * `ME` - Montenegro
    * `MS` - Montserrat
    * `MA` - Morocco
    * `MZ` - Mozambique
    * `MM` - Myanmar
    * `NA` - Namibia
    * `NR` - Nauru
    * `NP` - Nepal
    * `NL` - Netherlands
    * `NC` - New Caledonia
    * `NZ` - New Zealand
    * `NI` - Nicaragua
    * `NE` - Niger
    * `NG` - Nigeria
    * `NU` - Niue
    * `NF` - Norfolk Island
    * `KP` - North Korea
    * `MK` - North Macedonia
    * `MP` - Northern Mariana Islands
    * `NO` - Norway
    * `OM` - Oman
    * `PK` - Pakistan
    * `PW` - Palau
    * `PS` - Palestine, State of
    * `PA` - Panama
    * `PG` - Papua New Guinea
    * `PY` - Paraguay
    * `PE` - Peru
    * `PH` - Philippines
    * `PN` - Pitcairn
    * `PL` - Poland
    * `PT` - Portugal
    * `PR` - Puerto Rico
    * `QA` - Qatar
    * `RE` - Réunion
    * `RO` - Romania
    * `RU` - Russia
    * `RW` - Rwanda
    * `BL` - Saint Barthélemy
    * `SH` - Saint Helena, Ascension and Tristan da Cunha
    * `KN` - Saint Kitts and Nevis
    * `LC` - Saint Lucia
    * `MF` - Saint Martin (French part)
    * `PM` - Saint Pierre and Miquelon
    * `VC` - Saint Vincent and the Grenadines
    * `WS` - Samoa
    * `SM` - San Marino
    * `ST` - Sao Tome and Principe
    * `SA` - Saudi Arabia
    * `SN` - Senegal
    * `RS` - Serbia
    * `SC` - Seychelles
    * `SL` - Sierra Leone
    * `SG` - Singapore
    * `SX` - Sint Maarten (Dutch part)
    * `SK` - Slovakia
    * `SI` - Slovenia
    * `SB` - Solomon Islands
    * `SO` - Somalia
    * `ZA` - South Africa
    * `GS` - South Georgia and the South Sandwich Islands
    * `KR` - South Korea
    * `SS` - South Sudan
    * `ES` - Spain
    * `LK` - Sri Lanka
    * `SD` - Sudan
    * `SR` - Suriname
    * `SJ` - Svalbard and Jan Mayen
    * `SE` - Sweden
    * `CH` - Switzerland
    * `SY` - Syria
    * `TW` - Taiwan
    * `TJ` - Tajikistan
    * `TZ` - Tanzania
    * `TH` - Thailand
    * `TL` - Timor-Leste
    * `TG` - Togo
    * `TK` - Tokelau
    * `TO` - Tonga
    * `TT` - Trinidad and Tobago
    * `TN` - Tunisia
    * `TR` - Turkey
    * `TM` - Turkmenistan
    * `TC` - Turks and Caicos Islands
    * `TV` - Tuvalu
    * `UG` - Uganda
    * `UA` - Ukraine
    * `AE` - United Arab Emirates
    * `GB` - United Kingdom
    * `UM` - United States Minor Outlying Islands
    * `US` - United States of America
    * `UY` - Uruguay
    * `UZ` - Uzbekistan
    * `VU` - Vanuatu
    * `VE` - Venezuela
    * `VN` - Vietnam
    * `VG` - Virgin Islands (British)
    * `VI` - Virgin Islands (U.S.)
    * `WF` - Wallis and Futuna
    * `EH` - Western Sahara
    * `YE` - Yemen
    * `ZM` - Zambia
    * `ZW` - Zimbabwe
    """

    AF = "AF"
    AX = "AX"
    AL = "AL"
    DZ = "DZ"
    AS = "AS"
    AD = "AD"
    AO = "AO"
    AI = "AI"
    AQ = "AQ"
    AG = "AG"
    AR = "AR"
    AM = "AM"
    AW = "AW"
    AU = "AU"
    AT = "AT"
    AZ = "AZ"
    BS = "BS"
    BH = "BH"
    BD = "BD"
    BB = "BB"
    BY = "BY"
    BE = "BE"
    BZ = "BZ"
    BJ = "BJ"
    BM = "BM"
    BT = "BT"
    BO = "BO"
    BQ = "BQ"
    BA = "BA"
    BW = "BW"
    BV = "BV"
    BR = "BR"
    IO = "IO"
    BN = "BN"
    BG = "BG"
    BF = "BF"
    BI = "BI"
    CV = "CV"
    KH = "KH"
    CM = "CM"
    CA = "CA"
    KY = "KY"
    CF = "CF"
    TD = "TD"
    CL = "CL"
    CN = "CN"
    CX = "CX"
    CC = "CC"
    CO = "CO"
    KM = "KM"
    CG = "CG"
    CD = "CD"
    CK = "CK"
    CR = "CR"
    CI = "CI"
    HR = "HR"
    CU = "CU"
    CW = "CW"
    CY = "CY"
    CZ = "CZ"
    DK = "DK"
    DJ = "DJ"
    DM = "DM"
    DO = "DO"
    EC = "EC"
    EG = "EG"
    SV = "SV"
    GQ = "GQ"
    ER = "ER"
    EE = "EE"
    SZ = "SZ"
    ET = "ET"
    FK = "FK"
    FO = "FO"
    FJ = "FJ"
    FI = "FI"
    FR = "FR"
    GF = "GF"
    PF = "PF"
    TF = "TF"
    GA = "GA"
    GM = "GM"
    GE = "GE"
    DE = "DE"
    GH = "GH"
    GI = "GI"
    GR = "GR"
    GL = "GL"
    GD = "GD"
    GP = "GP"
    GU = "GU"
    GT = "GT"
    GG = "GG"
    GN = "GN"
    GW = "GW"
    GY = "GY"
    HT = "HT"
    HM = "HM"
    VA = "VA"
    HN = "HN"
    HK = "HK"
    HU = "HU"
    IS = "IS"
    IN = "IN"
    ID = "ID"
    IR = "IR"
    IQ = "IQ"
    IE = "IE"
    IM = "IM"
    IL = "IL"
    IT = "IT"
    JM = "JM"
    JP = "JP"
    JE = "JE"
    JO = "JO"
    KZ = "KZ"
    KE = "KE"
    KI = "KI"
    KW = "KW"
    KG = "KG"
    LA = "LA"
    LV = "LV"
    LB = "LB"
    LS = "LS"
    LR = "LR"
    LY = "LY"
    LI = "LI"
    LT = "LT"
    LU = "LU"
    MO = "MO"
    MG = "MG"
    MW = "MW"
    MY = "MY"
    MV = "MV"
    ML = "ML"
    MT = "MT"
    MH = "MH"
    MQ = "MQ"
    MR = "MR"
    MU = "MU"
    YT = "YT"
    MX = "MX"
    FM = "FM"
    MD = "MD"
    MC = "MC"
    MN = "MN"
    ME = "ME"
    MS = "MS"
    MA = "MA"
    MZ = "MZ"
    MM = "MM"
    NA = "NA"
    NR = "NR"
    NP = "NP"
    NL = "NL"
    NC = "NC"
    NZ = "NZ"
    NI = "NI"
    NE = "NE"
    NG = "NG"
    NU = "NU"
    NF = "NF"
    KP = "KP"
    MK = "MK"
    MP = "MP"
    NO = "NO"
    OM = "OM"
    PK = "PK"
    PW = "PW"
    PS = "PS"
    PA = "PA"
    PG = "PG"
    PY = "PY"
    PE = "PE"
    PH = "PH"
    PN = "PN"
    PL = "PL"
    PT = "PT"
    PR = "PR"
    QA = "QA"
    RE = "RE"
    RO = "RO"
    RU = "RU"
    RW = "RW"
    BL = "BL"
    SH = "SH"
    KN = "KN"
    LC = "LC"
    MF = "MF"
    PM = "PM"
    VC = "VC"
    WS = "WS"
    SM = "SM"
    ST = "ST"
    SA = "SA"
    SN = "SN"
    RS = "RS"
    SC = "SC"
    SL = "SL"
    SG = "SG"
    SX = "SX"
    SK = "SK"
    SI = "SI"
    SB = "SB"
    SO = "SO"
    ZA = "ZA"
    GS = "GS"
    KR = "KR"
    SS = "SS"
    ES = "ES"
    LK = "LK"
    SD = "SD"
    SR = "SR"
    SJ = "SJ"
    SE = "SE"
    CH = "CH"
    SY = "SY"
    TW = "TW"
    TJ = "TJ"
    TZ = "TZ"
    TH = "TH"
    TL = "TL"
    TG = "TG"
    TK = "TK"
    TO = "TO"
    TT = "TT"
    TN = "TN"
    TR = "TR"
    TM = "TM"
    TC = "TC"
    TV = "TV"
    UG = "UG"
    UA = "UA"
    AE = "AE"
    GB = "GB"
    UM = "UM"
    US = "US"
    UY = "UY"
    UZ = "UZ"
    VU = "VU"
    VE = "VE"
    VN = "VN"
    VG = "VG"
    VI = "VI"
    WF = "WF"
    EH = "EH"
    YE = "YE"
    ZM = "ZM"
    ZW = "ZW"

    def visit(
        self,
        af: typing.Callable[[], T_Result],
        ax: typing.Callable[[], T_Result],
        al: typing.Callable[[], T_Result],
        dz: typing.Callable[[], T_Result],
        as_: typing.Callable[[], T_Result],
        ad: typing.Callable[[], T_Result],
        ao: typing.Callable[[], T_Result],
        ai: typing.Callable[[], T_Result],
        aq: typing.Callable[[], T_Result],
        ag: typing.Callable[[], T_Result],
        ar: typing.Callable[[], T_Result],
        am: typing.Callable[[], T_Result],
        aw: typing.Callable[[], T_Result],
        au: typing.Callable[[], T_Result],
        at: typing.Callable[[], T_Result],
        az: typing.Callable[[], T_Result],
        bs: typing.Callable[[], T_Result],
        bh: typing.Callable[[], T_Result],
        bd: typing.Callable[[], T_Result],
        bb: typing.Callable[[], T_Result],
        by: typing.Callable[[], T_Result],
        be: typing.Callable[[], T_Result],
        bz: typing.Callable[[], T_Result],
        bj: typing.Callable[[], T_Result],
        bm: typing.Callable[[], T_Result],
        bt: typing.Callable[[], T_Result],
        bo: typing.Callable[[], T_Result],
        bq: typing.Callable[[], T_Result],
        ba: typing.Callable[[], T_Result],
        bw: typing.Callable[[], T_Result],
        bv: typing.Callable[[], T_Result],
        br: typing.Callable[[], T_Result],
        io: typing.Callable[[], T_Result],
        bn: typing.Callable[[], T_Result],
        bg: typing.Callable[[], T_Result],
        bf: typing.Callable[[], T_Result],
        bi: typing.Callable[[], T_Result],
        cv: typing.Callable[[], T_Result],
        kh: typing.Callable[[], T_Result],
        cm: typing.Callable[[], T_Result],
        ca: typing.Callable[[], T_Result],
        ky: typing.Callable[[], T_Result],
        cf: typing.Callable[[], T_Result],
        td: typing.Callable[[], T_Result],
        cl: typing.Callable[[], T_Result],
        cn: typing.Callable[[], T_Result],
        cx: typing.Callable[[], T_Result],
        cc: typing.Callable[[], T_Result],
        co: typing.Callable[[], T_Result],
        km: typing.Callable[[], T_Result],
        cg: typing.Callable[[], T_Result],
        cd: typing.Callable[[], T_Result],
        ck: typing.Callable[[], T_Result],
        cr: typing.Callable[[], T_Result],
        ci: typing.Callable[[], T_Result],
        hr: typing.Callable[[], T_Result],
        cu: typing.Callable[[], T_Result],
        cw: typing.Callable[[], T_Result],
        cy: typing.Callable[[], T_Result],
        cz: typing.Callable[[], T_Result],
        dk: typing.Callable[[], T_Result],
        dj: typing.Callable[[], T_Result],
        dm: typing.Callable[[], T_Result],
        do: typing.Callable[[], T_Result],
        ec: typing.Callable[[], T_Result],
        eg: typing.Callable[[], T_Result],
        sv: typing.Callable[[], T_Result],
        gq: typing.Callable[[], T_Result],
        er: typing.Callable[[], T_Result],
        ee: typing.Callable[[], T_Result],
        sz: typing.Callable[[], T_Result],
        et: typing.Callable[[], T_Result],
        fk: typing.Callable[[], T_Result],
        fo: typing.Callable[[], T_Result],
        fj: typing.Callable[[], T_Result],
        fi: typing.Callable[[], T_Result],
        fr: typing.Callable[[], T_Result],
        gf: typing.Callable[[], T_Result],
        pf: typing.Callable[[], T_Result],
        tf: typing.Callable[[], T_Result],
        ga: typing.Callable[[], T_Result],
        gm: typing.Callable[[], T_Result],
        ge: typing.Callable[[], T_Result],
        de: typing.Callable[[], T_Result],
        gh: typing.Callable[[], T_Result],
        gi: typing.Callable[[], T_Result],
        gr: typing.Callable[[], T_Result],
        gl: typing.Callable[[], T_Result],
        gd: typing.Callable[[], T_Result],
        gp: typing.Callable[[], T_Result],
        gu: typing.Callable[[], T_Result],
        gt: typing.Callable[[], T_Result],
        gg: typing.Callable[[], T_Result],
        gn: typing.Callable[[], T_Result],
        gw: typing.Callable[[], T_Result],
        gy: typing.Callable[[], T_Result],
        ht: typing.Callable[[], T_Result],
        hm: typing.Callable[[], T_Result],
        va: typing.Callable[[], T_Result],
        hn: typing.Callable[[], T_Result],
        hk: typing.Callable[[], T_Result],
        hu: typing.Callable[[], T_Result],
        is_: typing.Callable[[], T_Result],
        in_: typing.Callable[[], T_Result],
        id: typing.Callable[[], T_Result],
        ir: typing.Callable[[], T_Result],
        iq: typing.Callable[[], T_Result],
        ie: typing.Callable[[], T_Result],
        im: typing.Callable[[], T_Result],
        il: typing.Callable[[], T_Result],
        it: typing.Callable[[], T_Result],
        jm: typing.Callable[[], T_Result],
        jp: typing.Callable[[], T_Result],
        je: typing.Callable[[], T_Result],
        jo: typing.Callable[[], T_Result],
        kz: typing.Callable[[], T_Result],
        ke: typing.Callable[[], T_Result],
        ki: typing.Callable[[], T_Result],
        kw: typing.Callable[[], T_Result],
        kg: typing.Callable[[], T_Result],
        la: typing.Callable[[], T_Result],
        lv: typing.Callable[[], T_Result],
        lb: typing.Callable[[], T_Result],
        ls: typing.Callable[[], T_Result],
        lr: typing.Callable[[], T_Result],
        ly: typing.Callable[[], T_Result],
        li: typing.Callable[[], T_Result],
        lt: typing.Callable[[], T_Result],
        lu: typing.Callable[[], T_Result],
        mo: typing.Callable[[], T_Result],
        mg: typing.Callable[[], T_Result],
        mw: typing.Callable[[], T_Result],
        my: typing.Callable[[], T_Result],
        mv: typing.Callable[[], T_Result],
        ml: typing.Callable[[], T_Result],
        mt: typing.Callable[[], T_Result],
        mh: typing.Callable[[], T_Result],
        mq: typing.Callable[[], T_Result],
        mr: typing.Callable[[], T_Result],
        mu: typing.Callable[[], T_Result],
        yt: typing.Callable[[], T_Result],
        mx: typing.Callable[[], T_Result],
        fm: typing.Callable[[], T_Result],
        md: typing.Callable[[], T_Result],
        mc: typing.Callable[[], T_Result],
        mn: typing.Callable[[], T_Result],
        me: typing.Callable[[], T_Result],
        ms: typing.Callable[[], T_Result],
        ma: typing.Callable[[], T_Result],
        mz: typing.Callable[[], T_Result],
        mm: typing.Callable[[], T_Result],
        na: typing.Callable[[], T_Result],
        nr: typing.Callable[[], T_Result],
        np: typing.Callable[[], T_Result],
        nl: typing.Callable[[], T_Result],
        nc: typing.Callable[[], T_Result],
        nz: typing.Callable[[], T_Result],
        ni: typing.Callable[[], T_Result],
        ne: typing.Callable[[], T_Result],
        ng: typing.Callable[[], T_Result],
        nu: typing.Callable[[], T_Result],
        nf: typing.Callable[[], T_Result],
        kp: typing.Callable[[], T_Result],
        mk: typing.Callable[[], T_Result],
        mp: typing.Callable[[], T_Result],
        no: typing.Callable[[], T_Result],
        om: typing.Callable[[], T_Result],
        pk: typing.Callable[[], T_Result],
        pw: typing.Callable[[], T_Result],
        ps: typing.Callable[[], T_Result],
        pa: typing.Callable[[], T_Result],
        pg: typing.Callable[[], T_Result],
        py: typing.Callable[[], T_Result],
        pe: typing.Callable[[], T_Result],
        ph: typing.Callable[[], T_Result],
        pn: typing.Callable[[], T_Result],
        pl: typing.Callable[[], T_Result],
        pt: typing.Callable[[], T_Result],
        pr: typing.Callable[[], T_Result],
        qa: typing.Callable[[], T_Result],
        re: typing.Callable[[], T_Result],
        ro: typing.Callable[[], T_Result],
        ru: typing.Callable[[], T_Result],
        rw: typing.Callable[[], T_Result],
        bl: typing.Callable[[], T_Result],
        sh: typing.Callable[[], T_Result],
        kn: typing.Callable[[], T_Result],
        lc: typing.Callable[[], T_Result],
        mf: typing.Callable[[], T_Result],
        pm: typing.Callable[[], T_Result],
        vc: typing.Callable[[], T_Result],
        ws: typing.Callable[[], T_Result],
        sm: typing.Callable[[], T_Result],
        st: typing.Callable[[], T_Result],
        sa: typing.Callable[[], T_Result],
        sn: typing.Callable[[], T_Result],
        rs: typing.Callable[[], T_Result],
        sc: typing.Callable[[], T_Result],
        sl: typing.Callable[[], T_Result],
        sg: typing.Callable[[], T_Result],
        sx: typing.Callable[[], T_Result],
        sk: typing.Callable[[], T_Result],
        si: typing.Callable[[], T_Result],
        sb: typing.Callable[[], T_Result],
        so: typing.Callable[[], T_Result],
        za: typing.Callable[[], T_Result],
        gs: typing.Callable[[], T_Result],
        kr: typing.Callable[[], T_Result],
        ss: typing.Callable[[], T_Result],
        es: typing.Callable[[], T_Result],
        lk: typing.Callable[[], T_Result],
        sd: typing.Callable[[], T_Result],
        sr: typing.Callable[[], T_Result],
        sj: typing.Callable[[], T_Result],
        se: typing.Callable[[], T_Result],
        ch: typing.Callable[[], T_Result],
        sy: typing.Callable[[], T_Result],
        tw: typing.Callable[[], T_Result],
        tj: typing.Callable[[], T_Result],
        tz: typing.Callable[[], T_Result],
        th: typing.Callable[[], T_Result],
        tl: typing.Callable[[], T_Result],
        tg: typing.Callable[[], T_Result],
        tk: typing.Callable[[], T_Result],
        to: typing.Callable[[], T_Result],
        tt: typing.Callable[[], T_Result],
        tn: typing.Callable[[], T_Result],
        tr: typing.Callable[[], T_Result],
        tm: typing.Callable[[], T_Result],
        tc: typing.Callable[[], T_Result],
        tv: typing.Callable[[], T_Result],
        ug: typing.Callable[[], T_Result],
        ua: typing.Callable[[], T_Result],
        ae: typing.Callable[[], T_Result],
        gb: typing.Callable[[], T_Result],
        um: typing.Callable[[], T_Result],
        us: typing.Callable[[], T_Result],
        uy: typing.Callable[[], T_Result],
        uz: typing.Callable[[], T_Result],
        vu: typing.Callable[[], T_Result],
        ve: typing.Callable[[], T_Result],
        vn: typing.Callable[[], T_Result],
        vg: typing.Callable[[], T_Result],
        vi: typing.Callable[[], T_Result],
        wf: typing.Callable[[], T_Result],
        eh: typing.Callable[[], T_Result],
        ye: typing.Callable[[], T_Result],
        zm: typing.Callable[[], T_Result],
        zw: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is CountryEnum.AF:
            return af()
        if self is CountryEnum.AX:
            return ax()
        if self is CountryEnum.AL:
            return al()
        if self is CountryEnum.DZ:
            return dz()
        if self is CountryEnum.AS:
            return as_()
        if self is CountryEnum.AD:
            return ad()
        if self is CountryEnum.AO:
            return ao()
        if self is CountryEnum.AI:
            return ai()
        if self is CountryEnum.AQ:
            return aq()
        if self is CountryEnum.AG:
            return ag()
        if self is CountryEnum.AR:
            return ar()
        if self is CountryEnum.AM:
            return am()
        if self is CountryEnum.AW:
            return aw()
        if self is CountryEnum.AU:
            return au()
        if self is CountryEnum.AT:
            return at()
        if self is CountryEnum.AZ:
            return az()
        if self is CountryEnum.BS:
            return bs()
        if self is CountryEnum.BH:
            return bh()
        if self is CountryEnum.BD:
            return bd()
        if self is CountryEnum.BB:
            return bb()
        if self is CountryEnum.BY:
            return by()
        if self is CountryEnum.BE:
            return be()
        if self is CountryEnum.BZ:
            return bz()
        if self is CountryEnum.BJ:
            return bj()
        if self is CountryEnum.BM:
            return bm()
        if self is CountryEnum.BT:
            return bt()
        if self is CountryEnum.BO:
            return bo()
        if self is CountryEnum.BQ:
            return bq()
        if self is CountryEnum.BA:
            return ba()
        if self is CountryEnum.BW:
            return bw()
        if self is CountryEnum.BV:
            return bv()
        if self is CountryEnum.BR:
            return br()
        if self is CountryEnum.IO:
            return io()
        if self is CountryEnum.BN:
            return bn()
        if self is CountryEnum.BG:
            return bg()
        if self is CountryEnum.BF:
            return bf()
        if self is CountryEnum.BI:
            return bi()
        if self is CountryEnum.CV:
            return cv()
        if self is CountryEnum.KH:
            return kh()
        if self is CountryEnum.CM:
            return cm()
        if self is CountryEnum.CA:
            return ca()
        if self is CountryEnum.KY:
            return ky()
        if self is CountryEnum.CF:
            return cf()
        if self is CountryEnum.TD:
            return td()
        if self is CountryEnum.CL:
            return cl()
        if self is CountryEnum.CN:
            return cn()
        if self is CountryEnum.CX:
            return cx()
        if self is CountryEnum.CC:
            return cc()
        if self is CountryEnum.CO:
            return co()
        if self is CountryEnum.KM:
            return km()
        if self is CountryEnum.CG:
            return cg()
        if self is CountryEnum.CD:
            return cd()
        if self is CountryEnum.CK:
            return ck()
        if self is CountryEnum.CR:
            return cr()
        if self is CountryEnum.CI:
            return ci()
        if self is CountryEnum.HR:
            return hr()
        if self is CountryEnum.CU:
            return cu()
        if self is CountryEnum.CW:
            return cw()
        if self is CountryEnum.CY:
            return cy()
        if self is CountryEnum.CZ:
            return cz()
        if self is CountryEnum.DK:
            return dk()
        if self is CountryEnum.DJ:
            return dj()
        if self is CountryEnum.DM:
            return dm()
        if self is CountryEnum.DO:
            return do()
        if self is CountryEnum.EC:
            return ec()
        if self is CountryEnum.EG:
            return eg()
        if self is CountryEnum.SV:
            return sv()
        if self is CountryEnum.GQ:
            return gq()
        if self is CountryEnum.ER:
            return er()
        if self is CountryEnum.EE:
            return ee()
        if self is CountryEnum.SZ:
            return sz()
        if self is CountryEnum.ET:
            return et()
        if self is CountryEnum.FK:
            return fk()
        if self is CountryEnum.FO:
            return fo()
        if self is CountryEnum.FJ:
            return fj()
        if self is CountryEnum.FI:
            return fi()
        if self is CountryEnum.FR:
            return fr()
        if self is CountryEnum.GF:
            return gf()
        if self is CountryEnum.PF:
            return pf()
        if self is CountryEnum.TF:
            return tf()
        if self is CountryEnum.GA:
            return ga()
        if self is CountryEnum.GM:
            return gm()
        if self is CountryEnum.GE:
            return ge()
        if self is CountryEnum.DE:
            return de()
        if self is CountryEnum.GH:
            return gh()
        if self is CountryEnum.GI:
            return gi()
        if self is CountryEnum.GR:
            return gr()
        if self is CountryEnum.GL:
            return gl()
        if self is CountryEnum.GD:
            return gd()
        if self is CountryEnum.GP:
            return gp()
        if self is CountryEnum.GU:
            return gu()
        if self is CountryEnum.GT:
            return gt()
        if self is CountryEnum.GG:
            return gg()
        if self is CountryEnum.GN:
            return gn()
        if self is CountryEnum.GW:
            return gw()
        if self is CountryEnum.GY:
            return gy()
        if self is CountryEnum.HT:
            return ht()
        if self is CountryEnum.HM:
            return hm()
        if self is CountryEnum.VA:
            return va()
        if self is CountryEnum.HN:
            return hn()
        if self is CountryEnum.HK:
            return hk()
        if self is CountryEnum.HU:
            return hu()
        if self is CountryEnum.IS:
            return is_()
        if self is CountryEnum.IN:
            return in_()
        if self is CountryEnum.ID:
            return id()
        if self is CountryEnum.IR:
            return ir()
        if self is CountryEnum.IQ:
            return iq()
        if self is CountryEnum.IE:
            return ie()
        if self is CountryEnum.IM:
            return im()
        if self is CountryEnum.IL:
            return il()
        if self is CountryEnum.IT:
            return it()
        if self is CountryEnum.JM:
            return jm()
        if self is CountryEnum.JP:
            return jp()
        if self is CountryEnum.JE:
            return je()
        if self is CountryEnum.JO:
            return jo()
        if self is CountryEnum.KZ:
            return kz()
        if self is CountryEnum.KE:
            return ke()
        if self is CountryEnum.KI:
            return ki()
        if self is CountryEnum.KW:
            return kw()
        if self is CountryEnum.KG:
            return kg()
        if self is CountryEnum.LA:
            return la()
        if self is CountryEnum.LV:
            return lv()
        if self is CountryEnum.LB:
            return lb()
        if self is CountryEnum.LS:
            return ls()
        if self is CountryEnum.LR:
            return lr()
        if self is CountryEnum.LY:
            return ly()
        if self is CountryEnum.LI:
            return li()
        if self is CountryEnum.LT:
            return lt()
        if self is CountryEnum.LU:
            return lu()
        if self is CountryEnum.MO:
            return mo()
        if self is CountryEnum.MG:
            return mg()
        if self is CountryEnum.MW:
            return mw()
        if self is CountryEnum.MY:
            return my()
        if self is CountryEnum.MV:
            return mv()
        if self is CountryEnum.ML:
            return ml()
        if self is CountryEnum.MT:
            return mt()
        if self is CountryEnum.MH:
            return mh()
        if self is CountryEnum.MQ:
            return mq()
        if self is CountryEnum.MR:
            return mr()
        if self is CountryEnum.MU:
            return mu()
        if self is CountryEnum.YT:
            return yt()
        if self is CountryEnum.MX:
            return mx()
        if self is CountryEnum.FM:
            return fm()
        if self is CountryEnum.MD:
            return md()
        if self is CountryEnum.MC:
            return mc()
        if self is CountryEnum.MN:
            return mn()
        if self is CountryEnum.ME:
            return me()
        if self is CountryEnum.MS:
            return ms()
        if self is CountryEnum.MA:
            return ma()
        if self is CountryEnum.MZ:
            return mz()
        if self is CountryEnum.MM:
            return mm()
        if self is CountryEnum.NA:
            return na()
        if self is CountryEnum.NR:
            return nr()
        if self is CountryEnum.NP:
            return np()
        if self is CountryEnum.NL:
            return nl()
        if self is CountryEnum.NC:
            return nc()
        if self is CountryEnum.NZ:
            return nz()
        if self is CountryEnum.NI:
            return ni()
        if self is CountryEnum.NE:
            return ne()
        if self is CountryEnum.NG:
            return ng()
        if self is CountryEnum.NU:
            return nu()
        if self is CountryEnum.NF:
            return nf()
        if self is CountryEnum.KP:
            return kp()
        if self is CountryEnum.MK:
            return mk()
        if self is CountryEnum.MP:
            return mp()
        if self is CountryEnum.NO:
            return no()
        if self is CountryEnum.OM:
            return om()
        if self is CountryEnum.PK:
            return pk()
        if self is CountryEnum.PW:
            return pw()
        if self is CountryEnum.PS:
            return ps()
        if self is CountryEnum.PA:
            return pa()
        if self is CountryEnum.PG:
            return pg()
        if self is CountryEnum.PY:
            return py()
        if self is CountryEnum.PE:
            return pe()
        if self is CountryEnum.PH:
            return ph()
        if self is CountryEnum.PN:
            return pn()
        if self is CountryEnum.PL:
            return pl()
        if self is CountryEnum.PT:
            return pt()
        if self is CountryEnum.PR:
            return pr()
        if self is CountryEnum.QA:
            return qa()
        if self is CountryEnum.RE:
            return re()
        if self is CountryEnum.RO:
            return ro()
        if self is CountryEnum.RU:
            return ru()
        if self is CountryEnum.RW:
            return rw()
        if self is CountryEnum.BL:
            return bl()
        if self is CountryEnum.SH:
            return sh()
        if self is CountryEnum.KN:
            return kn()
        if self is CountryEnum.LC:
            return lc()
        if self is CountryEnum.MF:
            return mf()
        if self is CountryEnum.PM:
            return pm()
        if self is CountryEnum.VC:
            return vc()
        if self is CountryEnum.WS:
            return ws()
        if self is CountryEnum.SM:
            return sm()
        if self is CountryEnum.ST:
            return st()
        if self is CountryEnum.SA:
            return sa()
        if self is CountryEnum.SN:
            return sn()
        if self is CountryEnum.RS:
            return rs()
        if self is CountryEnum.SC:
            return sc()
        if self is CountryEnum.SL:
            return sl()
        if self is CountryEnum.SG:
            return sg()
        if self is CountryEnum.SX:
            return sx()
        if self is CountryEnum.SK:
            return sk()
        if self is CountryEnum.SI:
            return si()
        if self is CountryEnum.SB:
            return sb()
        if self is CountryEnum.SO:
            return so()
        if self is CountryEnum.ZA:
            return za()
        if self is CountryEnum.GS:
            return gs()
        if self is CountryEnum.KR:
            return kr()
        if self is CountryEnum.SS:
            return ss()
        if self is CountryEnum.ES:
            return es()
        if self is CountryEnum.LK:
            return lk()
        if self is CountryEnum.SD:
            return sd()
        if self is CountryEnum.SR:
            return sr()
        if self is CountryEnum.SJ:
            return sj()
        if self is CountryEnum.SE:
            return se()
        if self is CountryEnum.CH:
            return ch()
        if self is CountryEnum.SY:
            return sy()
        if self is CountryEnum.TW:
            return tw()
        if self is CountryEnum.TJ:
            return tj()
        if self is CountryEnum.TZ:
            return tz()
        if self is CountryEnum.TH:
            return th()
        if self is CountryEnum.TL:
            return tl()
        if self is CountryEnum.TG:
            return tg()
        if self is CountryEnum.TK:
            return tk()
        if self is CountryEnum.TO:
            return to()
        if self is CountryEnum.TT:
            return tt()
        if self is CountryEnum.TN:
            return tn()
        if self is CountryEnum.TR:
            return tr()
        if self is CountryEnum.TM:
            return tm()
        if self is CountryEnum.TC:
            return tc()
        if self is CountryEnum.TV:
            return tv()
        if self is CountryEnum.UG:
            return ug()
        if self is CountryEnum.UA:
            return ua()
        if self is CountryEnum.AE:
            return ae()
        if self is CountryEnum.GB:
            return gb()
        if self is CountryEnum.UM:
            return um()
        if self is CountryEnum.US:
            return us()
        if self is CountryEnum.UY:
            return uy()
        if self is CountryEnum.UZ:
            return uz()
        if self is CountryEnum.VU:
            return vu()
        if self is CountryEnum.VE:
            return ve()
        if self is CountryEnum.VN:
            return vn()
        if self is CountryEnum.VG:
            return vg()
        if self is CountryEnum.VI:
            return vi()
        if self is CountryEnum.WF:
            return wf()
        if self is CountryEnum.EH:
            return eh()
        if self is CountryEnum.YE:
            return ye()
        if self is CountryEnum.ZM:
            return zm()
        if self is CountryEnum.ZW:
            return zw()
