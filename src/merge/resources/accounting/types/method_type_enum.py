# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class MethodTypeEnum(str, enum.Enum):
    """
    * `CREDIT_CARD` - CREDIT_CARD
    * `DEBIT_CARD` - DEBIT_CARD
    * `ACH` - ACH
    * `CASH` - CASH
    * `CHECK` - CHECK
    """

    CREDIT_CARD = "CREDIT_CARD"
    DEBIT_CARD = "DEBIT_CARD"
    ACH = "ACH"
    CASH = "CASH"
    CHECK = "CHECK"

    def visit(
        self,
        credit_card: typing.Callable[[], T_Result],
        debit_card: typing.Callable[[], T_Result],
        ach: typing.Callable[[], T_Result],
        cash: typing.Callable[[], T_Result],
        check: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is MethodTypeEnum.CREDIT_CARD:
            return credit_card()
        if self is MethodTypeEnum.DEBIT_CARD:
            return debit_card()
        if self is MethodTypeEnum.ACH:
            return ach()
        if self is MethodTypeEnum.CASH:
            return cash()
        if self is MethodTypeEnum.CHECK:
            return check()
