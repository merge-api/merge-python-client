# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class Type2BbEnum(str, enum.Enum):
    """
    * `INVENTORY` - INVENTORY
    * `NON_INVENTORY` - NON_INVENTORY
    * `SERVICE` - SERVICE
    * `UNKNOWN` - UNKNOWN
    """

    INVENTORY = "INVENTORY"
    NON_INVENTORY = "NON_INVENTORY"
    SERVICE = "SERVICE"
    UNKNOWN = "UNKNOWN"

    def visit(
        self,
        inventory: typing.Callable[[], T_Result],
        non_inventory: typing.Callable[[], T_Result],
        service: typing.Callable[[], T_Result],
        unknown: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is Type2BbEnum.INVENTORY:
            return inventory()
        if self is Type2BbEnum.NON_INVENTORY:
            return non_inventory()
        if self is Type2BbEnum.SERVICE:
            return service()
        if self is Type2BbEnum.UNKNOWN:
            return unknown()
