# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
from .field_type_enum import FieldTypeEnum
from .field_format_enum import FieldFormatEnum
from .item_schema import ItemSchema
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class RemoteFieldClass(UniversalBaseModel):
    id: typing.Optional[str] = None
    display_name: typing.Optional[str] = None
    remote_key_name: typing.Optional[str] = None
    description: typing.Optional[str] = None
    is_custom: typing.Optional[bool] = None
    is_required: typing.Optional[bool] = None
    field_type: typing.Optional[FieldTypeEnum] = None
    field_format: typing.Optional[FieldFormatEnum] = None
    field_choices: typing.Optional[typing.List[str]] = None
    item_schema: typing.Optional[ItemSchema] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
