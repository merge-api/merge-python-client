# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic

from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .advanced_metadata import AdvancedMetadata
from .remote_endpoint_info import RemoteEndpointInfo
from .remote_field_api_coverage import RemoteFieldApiCoverage


class RemoteFieldApi(UniversalBaseModel):
    schema_: typing.Dict[str, typing.Any] = pydantic.Field(alias="schema")
    remote_key_name: str
    remote_endpoint_info: RemoteEndpointInfo
    example_values: typing.List[typing.Any]
    advanced_metadata: typing.Optional[AdvancedMetadata]
    coverage: typing.Optional[RemoteFieldApiCoverage]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
