# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class TicketAccessEnum(str, enum.Enum):
    """
    - `ALL` - ALL
    - `ASSIGNED_ONLY` - ASSIGNED_ONLY
    - `TEAM_ONLY` - TEAM_ONLY
    """

    ALL = "ALL"
    ASSIGNED_ONLY = "ASSIGNED_ONLY"
    TEAM_ONLY = "TEAM_ONLY"

    def visit(
        self,
        all_: typing.Callable[[], T_Result],
        assigned_only: typing.Callable[[], T_Result],
        team_only: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is TicketAccessEnum.ALL:
            return all_()
        if self is TicketAccessEnum.ASSIGNED_ONLY:
            return assigned_only()
        if self is TicketAccessEnum.TEAM_ONLY:
            return team_only()
