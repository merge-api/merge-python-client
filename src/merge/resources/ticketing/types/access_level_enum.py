# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AccessLevelEnum(str, enum.Enum):
    """
    * `PRIVATE` - PRIVATE
    * `COMPANY` - COMPANY
    * `PUBLIC` - PUBLIC
    """

    PRIVATE = "PRIVATE"
    COMPANY = "COMPANY"
    PUBLIC = "PUBLIC"

    def visit(
        self,
        private: typing.Callable[[], T_Result],
        company: typing.Callable[[], T_Result],
        public: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is AccessLevelEnum.PRIVATE:
            return private()
        if self is AccessLevelEnum.COMPANY:
            return company()
        if self is AccessLevelEnum.PUBLIC:
            return public()
