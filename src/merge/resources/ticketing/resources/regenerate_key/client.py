# This file was auto-generated by Fern from our API Definition.

import typing
from .....core.client_wrapper import SyncClientWrapper
from .raw_client import RawRegenerateKeyClient
from .....core.request_options import RequestOptions
from ...types.remote_key import RemoteKey
from .....core.client_wrapper import AsyncClientWrapper
from .raw_client import AsyncRawRegenerateKeyClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class RegenerateKeyClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawRegenerateKeyClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawRegenerateKeyClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawRegenerateKeyClient
        """
        return self._raw_client

    def create(self, *, name: str, request_options: typing.Optional[RequestOptions] = None) -> RemoteKey:
        """
        Exchange remote keys.

        Parameters
        ----------
        name : str
            The name of the remote key

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RemoteKey


        Examples
        --------
        from merge import Merge

        client = Merge(
            account_token="YOUR_ACCOUNT_TOKEN",
            api_key="YOUR_API_KEY",
        )
        client.ticketing.regenerate_key.create(
            name="Remote Deployment Key 1",
        )
        """
        response = self._raw_client.create(name=name, request_options=request_options)
        return response.data


class AsyncRegenerateKeyClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawRegenerateKeyClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawRegenerateKeyClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawRegenerateKeyClient
        """
        return self._raw_client

    async def create(self, *, name: str, request_options: typing.Optional[RequestOptions] = None) -> RemoteKey:
        """
        Exchange remote keys.

        Parameters
        ----------
        name : str
            The name of the remote key

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RemoteKey


        Examples
        --------
        import asyncio

        from merge import AsyncMerge

        client = AsyncMerge(
            account_token="YOUR_ACCOUNT_TOKEN",
            api_key="YOUR_API_KEY",
        )


        async def main() -> None:
            await client.ticketing.regenerate_key.create(
                name="Remote Deployment Key 1",
            )


        asyncio.run(main())
        """
        response = await self._raw_client.create(name=name, request_options=request_options)
        return response.data
