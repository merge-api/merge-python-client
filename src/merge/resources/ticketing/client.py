# This file was auto-generated by Fern from our API Definition.

from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from .resources.account_details.client import AccountDetailsClient, AsyncAccountDetailsClient
from .resources.account_token.client import AccountTokenClient, AsyncAccountTokenClient
from .resources.accounts.client import AccountsClient, AsyncAccountsClient
from .resources.async_passthrough.client import AsyncAsyncPassthroughClient
from .resources.async_passthrough.client import (
    AsyncPassthroughClient as resources_ticketing_resources_async_passthrough_client_AsyncPassthroughClient,
)
from .resources.attachments.client import AsyncAttachmentsClient, AttachmentsClient
from .resources.audit_trail.client import AsyncAuditTrailClient, AuditTrailClient
from .resources.available_actions.client import AsyncAvailableActionsClient, AvailableActionsClient
from .resources.collections.client import AsyncCollectionsClient, CollectionsClient
from .resources.comments.client import AsyncCommentsClient, CommentsClient
from .resources.contacts.client import AsyncContactsClient, ContactsClient
from .resources.delete_account.client import AsyncDeleteAccountClient, DeleteAccountClient
from .resources.field_mapping.client import AsyncFieldMappingClient, FieldMappingClient
from .resources.force_resync.client import AsyncForceResyncClient, ForceResyncClient
from .resources.generate_key.client import AsyncGenerateKeyClient, GenerateKeyClient
from .resources.issues.client import AsyncIssuesClient, IssuesClient
from .resources.link_token.client import AsyncLinkTokenClient, LinkTokenClient
from .resources.linked_accounts.client import AsyncLinkedAccountsClient, LinkedAccountsClient
from .resources.passthrough.client import (
    AsyncPassthroughClient as resources_ticketing_resources_passthrough_client_AsyncPassthroughClient,
)
from .resources.passthrough.client import PassthroughClient
from .resources.projects.client import AsyncProjectsClient, ProjectsClient
from .resources.regenerate_key.client import AsyncRegenerateKeyClient, RegenerateKeyClient
from .resources.roles.client import AsyncRolesClient, RolesClient
from .resources.scopes.client import AsyncScopesClient, ScopesClient
from .resources.sync_status.client import AsyncSyncStatusClient, SyncStatusClient
from .resources.tags.client import AsyncTagsClient, TagsClient
from .resources.teams.client import AsyncTeamsClient, TeamsClient
from .resources.tickets.client import AsyncTicketsClient, TicketsClient
from .resources.users.client import AsyncUsersClient, UsersClient
from .resources.webhook_receivers.client import AsyncWebhookReceiversClient, WebhookReceiversClient


class TicketingClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._client_wrapper = client_wrapper
        self.account_details = AccountDetailsClient(client_wrapper=self._client_wrapper)
        self.account_token = AccountTokenClient(client_wrapper=self._client_wrapper)
        self.accounts = AccountsClient(client_wrapper=self._client_wrapper)
        self.async_passthrough = resources_ticketing_resources_async_passthrough_client_AsyncPassthroughClient(
            client_wrapper=self._client_wrapper
        )
        self.attachments = AttachmentsClient(client_wrapper=self._client_wrapper)
        self.audit_trail = AuditTrailClient(client_wrapper=self._client_wrapper)
        self.available_actions = AvailableActionsClient(client_wrapper=self._client_wrapper)
        self.collections = CollectionsClient(client_wrapper=self._client_wrapper)
        self.comments = CommentsClient(client_wrapper=self._client_wrapper)
        self.contacts = ContactsClient(client_wrapper=self._client_wrapper)
        self.scopes = ScopesClient(client_wrapper=self._client_wrapper)
        self.delete_account = DeleteAccountClient(client_wrapper=self._client_wrapper)
        self.field_mapping = FieldMappingClient(client_wrapper=self._client_wrapper)
        self.generate_key = GenerateKeyClient(client_wrapper=self._client_wrapper)
        self.issues = IssuesClient(client_wrapper=self._client_wrapper)
        self.link_token = LinkTokenClient(client_wrapper=self._client_wrapper)
        self.linked_accounts = LinkedAccountsClient(client_wrapper=self._client_wrapper)
        self.passthrough = PassthroughClient(client_wrapper=self._client_wrapper)
        self.projects = ProjectsClient(client_wrapper=self._client_wrapper)
        self.regenerate_key = RegenerateKeyClient(client_wrapper=self._client_wrapper)
        self.roles = RolesClient(client_wrapper=self._client_wrapper)
        self.sync_status = SyncStatusClient(client_wrapper=self._client_wrapper)
        self.force_resync = ForceResyncClient(client_wrapper=self._client_wrapper)
        self.tags = TagsClient(client_wrapper=self._client_wrapper)
        self.teams = TeamsClient(client_wrapper=self._client_wrapper)
        self.tickets = TicketsClient(client_wrapper=self._client_wrapper)
        self.users = UsersClient(client_wrapper=self._client_wrapper)
        self.webhook_receivers = WebhookReceiversClient(client_wrapper=self._client_wrapper)


class AsyncTicketingClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._client_wrapper = client_wrapper
        self.account_details = AsyncAccountDetailsClient(client_wrapper=self._client_wrapper)
        self.account_token = AsyncAccountTokenClient(client_wrapper=self._client_wrapper)
        self.accounts = AsyncAccountsClient(client_wrapper=self._client_wrapper)
        self.async_passthrough = AsyncAsyncPassthroughClient(client_wrapper=self._client_wrapper)
        self.attachments = AsyncAttachmentsClient(client_wrapper=self._client_wrapper)
        self.audit_trail = AsyncAuditTrailClient(client_wrapper=self._client_wrapper)
        self.available_actions = AsyncAvailableActionsClient(client_wrapper=self._client_wrapper)
        self.collections = AsyncCollectionsClient(client_wrapper=self._client_wrapper)
        self.comments = AsyncCommentsClient(client_wrapper=self._client_wrapper)
        self.contacts = AsyncContactsClient(client_wrapper=self._client_wrapper)
        self.scopes = AsyncScopesClient(client_wrapper=self._client_wrapper)
        self.delete_account = AsyncDeleteAccountClient(client_wrapper=self._client_wrapper)
        self.field_mapping = AsyncFieldMappingClient(client_wrapper=self._client_wrapper)
        self.generate_key = AsyncGenerateKeyClient(client_wrapper=self._client_wrapper)
        self.issues = AsyncIssuesClient(client_wrapper=self._client_wrapper)
        self.link_token = AsyncLinkTokenClient(client_wrapper=self._client_wrapper)
        self.linked_accounts = AsyncLinkedAccountsClient(client_wrapper=self._client_wrapper)
        self.passthrough = resources_ticketing_resources_passthrough_client_AsyncPassthroughClient(
            client_wrapper=self._client_wrapper
        )
        self.projects = AsyncProjectsClient(client_wrapper=self._client_wrapper)
        self.regenerate_key = AsyncRegenerateKeyClient(client_wrapper=self._client_wrapper)
        self.roles = AsyncRolesClient(client_wrapper=self._client_wrapper)
        self.sync_status = AsyncSyncStatusClient(client_wrapper=self._client_wrapper)
        self.force_resync = AsyncForceResyncClient(client_wrapper=self._client_wrapper)
        self.tags = AsyncTagsClient(client_wrapper=self._client_wrapper)
        self.teams = AsyncTeamsClient(client_wrapper=self._client_wrapper)
        self.tickets = AsyncTicketsClient(client_wrapper=self._client_wrapper)
        self.users = AsyncUsersClient(client_wrapper=self._client_wrapper)
        self.webhook_receivers = AsyncWebhookReceiversClient(client_wrapper=self._client_wrapper)
