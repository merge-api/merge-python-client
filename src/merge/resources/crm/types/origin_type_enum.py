# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class OriginTypeEnum(str, enum.Enum):
    """
    * `CUSTOM_OBJECT` - CUSTOM_OBJECT
    * `COMMON_MODEL` - COMMON_MODEL
    * `REMOTE_ONLY_MODEL` - REMOTE_ONLY_MODEL
    """

    CUSTOM_OBJECT = "CUSTOM_OBJECT"
    COMMON_MODEL = "COMMON_MODEL"
    REMOTE_ONLY_MODEL = "REMOTE_ONLY_MODEL"

    def visit(
        self,
        custom_object: typing.Callable[[], T_Result],
        common_model: typing.Callable[[], T_Result],
        remote_only_model: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is OriginTypeEnum.CUSTOM_OBJECT:
            return custom_object()
        if self is OriginTypeEnum.COMMON_MODEL:
            return common_model()
        if self is OriginTypeEnum.REMOTE_ONLY_MODEL:
            return remote_only_model()
