# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
from .object_class_description_request import ObjectClassDescriptionRequest
import typing
from .cardinality_enum import CardinalityEnum
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class AssociationTypeRequestRequest(UniversalBaseModel):
    source_object_class: ObjectClassDescriptionRequest
    target_object_classes: typing.List[ObjectClassDescriptionRequest]
    remote_key_name: str
    display_name: typing.Optional[str]
    cardinality: typing.Optional[CardinalityEnum]
    is_required: typing.Optional[bool]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
