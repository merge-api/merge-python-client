# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .association_association_type import AssociationAssociationType


class Association(UniversalBaseModel):
    """
    # The Association Object

    ### Description

    The `Association` record refers to an instance of an Association Type.

    ### Usage Example

    TODO
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field()
    """
    The datetime that this object was created by Merge.
    """

    modified_at: typing.Optional[dt.datetime] = pydantic.Field()
    """
    The datetime that this object was modified by Merge.
    """

    source_object: typing.Optional[typing.Dict[str, typing.Any]]
    target_object: typing.Optional[typing.Dict[str, typing.Any]]
    association_type: typing.Optional[AssociationAssociationType] = pydantic.Field()
    """
    The association type the association belongs to.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
