# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

try:
    import pydantic.v1 as pydantic
except ImportError:
    import pydantic

from ....core.datetime_utils import serialize_datetime
from .category_enum import CategoryEnum


class AccountDetails(pydantic.BaseModel):
    id: typing.Optional[str]
    integration: typing.Optional[str]
    integration_slug: typing.Optional[str]
    category: typing.Optional[CategoryEnum]
    end_user_origin_id: typing.Optional[str]
    end_user_organization_name: typing.Optional[str]
    end_user_email_address: typing.Optional[str]
    status: typing.Optional[str]
    webhook_listener_url: typing.Optional[str]
    is_duplicate: typing.Optional[bool] = pydantic.Field(
        description="Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets."
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
