openapi: 3.0.3
info:
  title: Merge Accounting API
  version: '1.0'
  description: The unified API for building rich integrations with multiple Accounting
    & Finance platforms.
  contact:
    name: Merge Team
    url: https://www.merge.dev/
    email: hello@merge.dev
paths:
  /accounting/v1/account-details:
    get:
      operationId: account_details_retrieve
      description: Get details for a linked account.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - account-details
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetails'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/account-token/{public_token}:
    get:
      operationId: account_token_retrieve
      description: Returns the account token for the end user with the provided public
        token.
      parameters:
      - in: path
        name: public_token
        schema:
          type: string
        required: true
      tags:
      - account-token
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountToken'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/accounting-periods:
    get:
      operationId: accounting_periods_list
      description: Returns a list of `AccountingPeriod` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - accounting-periods
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccountingPeriodList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/accounting-periods/{id}:
    get:
      operationId: accounting_periods_retrieve
      description: Returns an `AccountingPeriod` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - accounting-periods
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingPeriod'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/accounts:
    get:
      operationId: accounts_list
      description: Returns a list of `Account` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: account_type
        schema:
          type: string
        description: If provided, will only return accounts with the passed in enum.
      - in: query
        name: classification
        schema:
          type: string
          nullable: true
          enum:
          - ''
          - ASSET
          - EQUITY
          - EXPENSE
          - LIABILITY
          - 
          - REVENUE
        description: If provided, will only return accounts with this classification.
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return accounts for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - in: query
        name: name
        schema:
          type: string
          nullable: true
        description: If provided, will only return Accounts with this name.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - classification
          - classification,status
          - status
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesClassification,Status:
            value: classification,status
            summary: Original Enum Values Classification, Status
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - classification
          - classification,status
          - status
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesClassification,Status:
            value: classification,status
            summary: Original Enum Values Classification, Status
      - in: query
        name: status
        schema:
          type: string
          nullable: true
          enum:
          - ''
          - ACTIVE
          - INACTIVE
          - 
          - PENDING
        description: If provided, will only return accounts with this status.
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccountList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: accounts_create
      description: Creates an `Account` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/accounts/{id}:
    get:
      operationId: accounts_retrieve
      description: Returns an `Account` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - classification
          - classification,status
          - status
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesClassification,Status:
            value: classification,status
            summary: Original Enum Values Classification, Status
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - classification
          - classification,status
          - status
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesClassification,Status:
            value: classification,status
            summary: Original Enum Values Classification, Status
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/accounts/meta/post:
    get:
      operationId: accounts_meta_post_retrieve
      description: Returns metadata for `Account` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/addresses/{id}:
    get:
      operationId: addresses_retrieve
      description: Returns an `Address` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - type
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesType:
            value: type
            summary: Original Enum Values Type
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - type
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesType:
            value: type
            summary: Original Enum Values Type
      tags:
      - addresses
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/async-passthrough:
    post:
      operationId: async_passthrough_create
      description: Asynchronously pull data from an endpoint not currently supported
        by Merge.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - async-passthrough
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPassthroughRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataPassthroughRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataPassthroughRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncPassthroughReciept'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/async-passthrough/{async_passthrough_receipt_id}:
    get:
      operationId: async_passthrough_retrieve
      description: Retrieves data from earlier async-passthrough POST request
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: async_passthrough_receipt_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - async-passthrough
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/RemoteResponse'
                - type: string
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/async-tasks/{id}:
    get:
      operationId: async_tasks_retrieve
      description: Returns an `AsyncPostTask` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - async-tasks
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncPostTask'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/attachments:
    get:
      operationId: attachments_list
      description: Returns a list of `AccountingAttachment` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return accounting attachments for this
          company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      tags:
      - attachments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccountingAttachmentList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: attachments_create
      description: Creates an `AccountingAttachment` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - attachments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountingAttachmentEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountingAttachmentEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountingAttachmentEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingAttachmentResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/attachments/{id}:
    get:
      operationId: attachments_retrieve
      description: Returns an `AccountingAttachment` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - attachments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingAttachment'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/attachments/meta/post:
    get:
      operationId: attachments_meta_post_retrieve
      description: Returns metadata for `AccountingAttachment` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - attachments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/audit-trail:
    get:
      operationId: audit_trail_list
      description: Gets a list of audit trail events.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: end_date
        schema:
          type: string
        description: If included, will only include audit trail events that occurred
          before this time
      - in: query
        name: event_type
        schema:
          type: string
        description: 'If included, will only include events with the given event type.
          Possible values include: `CREATED_REMOTE_PRODUCTION_API_KEY`, `DELETED_REMOTE_PRODUCTION_API_KEY`,
          `CREATED_TEST_API_KEY`, `DELETED_TEST_API_KEY`, `REGENERATED_PRODUCTION_API_KEY`,
          `REGENERATED_WEBHOOK_SIGNATURE`, `INVITED_USER`, `TWO_FACTOR_AUTH_ENABLED`,
          `TWO_FACTOR_AUTH_DISABLED`, `DELETED_LINKED_ACCOUNT`, `DELETED_ALL_COMMON_MODELS_FOR_LINKED_ACCOUNT`,
          `CREATED_DESTINATION`, `DELETED_DESTINATION`, `CHANGED_DESTINATION`, `CHANGED_SCOPES`,
          `CHANGED_PERSONAL_INFORMATION`, `CHANGED_ORGANIZATION_SETTINGS`, `ENABLED_INTEGRATION`,
          `DISABLED_INTEGRATION`, `ENABLED_CATEGORY`, `DISABLED_CATEGORY`, `CHANGED_PASSWORD`,
          `RESET_PASSWORD`, `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION`, `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT`,
          `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION`, `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT`,
          `CREATED_INTEGRATION_WIDE_FIELD_MAPPING`, `CREATED_LINKED_ACCOUNT_FIELD_MAPPING`,
          `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING`, `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING`,
          `DELETED_INTEGRATION_WIDE_FIELD_MAPPING`, `DELETED_LINKED_ACCOUNT_FIELD_MAPPING`,
          `CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE`, `CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE`,
          `DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE`, `FORCED_LINKED_ACCOUNT_RESYNC`,
          `MUTED_ISSUE`, `GENERATED_MAGIC_LINK`, `ENABLED_MERGE_WEBHOOK`, `DISABLED_MERGE_WEBHOOK`,
          `MERGE_WEBHOOK_TARGET_CHANGED`, `END_USER_CREDENTIALS_ACCESSED`'
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
        description: If included, will only include audit trail events that occurred
          after this time
      - in: query
        name: user_email
        schema:
          type: string
        description: If provided, this will return events associated with the specified
          user email. Please note that the email address reflects the user's email
          at the time of the event, and may not be their current email.
      tags:
      - audit-trail
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuditLogEventList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/available-actions:
    get:
      operationId: available_actions_retrieve
      description: Returns a list of models and actions available for an account.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - available-actions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableActions'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/balance-sheets:
    get:
      operationId: balance_sheets_list
      description: Returns a list of `BalanceSheet` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return balance sheets for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      tags:
      - balance-sheets
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBalanceSheetList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/balance-sheets/{id}:
    get:
      operationId: balance_sheets_retrieve
      description: Returns a `BalanceSheet` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - balance-sheets
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceSheet'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/bank-feed-accounts:
    get:
      operationId: bank_feed_accounts_list
      description: Returns a list of `BankFeedAccount` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - bank-feed-accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBankFeedAccountList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
    post:
      operationId: bank_feed_accounts_create
      description: Creates a `BankFeedAccount` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - bank-feed-accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankFeedAccountEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankFeedAccountEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankFeedAccountEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankFeedAccountResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/bank-feed-accounts/{id}:
    get:
      operationId: bank_feed_accounts_retrieve
      description: Returns a `BankFeedAccount` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - bank-feed-accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankFeedAccount'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/bank-feed-accounts/meta/post:
    get:
      operationId: bank_feed_accounts_meta_post_retrieve
      description: Returns metadata for `BankFeedAccount` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - bank-feed-accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/bank-feed-transactions:
    get:
      operationId: bank_feed_transactions_list
      description: Returns a list of `BankFeedTransaction` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - bank_feed_account
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandBankFeedAccount:
            value: bank_feed_account
            summary: Expand Bank_feed_account
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_processed
        schema:
          type: boolean
        description: If provided, will only return bank feed transactions with this
          is_processed value
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      tags:
      - bank-feed-transactions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBankFeedTransactionList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
    post:
      operationId: bank_feed_transactions_create
      description: Creates a `BankFeedTransaction` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - bank-feed-transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankFeedTransactionEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BankFeedTransactionEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BankFeedTransactionEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankFeedTransactionResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/bank-feed-transactions/{id}:
    get:
      operationId: bank_feed_transactions_retrieve
      description: Returns a `BankFeedTransaction` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - bank_feed_account
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandBankFeedAccount:
            value: bank_feed_account
            summary: Expand Bank_feed_account
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - bank-feed-transactions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankFeedTransaction'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/bank-feed-transactions/meta/post:
    get:
      operationId: bank_feed_transactions_meta_post_retrieve
      description: Returns metadata for `BankFeedTransaction` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - bank-feed-transactions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/cash-flow-statements:
    get:
      operationId: cash_flow_statements_list
      description: Returns a list of `CashFlowStatement` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return cash flow statements for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      tags:
      - cash-flow-statements
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCashFlowStatementList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/cash-flow-statements/{id}:
    get:
      operationId: cash_flow_statements_retrieve
      description: Returns a `CashFlowStatement` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - cash-flow-statements
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashFlowStatement'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/company-info:
    get:
      operationId: company_info_list
      description: Returns a list of `CompanyInfo` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - addresses
            - phone_numbers
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandAddresses,PhoneNumbers:
            value: addresses,phone_numbers
            summary: Expand Addresses, Phone_numbers
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      tags:
      - company-info
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyInfoList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/company-info/{id}:
    get:
      operationId: company_info_retrieve
      description: Returns a `CompanyInfo` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - addresses
            - phone_numbers
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandAddresses,PhoneNumbers:
            value: addresses,phone_numbers
            summary: Expand Addresses, Phone_numbers
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - company-info
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInfo'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/contacts:
    get:
      operationId: contacts_list
      description: Returns a list of `Contact` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return contacts for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: email_address
        schema:
          type: string
          nullable: true
        description: If provided, will only return Contacts that match this email.
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - addresses
            - company
            - phone_numbers
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandAddresses,PhoneNumbers,Company:
            value: addresses,phone_numbers,company
            summary: Expand Addresses, Phone_numbers, Company
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_customer
        schema:
          type: string
        description: If provided, will only return Contacts that are denoted as customers.
      - in: query
        name: is_supplier
        schema:
          type: string
        description: If provided, will only return Contacts that are denoted as suppliers.
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - in: query
        name: name
        schema:
          type: string
          nullable: true
        description: If provided, will only return Contacts that match this name.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - status
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - status
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      - in: query
        name: status
        schema:
          type: string
          nullable: true
          enum:
          - ''
          - ACTIVE
          - ARCHIVED
          - 
        description: If provided, will only return Contacts that match this status.
      tags:
      - contacts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContactList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: contacts_create
      description: Creates a `Contact` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/contacts/{id}:
    get:
      operationId: contacts_retrieve
      description: Returns a `Contact` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - addresses
            - company
            - phone_numbers
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandAddresses,PhoneNumbers,Company:
            value: addresses,phone_numbers,company
            summary: Expand Addresses, Phone_numbers, Company
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - status
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - status
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      tags:
      - contacts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/contacts/meta/post:
    get:
      operationId: contacts_meta_post_retrieve
      description: Returns metadata for `Contact` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - contacts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/contacts/remote-field-classes:
    get:
      operationId: contacts_remote_field_classes_list
      description: Returns a list of `RemoteFieldClass` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_common_model_field
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote field classes with this
          is_common_model_field value
      - in: query
        name: is_custom
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote fields classes with this
          is_custom value
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - contacts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRemoteFieldClassList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/credit-notes:
    get:
      operationId: credit_notes_list
      description: Returns a list of `CreditNote` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return credit notes for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - applied_payments
            - company
            - contact
            - line_items
            - payments
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandPayments,AppliedPayments,LineItems,TrackingCategories,Contact,Company,AccountingPeriod:
            value: 
              payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period
            summary: Expand Payments, Applied_payments, Line_items, Tracking_categories,
              Contact, Company, Accounting_period
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - status
          - status,type
          - type
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesStatus,Type:
            value: status,type
            summary: Original Enum Values Status, Type
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - status
          - status,type
          - type
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesStatus,Type:
            value: status,type
            summary: Original Enum Values Status, Type
      - in: query
        name: transaction_date_after
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: transaction_date_before
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created before this datetime.
      tags:
      - credit-notes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCreditNoteList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: credit_notes_create
      description: Creates a `CreditNote` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - credit-notes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNoteEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreditNoteEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreditNoteEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNoteResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/credit-notes/{id}:
    get:
      operationId: credit_notes_retrieve
      description: Returns a `CreditNote` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - applied_payments
            - company
            - contact
            - line_items
            - payments
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandPayments,AppliedPayments,LineItems,TrackingCategories,Contact,Company,AccountingPeriod:
            value: 
              payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period
            summary: Expand Payments, Applied_payments, Line_items, Tracking_categories,
              Contact, Company, Accounting_period
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - status
          - status,type
          - type
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesStatus,Type:
            value: status,type
            summary: Original Enum Values Status, Type
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - status
          - status,type
          - type
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesStatus,Type:
            value: status,type
            summary: Original Enum Values Status, Type
      tags:
      - credit-notes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/credit-notes/meta/post:
    get:
      operationId: credit_notes_meta_post_retrieve
      description: Returns metadata for `CreditNote` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - credit-notes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/default-scopes:
    get:
      operationId: default_scopes_retrieve
      description: Get the default permissions for Merge Common Models and fields
        across all Linked Accounts of a given category. [Learn more](https://help.merge.dev/en/articles/5950052-common-model-and-field-scopes).
      tags:
      - scopes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonModelScopeAPI'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/delete-account:
    post:
      operationId: delete_account_delete
      description: Delete a linked account.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - delete-account
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/employees:
    get:
      operationId: employees_list
      description: Returns a list of `Employee` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - employees
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/employees/{id}:
    get:
      operationId: employees_retrieve
      description: Returns an `Employee` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - employees
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/expenses:
    get:
      operationId: expenses_list
      description: Returns a list of `Expense` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return expenses for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - account
            - accounting_period
            - company
            - contact
            - employee
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandTrackingCategories,Account,Contact,Company,Employee,AccountingPeriod:
            value: tracking_categories,account,contact,company,employee,accounting_period
            summary: Expand Tracking_categories, Account, Contact, Company, Employee,
              Accounting_period
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: transaction_date_after
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: transaction_date_before
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created before this datetime.
      tags:
      - expenses
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpenseList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: expenses_create
      description: Creates an `Expense` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - expenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExpenseEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExpenseEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/expenses/{id}:
    get:
      operationId: expenses_retrieve
      description: Returns an `Expense` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - account
            - accounting_period
            - company
            - contact
            - employee
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandTrackingCategories,Account,Contact,Company,Employee,AccountingPeriod:
            value: tracking_categories,account,contact,company,employee,accounting_period
            summary: Expand Tracking_categories, Account, Contact, Company, Employee,
              Accounting_period
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - expenses
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/expenses/lines/remote-field-classes:
    get:
      operationId: expenses_lines_remote_field_classes_list
      description: Returns a list of `RemoteFieldClass` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_common_model_field
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote field classes with this
          is_common_model_field value
      - in: query
        name: is_custom
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote fields classes with this
          is_custom value
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - expenses
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRemoteFieldClassList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/expenses/meta/post:
    get:
      operationId: expenses_meta_post_retrieve
      description: Returns metadata for `Expense` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - expenses
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/expenses/remote-field-classes:
    get:
      operationId: expenses_remote_field_classes_list
      description: Returns a list of `RemoteFieldClass` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_common_model_field
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote field classes with this
          is_common_model_field value
      - in: query
        name: is_custom
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote fields classes with this
          is_custom value
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - expenses
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRemoteFieldClassList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/field-mappings:
    get:
      operationId: field_mappings_retrieve
      description: Get all Field Mappings for this Linked Account. Field Mappings
        are mappings between third-party Remote Fields and user defined Merge fields.
        [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/overview/).
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: exclude_remote_field_metadata
        schema:
          type: boolean
        description: If `true`, remote fields metadata is excluded from each field
          mapping instance (i.e. `remote_fields.remote_key_name` and `remote_fields.schema`
          will be null). This will increase the speed of the request since these fields
          require some calculations.
      tags:
      - field-mapping
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldMappingApiInstanceResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: field_mappings_create
      description: Create new Field Mappings that will be available after the next
        scheduled sync. This will cause the next sync for this Linked Account to sync
        **ALL** data from start.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: exclude_remote_field_metadata
        schema:
          type: boolean
        description: If `true`, remote fields metadata is excluded from each field
          mapping instance (i.e. `remote_fields.remote_key_name` and `remote_fields.schema`
          will be null). This will increase the speed of the request since these fields
          require some calculations.
      tags:
      - field-mapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFieldMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateFieldMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateFieldMappingRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldMappingInstanceResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/field-mappings/{field_mapping_id}:
    patch:
      operationId: field_mappings_partial_update
      description: Create or update existing Field Mappings for a Linked Account.
        Changes will be reflected after the next scheduled sync. This will cause the
        next sync for this Linked Account to sync **ALL** data from start.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: field_mapping_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - field-mapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEditFieldMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEditFieldMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEditFieldMappingRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldMappingInstanceResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    delete:
      operationId: field_mappings_destroy
      description: Deletes Field Mappings for a Linked Account. All data related to
        this Field Mapping will be deleted and these changes will be reflected after
        the next scheduled sync. This will cause the next sync for this Linked Account
        to sync **ALL** data from start.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: field_mapping_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - field-mapping
      security:
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldMappingInstanceResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/general-ledger-transactions:
    get:
      operationId: general_ledger_transactions_list
      description: Returns a list of `GeneralLedgerTransaction` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return general ledger transactions for
          this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - company
            - general_ledger_transaction_lines
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandTrackingCategories,GeneralLedgerTransactionLines,Company,AccountingPeriod:
            value: tracking_categories,general_ledger_transaction_lines,company,accounting_period
            summary: Expand Tracking_categories, General_ledger_transaction_lines,
              Company, Accounting_period
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: posted_date_after
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects posted after this datetime.
      - in: query
        name: posted_date_before
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects posted before this datetime.
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      tags:
      - general-ledger-transactions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGeneralLedgerTransactionList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/general-ledger-transactions/{id}:
    get:
      operationId: general_ledger_transactions_retrieve
      description: Returns a `GeneralLedgerTransaction` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - company
            - general_ledger_transaction_lines
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandTrackingCategories,GeneralLedgerTransactionLines,Company,AccountingPeriod:
            value: tracking_categories,general_ledger_transaction_lines,company,accounting_period
            summary: Expand Tracking_categories, General_ledger_transaction_lines,
              Company, Accounting_period
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - general-ledger-transactions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralLedgerTransaction'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/generate-key:
    post:
      operationId: generate_key_create
      description: Create a remote key.
      tags:
      - generate-key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRemoteKeyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerateRemoteKeyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateRemoteKeyRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteKey'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/income-statements:
    get:
      operationId: income_statements_list
      description: Returns a list of `IncomeStatement` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return income statements for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      tags:
      - income-statements
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIncomeStatementList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/income-statements/{id}:
    get:
      operationId: income_statements_retrieve
      description: Returns an `IncomeStatement` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - income-statements
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeStatement'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/invoices:
    get:
      operationId: invoices_list
      description: Returns a list of `Invoice` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return invoices for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: contact_id
        schema:
          type: string
        description: If provided, will only return invoices for this contact.
        examples:
          ContactId:
            summary: contact_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - applied_credit_notes
            - applied_payments
            - applied_vendor_credits
            - company
            - contact
            - employee
            - line_items
            - payment_term
            - payments
            - purchase_orders
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ? ExpandPayments,AppliedPayments,LineItems,TrackingCategories,PurchaseOrders,AppliedCreditNotes,AppliedVendorCredits,Contact,Company,Employee,AccountingPeriod,PaymentTerm
          : value: 
              payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period,payment_term
            summary: Expand Payments, Applied_payments, Line_items, Tracking_categories,
              Purchase_orders, Applied_credit_notes, Applied_vendor_credits, Contact,
              Company, Employee, Accounting_period, Payment_term
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: issue_date_after
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: issue_date_before
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - in: query
        name: number
        schema:
          type: string
          nullable: true
        description: If provided, will only return Invoices with this number.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - type
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesType:
            value: type
            summary: Original Enum Values Type
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - type
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesType:
            value: type
            summary: Original Enum Values Type
      - in: query
        name: status
        schema:
          type: string
          nullable: true
          enum:
          - DRAFT
          - OPEN
          - PAID
          - PARTIALLY_PAID
          - SUBMITTED
          - VOID
        description: |-
          If provided, will only return Invoices with this status.

          * `PAID` - PAID
          * `DRAFT` - DRAFT
          * `SUBMITTED` - SUBMITTED
          * `PARTIALLY_PAID` - PARTIALLY_PAID
          * `OPEN` - OPEN
          * `VOID` - VOID
      - in: query
        name: type
        schema:
          type: string
          nullable: true
          enum:
          - ACCOUNTS_PAYABLE
          - ACCOUNTS_RECEIVABLE
        description: |-
          If provided, will only return Invoices with this type.

          * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
          * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
      tags:
      - invoices
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: invoices_create
      description: "Creates an `Invoice` object with the given values.\n         \
        \   Including a `PurchaseOrder` id in the `purchase_orders` property will
        generate an Accounts Payable Invoice from the specified Purchase Order(s).\n\
        \            "
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - invoices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/invoices/{id}:
    get:
      operationId: invoices_retrieve
      description: Returns an `Invoice` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - applied_credit_notes
            - applied_payments
            - applied_vendor_credits
            - company
            - contact
            - employee
            - line_items
            - payment_term
            - payments
            - purchase_orders
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ? ExpandPayments,AppliedPayments,LineItems,TrackingCategories,PurchaseOrders,AppliedCreditNotes,AppliedVendorCredits,Contact,Company,Employee,AccountingPeriod,PaymentTerm
          : value: 
              payments,applied_payments,line_items,tracking_categories,purchase_orders,applied_credit_notes,applied_vendor_credits,contact,company,employee,accounting_period,payment_term
            summary: Expand Payments, Applied_payments, Line_items, Tracking_categories,
              Purchase_orders, Applied_credit_notes, Applied_vendor_credits, Contact,
              Company, Employee, Accounting_period, Payment_term
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - type
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesType:
            value: type
            summary: Original Enum Values Type
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - type
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesType:
            value: type
            summary: Original Enum Values Type
      tags:
      - invoices
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    patch:
      operationId: invoices_partial_update
      description: Updates an `Invoice` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - invoices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/invoices/line-items/remote-field-classes:
    get:
      operationId: invoices_line_items_remote_field_classes_list
      description: Returns a list of `RemoteFieldClass` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_common_model_field
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote field classes with this
          is_common_model_field value
      - in: query
        name: is_custom
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote fields classes with this
          is_custom value
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - invoices
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRemoteFieldClassList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/invoices/meta/patch/{id}:
    get:
      operationId: invoices_meta_patch_retrieve
      description: Returns metadata for `Invoice` PATCHs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - invoices
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-patch: META_PATCH
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/invoices/meta/post:
    get:
      operationId: invoices_meta_post_retrieve
      description: Returns metadata for `Invoice` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - invoices
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/invoices/remote-field-classes:
    get:
      operationId: invoices_remote_field_classes_list
      description: Returns a list of `RemoteFieldClass` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_common_model_field
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote field classes with this
          is_common_model_field value
      - in: query
        name: is_custom
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote fields classes with this
          is_custom value
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - invoices
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRemoteFieldClassList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/issues:
    get:
      operationId: issues_list
      description: Gets all issues for Organization.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: query
        name: account_token
        schema:
          type: string
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: end_date
        schema:
          type: string
        description: If included, will only include issues whose most recent action
          occurred before this time
      - in: query
        name: end_user_organization_name
        schema:
          type: string
      - in: query
        name: first_incident_time_after
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return issues whose first incident time
          was after this datetime.
      - in: query
        name: first_incident_time_before
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return issues whose first incident time
          was before this datetime.
      - in: query
        name: include_muted
        schema:
          type: string
        description: If true, will include muted issues
      - in: query
        name: integration_name
        schema:
          type: string
      - in: query
        name: last_incident_time_after
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return issues whose last incident time
          was after this datetime.
      - in: query
        name: last_incident_time_before
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return issues whose last incident time
          was before this datetime.
      - in: query
        name: linked_account_id
        schema:
          type: string
        description: If provided, will only include issues pertaining to the linked
          account passed in.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
        description: If included, will only include issues whose most recent action
          occurred after this time
      - in: query
        name: status
        schema:
          type: string
          enum:
          - ONGOING
          - RESOLVED
        description: |-
          Status of the issue. Options: ('ONGOING', 'RESOLVED')

          * `ONGOING` - ONGOING
          * `RESOLVED` - RESOLVED
      tags:
      - issues
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIssueList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/issues/{id}:
    get:
      operationId: issues_retrieve
      description: Get a specific issue.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - issues
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Issue'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/items:
    get:
      operationId: items_list
      description: Returns a list of `Item` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return items for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
            - purchase_account
            - purchase_tax_rate
            - sales_account
            - sales_tax_rate
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandPurchaseAccount,SalesAccount,Company,SalesTaxRate,PurchaseTaxRate:
            value: purchase_account,sales_account,company,sales_tax_rate,purchase_tax_rate
            summary: Expand Purchase_account, Sales_account, Company, Sales_tax_rate,
              Purchase_tax_rate
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - status
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - status
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      tags:
      - items
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedItemList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: items_create
      description: Creates an `Item` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/items/{id}:
    get:
      operationId: items_retrieve
      description: Returns an `Item` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
            - purchase_account
            - purchase_tax_rate
            - sales_account
            - sales_tax_rate
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandPurchaseAccount,SalesAccount,Company,SalesTaxRate,PurchaseTaxRate:
            value: purchase_account,sales_account,company,sales_tax_rate,purchase_tax_rate
            summary: Expand Purchase_account, Sales_account, Company, Sales_tax_rate,
              Purchase_tax_rate
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - status
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - status
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      tags:
      - items
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    patch:
      operationId: items_partial_update
      description: Updates an `Item` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItemEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItemEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItemEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/items/meta/patch/{id}:
    get:
      operationId: items_meta_patch_retrieve
      description: Returns metadata for `Item` PATCHs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - items
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-patch: META_PATCH
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/items/meta/post:
    get:
      operationId: items_meta_post_retrieve
      description: Returns metadata for `Item` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - items
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/journal-entries:
    get:
      operationId: journal_entries_list
      description: Returns a list of `JournalEntry` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return journal entries for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - applied_payments
            - company
            - lines
            - payments
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandLines,Payments,AppliedPayments,TrackingCategories,Company,AccountingPeriod:
            value: lines,payments,applied_payments,tracking_categories,company,accounting_period
            summary: Expand Lines, Payments, Applied_payments, Tracking_categories,
              Company, Accounting_period
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: transaction_date_after
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: transaction_date_before
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created before this datetime.
      tags:
      - journal-entries
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedJournalEntryList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: journal_entries_create
      description: Creates a `JournalEntry` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - journal-entries
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JournalEntryEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JournalEntryEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/journal-entries/{id}:
    get:
      operationId: journal_entries_retrieve
      description: Returns a `JournalEntry` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - applied_payments
            - company
            - lines
            - payments
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandLines,Payments,AppliedPayments,TrackingCategories,Company,AccountingPeriod:
            value: lines,payments,applied_payments,tracking_categories,company,accounting_period
            summary: Expand Lines, Payments, Applied_payments, Tracking_categories,
              Company, Accounting_period
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - journal-entries
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntry'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/journal-entries/lines/remote-field-classes:
    get:
      operationId: journal_entries_lines_remote_field_classes_list
      description: Returns a list of `RemoteFieldClass` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_common_model_field
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote field classes with this
          is_common_model_field value
      - in: query
        name: is_custom
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote fields classes with this
          is_custom value
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - journal-entries
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRemoteFieldClassList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/journal-entries/meta/post:
    get:
      operationId: journal_entries_meta_post_retrieve
      description: Returns metadata for `JournalEntry` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - journal-entries
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/journal-entries/remote-field-classes:
    get:
      operationId: journal_entries_remote_field_classes_list
      description: Returns a list of `RemoteFieldClass` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_common_model_field
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote field classes with this
          is_common_model_field value
      - in: query
        name: is_custom
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote fields classes with this
          is_custom value
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - journal-entries
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRemoteFieldClassList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/link-token:
    post:
      operationId: link_token_create
      description: Creates a link token to be used when linking a new end user.
      tags:
      - link-token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndUserDetailsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EndUserDetailsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EndUserDetailsRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkToken'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/linked-account-scopes:
    get:
      operationId: linked_account_scopes_retrieve
      description: Get all available permissions for Merge Common Models and fields
        for a single Linked Account. [Learn more](https://help.merge.dev/en/articles/5950052-common-model-and-field-scopes).
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - scopes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonModelScopeAPI'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: linked_account_scopes_create
      description: Update permissions for any Common Model or field for a single Linked
        Account. Any Scopes not set in this POST request will inherit the default
        Scopes. [Learn more](https://help.merge.dev/en/articles/5950052-common-model-and-field-scopes)
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - scopes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonModelScopeAPI'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/linked-accounts:
    get:
      operationId: linked_accounts_list
      description: List linked accounts for your organization.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: query
        name: category
        schema:
          type: string
          nullable: true
          enum:
          - accounting
          - ats
          - crm
          - filestorage
          - hris
          - mktg
          - ticketing
        description: |-
          Options: `accounting`, `ats`, `crm`, `filestorage`, `hris`, `mktg`, `ticketing`

          * `hris` - hris
          * `ats` - ats
          * `accounting` - accounting
          * `ticketing` - ticketing
          * `crm` - crm
          * `mktg` - mktg
          * `filestorage` - filestorage
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: end_user_email_address
        schema:
          type: string
        description: If provided, will only return linked accounts associated with
          the given email address.
      - in: query
        name: end_user_organization_name
        schema:
          type: string
        description: If provided, will only return linked accounts associated with
          the given organization name.
      - in: query
        name: end_user_origin_id
        schema:
          type: string
        description: If provided, will only return linked accounts associated with
          the given origin ID.
      - in: query
        name: end_user_origin_ids
        schema:
          type: string
        description: Comma-separated list of EndUser origin IDs, making it possible
          to specify multiple EndUsers at once.
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: ids
        schema:
          type: string
        description: Comma-separated list of LinkedAccount IDs, making it possible
          to specify multiple LinkedAccounts at once.
      - in: query
        name: include_duplicates
        schema:
          type: boolean
        description: If `true`, will include complete production duplicates of the
          account specified by the `id` query parameter in the response. `id` must
          be for a complete production linked account.
      - in: query
        name: integration_name
        schema:
          type: string
        description: If provided, will only return linked accounts associated with
          the given integration name.
      - in: query
        name: is_test_account
        schema:
          type: string
        description: If included, will only include test linked accounts. If not included,
          will only include non-test linked accounts.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
        description: 'Filter by status. Options: `COMPLETE`, `IDLE`, `INCOMPLETE`,
          `RELINK_NEEDED`'
      tags:
      - linked-accounts
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccountDetailsAndActionsList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/passthrough:
    post:
      operationId: passthrough_create
      description: Pull data from an endpoint not currently supported by Merge.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - passthrough
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPassthroughRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataPassthroughRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataPassthroughRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/payment-methods:
    get:
      operationId: payment_methods_list
      description: Returns a list of `PaymentMethod` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - payment-methods
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentMethodList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/payment-methods/{id}:
    get:
      operationId: payment_methods_retrieve
      description: Returns a `PaymentMethod` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - payment-methods
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/payment-terms:
    get:
      operationId: payment_terms_list
      description: Returns a list of `PaymentTerm` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - payment-terms
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentTermList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/payment-terms/{id}:
    get:
      operationId: payment_terms_retrieve
      description: Returns a `PaymentTerm` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - payment-terms
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTerm'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/payments:
    get:
      operationId: payments_list
      description: Returns a list of `Payment` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: account_id
        schema:
          type: string
        description: If provided, will only return payments for this account.
        examples:
          AccountId:
            summary: account_id
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return payments for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: contact_id
        schema:
          type: string
        description: If provided, will only return payments for this contact.
        examples:
          ContactId:
            summary: contact_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - account
            - accounting_period
            - applied_to_lines
            - company
            - contact
            - payment_method
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandTrackingCategories,AppliedToLines,Contact,Account,Company,AccountingPeriod,PaymentMethod:
            value: 
              tracking_categories,applied_to_lines,contact,account,company,accounting_period,payment_method
            summary: Expand Tracking_categories, Applied_to_lines, Contact, Account,
              Company, Accounting_period, Payment_method
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: transaction_date_after
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: transaction_date_before
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created before this datetime.
      tags:
      - payments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: payments_create
      description: Creates a `Payment` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/payments/{id}:
    get:
      operationId: payments_retrieve
      description: Returns a `Payment` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - account
            - accounting_period
            - applied_to_lines
            - company
            - contact
            - payment_method
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandTrackingCategories,AppliedToLines,Contact,Account,Company,AccountingPeriod,PaymentMethod:
            value: 
              tracking_categories,applied_to_lines,contact,account,company,accounting_period,payment_method
            summary: Expand Tracking_categories, Applied_to_lines, Contact, Account,
              Company, Accounting_period, Payment_method
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - payments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    patch:
      operationId: payments_partial_update
      description: Updates a `Payment` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/payments/line-items/remote-field-classes:
    get:
      operationId: payments_line_items_remote_field_classes_list
      description: Returns a list of `RemoteFieldClass` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_common_model_field
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote field classes with this
          is_common_model_field value
      - in: query
        name: is_custom
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote fields classes with this
          is_custom value
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - payments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRemoteFieldClassList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/payments/meta/patch/{id}:
    get:
      operationId: payments_meta_patch_retrieve
      description: Returns metadata for `Payment` PATCHs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - payments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-patch: META_PATCH
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/payments/meta/post:
    get:
      operationId: payments_meta_post_retrieve
      description: Returns metadata for `Payment` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - payments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/payments/remote-field-classes:
    get:
      operationId: payments_remote_field_classes_list
      description: Returns a list of `RemoteFieldClass` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_common_model_field
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote field classes with this
          is_common_model_field value
      - in: query
        name: is_custom
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote fields classes with this
          is_custom value
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - payments
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRemoteFieldClassList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/phone-numbers/{id}:
    get:
      operationId: phone_numbers_retrieve
      description: Returns an `AccountingPhoneNumber` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - phone-numbers
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingPhoneNumber'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/projects:
    get:
      operationId: projects_list
      description: Returns a list of `Project` objects.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
            - contact
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany,Contact:
            value: company,contact
            summary: Expand Company, Contact
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - projects
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/projects/{id}:
    get:
      operationId: projects_retrieve
      description: Returns a `Project` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
            - contact
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany,Contact:
            value: company,contact
            summary: Expand Company, Contact
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - projects
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/purchase-orders:
    get:
      operationId: purchase_orders_list
      description: Returns a list of `PurchaseOrder` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return purchase orders for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - company
            - delivery_address
            - line_items
            - payment_term
            - tracking_categories
            - vendor
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandLineItems,TrackingCategories,DeliveryAddress,Vendor,Company,AccountingPeriod,PaymentTerm:
            value: 
              line_items,tracking_categories,delivery_address,vendor,company,accounting_period,payment_term
            summary: Expand Line_items, Tracking_categories, Delivery_address, Vendor,
              Company, Accounting_period, Payment_term
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: issue_date_after
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: issue_date_before
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - status
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - status
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      tags:
      - purchase-orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchaseOrderList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: purchase_orders_create
      description: Creates a `PurchaseOrder` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - purchase-orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseOrderEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseOrderEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/purchase-orders/{id}:
    get:
      operationId: purchase_orders_retrieve
      description: Returns a `PurchaseOrder` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - company
            - delivery_address
            - line_items
            - payment_term
            - tracking_categories
            - vendor
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandLineItems,TrackingCategories,DeliveryAddress,Vendor,Company,AccountingPeriod,PaymentTerm:
            value: 
              line_items,tracking_categories,delivery_address,vendor,company,accounting_period,payment_term
            summary: Expand Line_items, Tracking_categories, Delivery_address, Vendor,
              Company, Accounting_period, Payment_term
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_remote_fields
        schema:
          type: boolean
        description: Whether to include all remote fields, including fields that Merge
          did not map to common models, in a normalized format.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - status
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - status
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      tags:
      - purchase-orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/purchase-orders/line-items/remote-field-classes:
    get:
      operationId: purchase_orders_line_items_remote_field_classes_list
      description: Returns a list of `RemoteFieldClass` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_common_model_field
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote field classes with this
          is_common_model_field value
      - in: query
        name: is_custom
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote fields classes with this
          is_custom value
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - purchase-orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRemoteFieldClassList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/purchase-orders/meta/post:
    get:
      operationId: purchase_orders_meta_post_retrieve
      description: Returns metadata for `PurchaseOrder` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - purchase-orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/purchase-orders/remote-field-classes:
    get:
      operationId: purchase_orders_remote_field_classes_list
      description: Returns a list of `RemoteFieldClass` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: is_common_model_field
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote field classes with this
          is_common_model_field value
      - in: query
        name: is_custom
        schema:
          type: boolean
          nullable: true
        description: If provided, will only return remote fields classes with this
          is_custom value
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - purchase-orders
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRemoteFieldClassList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/regenerate-key:
    post:
      operationId: regenerate_key_create
      description: Exchange remote keys.
      tags:
      - regenerate-key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteKeyForRegenerationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemoteKeyForRegenerationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RemoteKeyForRegenerationRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteKey'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/remote-fields:
    get:
      operationId: remote_fields_retrieve
      description: Get all remote fields for a Linked Account. Remote fields are third-party
        fields that are accessible after initial sync if remote_data is enabled. You
        can use remote fields to override existing Merge fields or map a new Merge
        field. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/overview/).
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: common_models
        schema:
          type: string
        description: A comma seperated list of Common Model names. If included, will
          only return Remote Fields for those Common Models.
      - in: query
        name: include_example_values
        schema:
          type: string
        description: If true, will include example values, where available, for remote
          fields in the 3rd party platform. These examples come from active data from
          your customers.
      tags:
      - field-mapping
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteFieldAPIResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/sync-status:
    get:
      operationId: sync_status_list
      description: Get sync status for the current sync and the most recently finished
        sync. `last_sync_start` represents the most recent time any sync began. `last_sync_finished`
        represents the most recent time any sync completed. These timestamps may correspond
        to different sync instances which may result in a sync start time being later
        than a separate sync completed time. To ensure you are retrieving the latest
        available data reference the `last_sync_finished` timestamp where `last_sync_result`
        is `DONE`. Possible values for `status` and `last_sync_result` are `DISABLED`,
        `DONE`, `FAILED`, `PARTIALLY_SYNCED`, `PAUSED`, `SYNCING`. Learn more about
        sync status in our [Help Center](https://help.merge.dev/en/articles/8184193-merge-sync-statuses).
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - sync-status
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSyncStatusList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/sync-status/resync:
    post:
      operationId: sync_status_resync_create
      description: Force re-sync of all models. This endpoint is available for monthly,
        quarterly, and highest sync frequency customers on the Professional or Enterprise
        plans. Doing so will consume a sync credit for the relevant linked account.
        Force re-syncs can also be triggered manually in the Merge Dashboard and is
        available for all customers.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - force-resync
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SyncStatus'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/target-fields:
    get:
      operationId: target_fields_retrieve
      description: Get all organization-wide Target Fields, this will not include
        any Linked Account specific Target Fields. Organization-wide Target Fields
        are additional fields appended to the Merge Common Model for all Linked Accounts
        in a category. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/target-fields/).
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - field-mapping
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalTargetFieldAPIResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/tax-rates:
    get:
      operationId: tax_rates_list
      description: Returns a list of `TaxRate` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return tax rates for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - in: query
        name: name
        schema:
          type: string
          nullable: true
        description: If provided, will only return TaxRates with this name.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      tags:
      - tax-rates
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaxRateList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/tax-rates/{id}:
    get:
      operationId: tax_rates_retrieve
      description: Returns a `TaxRate` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - tax-rates
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRate'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC_BETA
  /accounting/v1/tracking-categories:
    get:
      operationId: tracking_categories_list
      description: Returns a list of `TrackingCategory` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: category_type
        schema:
          type: string
          nullable: true
          enum:
          - ''
          - CLASS
          - DEPARTMENT
          - 
        description: If provided, will only return tracking categories with this type.
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return tracking categories for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - in: query
        name: name
        schema:
          type: string
          nullable: true
        description: If provided, will only return tracking categories with this name.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - status
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - status
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      - in: query
        name: status
        schema:
          type: string
          nullable: true
          enum:
          - ''
          - ACTIVE
          - ARCHIVED
          - 
        description: If provided, will only return tracking categories with this status.
      tags:
      - tracking-categories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrackingCategoryList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/tracking-categories/{id}:
    get:
      operationId: tracking_categories_retrieve
      description: Returns a `TrackingCategory` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - company
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandCompany:
            value: company
            summary: Expand Company
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: remote_fields
        schema:
          type: string
          enum:
          - status
        description: Deprecated. Use show_enum_origins.
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      - in: query
        name: show_enum_origins
        schema:
          type: string
          enum:
          - status
        description: A comma separated list of enum field names for which you'd like
          the original values to be returned, instead of Merge's normalized enum values.
          [Learn 
          more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)
        examples:
          OriginalEnumValuesStatus:
            value: status
            summary: Original Enum Values Status
      tags:
      - tracking-categories
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackingCategory'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/transactions:
    get:
      operationId: transactions_list
      description: Returns a list of `Transaction` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return accounting transactions for this
          company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - account
            - accounting_period
            - contact
            - line_items
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandLineItems,TrackingCategories,Contact,Account,AccountingPeriod:
            value: line_items,tracking_categories,contact,account,accounting_period
            summary: Expand Line_items, Tracking_categories, Contact, Account, Accounting_period
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: transaction_date_after
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: transaction_date_before
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created before this datetime.
      tags:
      - transactions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactionList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/transactions/{id}:
    get:
      operationId: transactions_retrieve
      description: Returns a `Transaction` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - account
            - accounting_period
            - contact
            - line_items
            - tracking_categories
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandLineItems,TrackingCategories,Contact,Account,AccountingPeriod:
            value: line_items,tracking_categories,contact,account,accounting_period
            summary: Expand Line_items, Tracking_categories, Contact, Account, Accounting_period
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - transactions
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/vendor-credits:
    get:
      operationId: vendor_credits_list
      description: Returns a list of `VendorCredit` objects.
      x-fern-pagination:
        cursor: $request.cursor
        next_cursor: $response.next
        results: $response.results
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: company_id
        schema:
          type: string
        description: If provided, will only return vendor credits for this company.
        examples:
          CompanyId:
            summary: company_id
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
        description: If provided, will only return objects created before this datetime.
      - in: query
        name: cursor
        schema:
          type: string
        description: The pagination cursor value.
        examples:
          CursorExample:
            value: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
            summary: Cursor Example
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - company
            - lines
            - tracking_categories
            - vendor
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandLines,TrackingCategories,Vendor,Company,AccountingPeriod:
            value: lines,tracking_categories,vendor,company,accounting_period
            summary: Expand Lines, Tracking_categories, Vendor, Company, Accounting_period
        explode: false
      - in: query
        name: include_deleted_data
        schema:
          type: boolean
        description: Indicates whether or not this object has been deleted in the
          third party platform. Full coverage deletion detection is a premium add-on.
          Native deletion detection is offered for free with limited coverage. [Learn
          more](https://docs.merge.dev/integrations/hris/supported-features/).
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      - in: query
        name: modified_after
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge after this date time
          will be returned.
      - in: query
        name: modified_before
        schema:
          type: string
          format: date-time
        description: If provided, only objects synced by Merge before this date time
          will be returned.
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: remote_id
        schema:
          type: string
          nullable: true
        description: The API provider's ID for the given object.
      - in: query
        name: transaction_date_after
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created after this datetime.
      - in: query
        name: transaction_date_before
        schema:
          type: string
          format: date-time
          nullable: true
        description: If provided, will only return objects created before this datetime.
      tags:
      - vendor-credits
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVendorCreditList'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: vendor_credits_create
      description: Creates a `VendorCredit` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: is_debug_mode
        schema:
          type: boolean
        description: Whether to include debug fields (such as log file links) in the
          response.
      - in: query
        name: run_async
        schema:
          type: boolean
        description: Whether or not third-party updates should be run asynchronously.
      tags:
      - vendor-credits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorCreditEndpointRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorCreditEndpointRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VendorCreditEndpointRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorCreditResponse'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/vendor-credits/{id}:
    get:
      operationId: vendor_credits_retrieve
      description: Returns a `VendorCredit` object with the given `id`.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      - in: query
        name: expand
        schema:
          type: array
          items:
            type: string
            enum:
            - accounting_period
            - company
            - lines
            - tracking_categories
            - vendor
        description: Which relations should be returned in expanded form. Multiple
          relation names should be comma separated without spaces.
        examples:
          ExpandLines,TrackingCategories,Vendor,Company,AccountingPeriod:
            value: lines,tracking_categories,vendor,company,accounting_period
            summary: Expand Lines, Tracking_categories, Vendor, Company, Accounting_period
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_remote_data
        schema:
          type: boolean
        description: Whether to include the original data Merge fetched from the third-party
          to produce these models.
      - in: query
        name: include_shell_data
        schema:
          type: boolean
        description: Whether to include shell records. Shell records are empty records
          (they may contain some metadata but all other fields are null).
      tags:
      - vendor-credits
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorCredit'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/vendor-credits/meta/post:
    get:
      operationId: vendor_credits_meta_post_retrieve
      description: Returns metadata for `VendorCredit` POSTs.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - vendor-credits
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponse'
          description: ''
      x-merge-meta-post: META_POST
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
  /accounting/v1/webhook-receivers:
    get:
      operationId: webhook_receivers_list
      description: Returns a list of `WebhookReceiver` objects.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - webhook-receivers
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookReceiver'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
    post:
      operationId: webhook_receivers_create
      description: Creates a `WebhookReceiver` object with the given values.
      parameters:
      - in: header
        name: X-Account-Token
        schema:
          type: string
        description: Token identifying the end user.
        required: true
      tags:
      - webhook-receivers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookReceiverRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebhookReceiverRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebhookReceiverRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookReceiver'
          description: ''
      x-endpoint-availability: ENDPOINT_AVAILABILITY_PUBLIC
components:
  schemas:
    Account:
      type: object
      description: |-
        # The Account Object
        ### Description
        An `Account` represents a category in a company’s ledger in which a financial transaction is recorded against. The aggregation of each `Account` object is often referred to as the **Chart of Accounts**.

        An `Account` can be classified into one of the following categories, determined through the `classification` field:
        * __Asset:__ Accounts Receivable and Bank Accounts
        * __Liability:__ Accounts Payable and Credit Card Accounts
        * __Equity:__ Treasury Accounts and Retained Earnings
        * __Revenue:__ Income and Other Income
        * __Expense:__ Cost of Goods Sold and Office Expenses

        ### Usage Example
        Fetch from the `LIST Accounts` endpoint and view a company's accounts.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '21'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          nullable: true
          description: The account's name.
          example: Cash
        description:
          type: string
          nullable: true
          description: The account's description.
          example: Cash
        classification:
          oneOf:
          - $ref: '#/components/schemas/ClassificationEnum'
          - type: string
          nullable: true
          description: |-
            The account's broadest grouping.

            * `ASSET` - ASSET
            * `EQUITY` - EQUITY
            * `EXPENSE` - EXPENSE
            * `LIABILITY` - LIABILITY
            * `REVENUE` - REVENUE
          example: ASSET
        type:
          type: string
          nullable: true
          description: The account's type is a narrower and more specific grouping
            within the account's classification.
          example: Asset
        account_type:
          oneOf:
          - $ref: '#/components/schemas/AccountAccountTypeEnum'
          - type: string
          nullable: true
          description: |-
            Normalized account type- which is a narrower and more specific grouping within the account's classification.

            * `BANK` - BANK
            * `CREDIT_CARD` - CREDIT_CARD
            * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
            * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
            * `FIXED_ASSET` - FIXED_ASSET
            * `OTHER_ASSET` - OTHER_ASSET
            * `OTHER_CURRENT_ASSET` - OTHER_CURRENT_ASSET
            * `OTHER_EXPENSE` - OTHER_EXPENSE
            * `OTHER_INCOME` - OTHER_INCOME
            * `COST_OF_GOODS_SOLD` - COST_OF_GOODS_SOLD
            * `OTHER_CURRENT_LIABILITY` - OTHER_CURRENT_LIABILITY
            * `LONG_TERM_LIABILITY` - LONG_TERM_LIABILITY
            * `NON_POSTING` - NON_POSTING
          example: FIXED_ASSET
        status:
          oneOf:
          - $ref: '#/components/schemas/AccountStatusEnum'
          - type: string
          nullable: true
          description: |-
            The account's status.

            * `ACTIVE` - ACTIVE
            * `PENDING` - PENDING
            * `INACTIVE` - INACTIVE
          example: ACTIVE
        current_balance:
          type: number
          format: double
          nullable: true
          description: The account's current balance.
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The account's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        account_number:
          type: string
          nullable: true
          description: The account's number.
          example: X12Y9AB
        parent_account:
          type: string
          format: uuid
          nullable: true
          description: ID of the parent account.
          example: 22d92d6c-22f9-11ed-861d-0242ac120002
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the account belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      x-merge-model-tooltip:
        title: Looking for __Bank Accounts__?
        content: Bank Accounts are represented as an __Account__ with a `classification`
          of __ASSET__.
      x-merge-expands: '{"owner": "User"}'
      x-merge-category: accounting
    AccountAccountTypeEnum:
      enum:
      - BANK
      - CREDIT_CARD
      - ACCOUNTS_PAYABLE
      - ACCOUNTS_RECEIVABLE
      - FIXED_ASSET
      - OTHER_ASSET
      - OTHER_CURRENT_ASSET
      - OTHER_EXPENSE
      - OTHER_INCOME
      - COST_OF_GOODS_SOLD
      - OTHER_CURRENT_LIABILITY
      - LONG_TERM_LIABILITY
      - NON_POSTING
      type: string
      description: |-
        * `BANK` - BANK
        * `CREDIT_CARD` - CREDIT_CARD
        * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
        * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
        * `FIXED_ASSET` - FIXED_ASSET
        * `OTHER_ASSET` - OTHER_ASSET
        * `OTHER_CURRENT_ASSET` - OTHER_CURRENT_ASSET
        * `OTHER_EXPENSE` - OTHER_EXPENSE
        * `OTHER_INCOME` - OTHER_INCOME
        * `COST_OF_GOODS_SOLD` - COST_OF_GOODS_SOLD
        * `OTHER_CURRENT_LIABILITY` - OTHER_CURRENT_LIABILITY
        * `LONG_TERM_LIABILITY` - LONG_TERM_LIABILITY
        * `NON_POSTING` - NON_POSTING
      x-merge-category: accounting
    AccountDetails:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 0496d4c2-42e6-4072-80b3-7b69bfdc76fd
        integration:
          type: string
          readOnly: true
          example: BambooHR
        integration_slug:
          type: string
          readOnly: true
          example: bamboohr
        category:
          allOf:
          - $ref: '#/components/schemas/CategoryEnum'
          nullable: true
          example: hris
        end_user_origin_id:
          type: string
          readOnly: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        end_user_organization_name:
          type: string
          readOnly: true
          example: Waystar Royco
        end_user_email_address:
          type: string
          format: email
          readOnly: true
          example: kendall.roy@waystar-royco.com
        status:
          type: string
          readOnly: true
          example: COMPLETE
        webhook_listener_url:
          type: string
          format: uri
          readOnly: true
          example: https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4
        is_duplicate:
          type: boolean
          nullable: true
          readOnly: true
          description: Whether a Production Linked Account's credentials match another
            existing Production Linked Account. This field is `null` for Test Linked
            Accounts, incomplete Production Linked Accounts, and ignored duplicate
            Production Linked Account sets.
          example: true
        account_type:
          type: string
          readOnly: true
          example: PRODUCTION
        completed_at:
          type: string
          format: date-time
          nullable: true
          description: The time at which account completes the linking flow.
          example: '2024-08-26T20:11:19.277118Z'
      x-merge-category: accounting
    AccountDetailsAndActions:
      type: object
      description: |-
        # The LinkedAccount Object
        ### Description
        The `LinkedAccount` object is used to represent an end user's link with a specific integration.

        ### Usage Example
        View a list of your organization's `LinkedAccount` objects.
      properties:
        id:
          type: string
          example: e59b1821-f85c-4e28-a6b3-1804156f3563
        category:
          oneOf:
          - $ref: '#/components/schemas/CategoryEnum'
          - type: string
          example: hris
        status:
          oneOf:
          - $ref: '#/components/schemas/AccountDetailsAndActionsStatusEnum'
          - type: string
          example: INCOMPLETE
        status_detail:
          type: string
          example: Invalid login credentials
        end_user_origin_id:
          type: string
          example: 3ac95cde-6c7f-4eef-afec-be710b42308d
        end_user_organization_name:
          type: string
          example: Foo Bar, LLC
        end_user_email_address:
          type: string
          example: hradmin@foobar.dev
        subdomain:
          type: string
          description: The tenant or domain the customer has provided access to.
          example: foobar
        webhook_listener_url:
          type: string
          example: https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4
        is_duplicate:
          type: boolean
          nullable: true
          description: Whether a Production Linked Account's credentials match another
            existing Production Linked Account. This field is `null` for Test Linked
            Accounts, incomplete Production Linked Accounts, and ignored duplicate
            Production Linked Account sets.
          example: true
        integration:
          $ref: '#/components/schemas/AccountDetailsAndActionsIntegration'
          example:
            name: SAP SuccessFactors
            categories:
            - hris
            - ats
            image: https://cdn.merge.dev/SuccessFactors_Logo.png
            square_image: https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg
            color: '#F6A704'
            slug: sap-successfactors
            passthrough_available: true
            available_model_operations:
            - model_name: Candidate
              available_operations:
              - FETCH
              - CREATE
              required_post_parameters:
              - remote_user_id
              supported_fields:
              - first_name
              - last_name
              - company
              - title
        account_type:
          type: string
          example: PRODUCTION
        completed_at:
          type: string
          format: date-time
          example: '2024-08-26T20:11:19.277118Z'
      required:
      - account_type
      - completed_at
      - end_user_email_address
      - end_user_organization_name
      - id
      - status
      - webhook_listener_url
      x-merge-sample-json: '{"id": "e59b1821-f85c-4e28-a6b3-1804156f3563", "category":
        "hris", "status": "INCOMPLETE", "status_detail": "Invalid login credentials",
        "end_user_origin_id": "3ac95cde-6c7f-4eef-afec-be710b42308d", "end_user_organization_name":
        "Foo Bar, LLC", "end_user_email_address": "hradmin@foobar.dev", "webhook_listener_url":
        "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
        "is_duplicate": true, "integration": {"name": "SAP SuccessFactors", "categories":
        ["hris", "ats"], "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
        "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg", "color":
        "#F6A704", "slug": "sap-successfactors", "passthrough_available": true, "available_model_operations":
        [{"model_name": "Candidate", "available_operations": ["FETCH", "CREATE"],
        "required_post_parameters": ["remote_user_id"], "supported_fields": ["first_name",
        "last_name", "company", "title"]}]}}'
      x-merge-category: accounting
    AccountDetailsAndActionsIntegration:
      type: object
      properties:
        name:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoriesEnum'
        image:
          type: string
        square_image:
          type: string
        color:
          type: string
        slug:
          type: string
        passthrough_available:
          type: boolean
        available_model_operations:
          type: array
          items:
            $ref: '#/components/schemas/ModelOperation'
      required:
      - categories
      - color
      - name
      - passthrough_available
      - slug
      x-merge-category: accounting
    AccountDetailsAndActionsStatusEnum:
      enum:
      - COMPLETE
      - INCOMPLETE
      - RELINK_NEEDED
      - IDLE
      type: string
      description: |-
        * `COMPLETE` - COMPLETE
        * `INCOMPLETE` - INCOMPLETE
        * `RELINK_NEEDED` - RELINK_NEEDED
        * `IDLE` - IDLE
      x-merge-category: accounting
    AccountEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/AccountRequest'
      required:
      - model
      x-merge-category: accounting
    AccountIntegration:
      type: object
      properties:
        name:
          type: string
          description: Company name.
        abbreviated_name:
          type: string
          nullable: true
          description: "Optional. This shortened name appears in places with limited
            space, usually in conjunction with the platform's logo (e.g., Merge Link
            menu).<br><br>Example: <i>Workforce Now (in lieu of ADP Workforce Now),
            SuccessFactors (in lieu of SAP SuccessFactors)</i>"
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoriesEnum'
          description: Category or categories this integration belongs to. Multiple
            categories should be comma separated, i.e. [ats, hris].
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
          description: Company logo in rectangular shape.
        square_image:
          type: string
          format: uri
          nullable: true
          description: Company logo in square shape.
        color:
          type: string
          description: The color of this integration used for buttons and text throughout
            the app and landing pages. <b>Choose a darker, saturated color.</b>
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 18
        slug:
          type: string
          readOnly: true
        api_endpoints_to_documentation_urls:
          type: object
          additionalProperties: {}
          description: "Mapping of API endpoints to documentation urls for support.
            Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions',
            'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']],
            'POST': []}"
        webhook_setup_guide_url:
          type: string
          nullable: true
          description: Setup guide URL for third party webhook creation. Exposed in
            Merge Docs.
        category_beta_status:
          type: object
          description: Category or categories this integration is in beta status for.
          readOnly: true
      required:
      - name
      x-merge-category: accounting
    AccountRequest:
      type: object
      description: |-
        # The Account Object
        ### Description
        An `Account` represents a category in a company’s ledger in which a financial transaction is recorded against. The aggregation of each `Account` object is often referred to as the **Chart of Accounts**.

        An `Account` can be classified into one of the following categories, determined through the `classification` field:
        * __Asset:__ Accounts Receivable and Bank Accounts
        * __Liability:__ Accounts Payable and Credit Card Accounts
        * __Equity:__ Treasury Accounts and Retained Earnings
        * __Revenue:__ Income and Other Income
        * __Expense:__ Cost of Goods Sold and Office Expenses

        ### Usage Example
        Fetch from the `LIST Accounts` endpoint and view a company's accounts.
      properties:
        name:
          type: string
          nullable: true
          description: The account's name.
          example: Cash
        description:
          type: string
          nullable: true
          description: The account's description.
          example: Cash
        classification:
          oneOf:
          - $ref: '#/components/schemas/ClassificationEnum'
          - type: string
          nullable: true
          description: |-
            The account's broadest grouping.

            * `ASSET` - ASSET
            * `EQUITY` - EQUITY
            * `EXPENSE` - EXPENSE
            * `LIABILITY` - LIABILITY
            * `REVENUE` - REVENUE
          example: ASSET
        type:
          type: string
          nullable: true
          description: The account's type is a narrower and more specific grouping
            within the account's classification.
          example: Asset
        account_type:
          oneOf:
          - $ref: '#/components/schemas/AccountAccountTypeEnum'
          - type: string
          nullable: true
          description: |-
            Normalized account type- which is a narrower and more specific grouping within the account's classification.

            * `BANK` - BANK
            * `CREDIT_CARD` - CREDIT_CARD
            * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
            * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
            * `FIXED_ASSET` - FIXED_ASSET
            * `OTHER_ASSET` - OTHER_ASSET
            * `OTHER_CURRENT_ASSET` - OTHER_CURRENT_ASSET
            * `OTHER_EXPENSE` - OTHER_EXPENSE
            * `OTHER_INCOME` - OTHER_INCOME
            * `COST_OF_GOODS_SOLD` - COST_OF_GOODS_SOLD
            * `OTHER_CURRENT_LIABILITY` - OTHER_CURRENT_LIABILITY
            * `LONG_TERM_LIABILITY` - LONG_TERM_LIABILITY
            * `NON_POSTING` - NON_POSTING
          example: FIXED_ASSET
        status:
          oneOf:
          - $ref: '#/components/schemas/AccountStatusEnum'
          - type: string
          nullable: true
          description: |-
            The account's status.

            * `ACTIVE` - ACTIVE
            * `PENDING` - PENDING
            * `INACTIVE` - INACTIVE
          example: ACTIVE
        current_balance:
          type: number
          format: double
          nullable: true
          description: The account's current balance.
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The account's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        account_number:
          type: string
          nullable: true
          description: The account's number.
          example: X12Y9AB
        parent_account:
          type: string
          format: uuid
          nullable: true
          description: ID of the parent account.
          example: 22d92d6c-22f9-11ed-861d-0242ac120002
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the account belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-model-tooltip:
        title: Looking for __Bank Accounts__?
        content: Bank Accounts are represented as an __Account__ with a `classification`
          of __ASSET__.
      x-merge-expands: '{"owner": "User"}'
      x-merge-category: accounting
    AccountResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/Account'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    AccountStatusEnum:
      enum:
      - ACTIVE
      - PENDING
      - INACTIVE
      type: string
      description: |-
        * `ACTIVE` - ACTIVE
        * `PENDING` - PENDING
        * `INACTIVE` - INACTIVE
      x-merge-category: accounting
    AccountToken:
      type: object
      properties:
        account_token:
          type: string
          example: T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB
        integration:
          $ref: '#/components/schemas/AccountIntegration'
          example:
            name: SAP SuccessFactors
            categories:
            - hris
            - ats
            image: https://cdn.merge.dev/SuccessFactors_Logo.png
            square_image: https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg
            color: '#F6A704'
            slug: sap-successfactors
        id:
          type: string
          example: 0496d4c2-42e6-4072-80b3-7b69bfdc76fd
      required:
      - account_token
      - id
      - integration
      x-merge-category: accounting
    AccountingAttachment:
      type: object
      description: |-
        # The Accounting Attachment Object
        ### Description
        The `AccountingAttachment` object is used to represent a company's attachments.

        ### Usage Example
        Fetch from the `LIST AccountingAttachments` endpoint and view a company's attachments.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '1018270'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        file_name:
          type: string
          nullable: true
          description: The attachment's name.
          example: invoice.png
        file_url:
          type: string
          format: uri
          nullable: true
          maxLength: 2000
          example: https://merge-brand.s3.amazonaws.com/20210315/rect-logo-270x80%402x.png
          description: The attachment's url.
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the accounting attachment belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      x-merge-category: accounting
    AccountingAttachmentEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/AccountingAttachmentRequest'
      required:
      - model
      x-merge-category: accounting
    AccountingAttachmentRequest:
      type: object
      description: |-
        # The Accounting Attachment Object
        ### Description
        The `AccountingAttachment` object is used to represent a company's attachments.

        ### Usage Example
        Fetch from the `LIST AccountingAttachments` endpoint and view a company's attachments.
      properties:
        file_name:
          type: string
          nullable: true
          description: The attachment's name.
          example: invoice.png
        file_url:
          type: string
          format: uri
          nullable: true
          maxLength: 2000
          example: https://merge-brand.s3.amazonaws.com/20210315/rect-logo-270x80%402x.png
          description: The attachment's url.
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the accounting attachment belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-category: accounting
    AccountingAttachmentResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/AccountingAttachment'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    AccountingPeriod:
      type: object
      description: |-
        # The AccountingPeriod Object
        ### Description
        The `AccountingPeriod` object is used to define a period of time in which events occurred.

        ### Usage Example
        Common models like `Invoice` and `Transaction` will have `AccountingPeriod` objects which will denote when they occurred.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 3015f7b1-4d01-460d-bfab-02a52d16cbd0
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '2804580'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          nullable: true
          description: Name of the accounting period.
          maxLength: 100
          example: April 2020 Financials
        status:
          oneOf:
          - $ref: '#/components/schemas/Status895Enum'
          - type: string
          nullable: true
          example: ACTIVE
        start_date:
          type: string
          format: date-time
          nullable: true
          description: Beginning date of the period
          example: '2020-03-31T00:00:00Z'
        end_date:
          type: string
          format: date-time
          nullable: true
          description: End date of the period
          example: '2020-04-31T00:00:00Z'
        field_mappings:
          type: object
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      x-merge-category: accounting
    AccountingPhoneNumber:
      type: object
      description: |-
        # The AccountingPhoneNumber Object
        ### Description
        The `AccountingPhoneNumber` object is used to represent a contact's or company's phone number.

        ### Usage Example
        Fetch from the `GET CompanyInfo` endpoint and view the company's phone numbers.
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        number:
          type: string
          nullable: true
          description: The phone number.
          example: '+3198675309'
        type:
          type: string
          nullable: true
          description: The phone number's type.
          example: Mobile
      x-merge-category: accounting
    AccountingPhoneNumberRequest:
      type: object
      description: |-
        # The AccountingPhoneNumber Object
        ### Description
        The `AccountingPhoneNumber` object is used to represent a contact's or company's phone number.

        ### Usage Example
        Fetch from the `GET CompanyInfo` endpoint and view the company's phone numbers.
      properties:
        number:
          type: string
          nullable: true
          description: The phone number.
          example: '+3198675309'
        type:
          type: string
          nullable: true
          description: The phone number's type.
          example: Mobile
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-category: accounting
    Address:
      type: object
      description: |-
        # The Address Object
        ### Description
        The `Address` object is used to represent a contact's or company's address.

        ### Usage Example
        Fetch from the `GET CompanyInfo` endpoint and view the company's addresses.
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        type:
          oneOf:
          - $ref: '#/components/schemas/AddressTypeEnum'
          - type: string
          nullable: true
          description: |-
            The address type.

            * `BILLING` - BILLING
            * `SHIPPING` - SHIPPING
          example: SHIPPING
        street_1:
          type: string
          nullable: true
          description: Line 1 of the address's street.
          example: 2920 Broadway
        street_2:
          type: string
          nullable: true
          description: Line 2 of the address's street.
          example: 2nd Floor
        city:
          type: string
          nullable: true
          description: The address's city.
          example: New York
        state:
          nullable: true
          description: The address's state or region.
          readOnly: true
          example: NY
        country_subdivision:
          type: string
          nullable: true
          description: The address's state or region.
          example: NY
        country:
          oneOf:
          - $ref: '#/components/schemas/CountryEnum'
          - type: string
          nullable: true
          description: |-
            The address's country.

            * `AF` - Afghanistan
            * `AX` - Åland Islands
            * `AL` - Albania
            * `DZ` - Algeria
            * `AS` - American Samoa
            * `AD` - Andorra
            * `AO` - Angola
            * `AI` - Anguilla
            * `AQ` - Antarctica
            * `AG` - Antigua and Barbuda
            * `AR` - Argentina
            * `AM` - Armenia
            * `AW` - Aruba
            * `AU` - Australia
            * `AT` - Austria
            * `AZ` - Azerbaijan
            * `BS` - Bahamas
            * `BH` - Bahrain
            * `BD` - Bangladesh
            * `BB` - Barbados
            * `BY` - Belarus
            * `BE` - Belgium
            * `BZ` - Belize
            * `BJ` - Benin
            * `BM` - Bermuda
            * `BT` - Bhutan
            * `BO` - Bolivia
            * `BQ` - Bonaire, Sint Eustatius and Saba
            * `BA` - Bosnia and Herzegovina
            * `BW` - Botswana
            * `BV` - Bouvet Island
            * `BR` - Brazil
            * `IO` - British Indian Ocean Territory
            * `BN` - Brunei
            * `BG` - Bulgaria
            * `BF` - Burkina Faso
            * `BI` - Burundi
            * `CV` - Cabo Verde
            * `KH` - Cambodia
            * `CM` - Cameroon
            * `CA` - Canada
            * `KY` - Cayman Islands
            * `CF` - Central African Republic
            * `TD` - Chad
            * `CL` - Chile
            * `CN` - China
            * `CX` - Christmas Island
            * `CC` - Cocos (Keeling) Islands
            * `CO` - Colombia
            * `KM` - Comoros
            * `CG` - Congo
            * `CD` - Congo (the Democratic Republic of the)
            * `CK` - Cook Islands
            * `CR` - Costa Rica
            * `CI` - Côte d'Ivoire
            * `HR` - Croatia
            * `CU` - Cuba
            * `CW` - Curaçao
            * `CY` - Cyprus
            * `CZ` - Czechia
            * `DK` - Denmark
            * `DJ` - Djibouti
            * `DM` - Dominica
            * `DO` - Dominican Republic
            * `EC` - Ecuador
            * `EG` - Egypt
            * `SV` - El Salvador
            * `GQ` - Equatorial Guinea
            * `ER` - Eritrea
            * `EE` - Estonia
            * `SZ` - Eswatini
            * `ET` - Ethiopia
            * `FK` - Falkland Islands (Malvinas)
            * `FO` - Faroe Islands
            * `FJ` - Fiji
            * `FI` - Finland
            * `FR` - France
            * `GF` - French Guiana
            * `PF` - French Polynesia
            * `TF` - French Southern Territories
            * `GA` - Gabon
            * `GM` - Gambia
            * `GE` - Georgia
            * `DE` - Germany
            * `GH` - Ghana
            * `GI` - Gibraltar
            * `GR` - Greece
            * `GL` - Greenland
            * `GD` - Grenada
            * `GP` - Guadeloupe
            * `GU` - Guam
            * `GT` - Guatemala
            * `GG` - Guernsey
            * `GN` - Guinea
            * `GW` - Guinea-Bissau
            * `GY` - Guyana
            * `HT` - Haiti
            * `HM` - Heard Island and McDonald Islands
            * `VA` - Holy See
            * `HN` - Honduras
            * `HK` - Hong Kong
            * `HU` - Hungary
            * `IS` - Iceland
            * `IN` - India
            * `ID` - Indonesia
            * `IR` - Iran
            * `IQ` - Iraq
            * `IE` - Ireland
            * `IM` - Isle of Man
            * `IL` - Israel
            * `IT` - Italy
            * `JM` - Jamaica
            * `JP` - Japan
            * `JE` - Jersey
            * `JO` - Jordan
            * `KZ` - Kazakhstan
            * `KE` - Kenya
            * `KI` - Kiribati
            * `KW` - Kuwait
            * `KG` - Kyrgyzstan
            * `LA` - Laos
            * `LV` - Latvia
            * `LB` - Lebanon
            * `LS` - Lesotho
            * `LR` - Liberia
            * `LY` - Libya
            * `LI` - Liechtenstein
            * `LT` - Lithuania
            * `LU` - Luxembourg
            * `MO` - Macao
            * `MG` - Madagascar
            * `MW` - Malawi
            * `MY` - Malaysia
            * `MV` - Maldives
            * `ML` - Mali
            * `MT` - Malta
            * `MH` - Marshall Islands
            * `MQ` - Martinique
            * `MR` - Mauritania
            * `MU` - Mauritius
            * `YT` - Mayotte
            * `MX` - Mexico
            * `FM` - Micronesia (Federated States of)
            * `MD` - Moldova
            * `MC` - Monaco
            * `MN` - Mongolia
            * `ME` - Montenegro
            * `MS` - Montserrat
            * `MA` - Morocco
            * `MZ` - Mozambique
            * `MM` - Myanmar
            * `NA` - Namibia
            * `NR` - Nauru
            * `NP` - Nepal
            * `NL` - Netherlands
            * `NC` - New Caledonia
            * `NZ` - New Zealand
            * `NI` - Nicaragua
            * `NE` - Niger
            * `NG` - Nigeria
            * `NU` - Niue
            * `NF` - Norfolk Island
            * `KP` - North Korea
            * `MK` - North Macedonia
            * `MP` - Northern Mariana Islands
            * `NO` - Norway
            * `OM` - Oman
            * `PK` - Pakistan
            * `PW` - Palau
            * `PS` - Palestine, State of
            * `PA` - Panama
            * `PG` - Papua New Guinea
            * `PY` - Paraguay
            * `PE` - Peru
            * `PH` - Philippines
            * `PN` - Pitcairn
            * `PL` - Poland
            * `PT` - Portugal
            * `PR` - Puerto Rico
            * `QA` - Qatar
            * `RE` - Réunion
            * `RO` - Romania
            * `RU` - Russia
            * `RW` - Rwanda
            * `BL` - Saint Barthélemy
            * `SH` - Saint Helena, Ascension and Tristan da Cunha
            * `KN` - Saint Kitts and Nevis
            * `LC` - Saint Lucia
            * `MF` - Saint Martin (French part)
            * `PM` - Saint Pierre and Miquelon
            * `VC` - Saint Vincent and the Grenadines
            * `WS` - Samoa
            * `SM` - San Marino
            * `ST` - Sao Tome and Principe
            * `SA` - Saudi Arabia
            * `SN` - Senegal
            * `RS` - Serbia
            * `SC` - Seychelles
            * `SL` - Sierra Leone
            * `SG` - Singapore
            * `SX` - Sint Maarten (Dutch part)
            * `SK` - Slovakia
            * `SI` - Slovenia
            * `SB` - Solomon Islands
            * `SO` - Somalia
            * `ZA` - South Africa
            * `GS` - South Georgia and the South Sandwich Islands
            * `KR` - South Korea
            * `SS` - South Sudan
            * `ES` - Spain
            * `LK` - Sri Lanka
            * `SD` - Sudan
            * `SR` - Suriname
            * `SJ` - Svalbard and Jan Mayen
            * `SE` - Sweden
            * `CH` - Switzerland
            * `SY` - Syria
            * `TW` - Taiwan
            * `TJ` - Tajikistan
            * `TZ` - Tanzania
            * `TH` - Thailand
            * `TL` - Timor-Leste
            * `TG` - Togo
            * `TK` - Tokelau
            * `TO` - Tonga
            * `TT` - Trinidad and Tobago
            * `TN` - Tunisia
            * `TR` - Turkey
            * `TM` - Turkmenistan
            * `TC` - Turks and Caicos Islands
            * `TV` - Tuvalu
            * `UG` - Uganda
            * `UA` - Ukraine
            * `AE` - United Arab Emirates
            * `GB` - United Kingdom
            * `UM` - United States Minor Outlying Islands
            * `US` - United States of America
            * `UY` - Uruguay
            * `UZ` - Uzbekistan
            * `VU` - Vanuatu
            * `VE` - Venezuela
            * `VN` - Vietnam
            * `VG` - Virgin Islands (British)
            * `VI` - Virgin Islands (U.S.)
            * `WF` - Wallis and Futuna
            * `EH` - Western Sahara
            * `YE` - Yemen
            * `ZM` - Zambia
            * `ZW` - Zimbabwe
          example: US
        zip_code:
          type: string
          nullable: true
          description: The address's zip code.
          example: '10027'
      x-merge-nested-write-allowed: true
      x-merge-category: accounting
    AddressRequest:
      type: object
      description: |-
        # The Address Object
        ### Description
        The `Address` object is used to represent a contact's or company's address.

        ### Usage Example
        Fetch from the `GET CompanyInfo` endpoint and view the company's addresses.
      properties:
        type:
          oneOf:
          - $ref: '#/components/schemas/AddressTypeEnum'
          - type: string
          nullable: true
          description: |-
            The address type.

            * `BILLING` - BILLING
            * `SHIPPING` - SHIPPING
          example: SHIPPING
        street_1:
          type: string
          nullable: true
          description: Line 1 of the address's street.
          example: 2920 Broadway
        street_2:
          type: string
          nullable: true
          description: Line 2 of the address's street.
          example: 2nd Floor
        city:
          type: string
          nullable: true
          description: The address's city.
          example: New York
        country_subdivision:
          type: string
          nullable: true
          description: The address's state or region.
          example: NY
        country:
          oneOf:
          - $ref: '#/components/schemas/CountryEnum'
          - type: string
          nullable: true
          description: |-
            The address's country.

            * `AF` - Afghanistan
            * `AX` - Åland Islands
            * `AL` - Albania
            * `DZ` - Algeria
            * `AS` - American Samoa
            * `AD` - Andorra
            * `AO` - Angola
            * `AI` - Anguilla
            * `AQ` - Antarctica
            * `AG` - Antigua and Barbuda
            * `AR` - Argentina
            * `AM` - Armenia
            * `AW` - Aruba
            * `AU` - Australia
            * `AT` - Austria
            * `AZ` - Azerbaijan
            * `BS` - Bahamas
            * `BH` - Bahrain
            * `BD` - Bangladesh
            * `BB` - Barbados
            * `BY` - Belarus
            * `BE` - Belgium
            * `BZ` - Belize
            * `BJ` - Benin
            * `BM` - Bermuda
            * `BT` - Bhutan
            * `BO` - Bolivia
            * `BQ` - Bonaire, Sint Eustatius and Saba
            * `BA` - Bosnia and Herzegovina
            * `BW` - Botswana
            * `BV` - Bouvet Island
            * `BR` - Brazil
            * `IO` - British Indian Ocean Territory
            * `BN` - Brunei
            * `BG` - Bulgaria
            * `BF` - Burkina Faso
            * `BI` - Burundi
            * `CV` - Cabo Verde
            * `KH` - Cambodia
            * `CM` - Cameroon
            * `CA` - Canada
            * `KY` - Cayman Islands
            * `CF` - Central African Republic
            * `TD` - Chad
            * `CL` - Chile
            * `CN` - China
            * `CX` - Christmas Island
            * `CC` - Cocos (Keeling) Islands
            * `CO` - Colombia
            * `KM` - Comoros
            * `CG` - Congo
            * `CD` - Congo (the Democratic Republic of the)
            * `CK` - Cook Islands
            * `CR` - Costa Rica
            * `CI` - Côte d'Ivoire
            * `HR` - Croatia
            * `CU` - Cuba
            * `CW` - Curaçao
            * `CY` - Cyprus
            * `CZ` - Czechia
            * `DK` - Denmark
            * `DJ` - Djibouti
            * `DM` - Dominica
            * `DO` - Dominican Republic
            * `EC` - Ecuador
            * `EG` - Egypt
            * `SV` - El Salvador
            * `GQ` - Equatorial Guinea
            * `ER` - Eritrea
            * `EE` - Estonia
            * `SZ` - Eswatini
            * `ET` - Ethiopia
            * `FK` - Falkland Islands (Malvinas)
            * `FO` - Faroe Islands
            * `FJ` - Fiji
            * `FI` - Finland
            * `FR` - France
            * `GF` - French Guiana
            * `PF` - French Polynesia
            * `TF` - French Southern Territories
            * `GA` - Gabon
            * `GM` - Gambia
            * `GE` - Georgia
            * `DE` - Germany
            * `GH` - Ghana
            * `GI` - Gibraltar
            * `GR` - Greece
            * `GL` - Greenland
            * `GD` - Grenada
            * `GP` - Guadeloupe
            * `GU` - Guam
            * `GT` - Guatemala
            * `GG` - Guernsey
            * `GN` - Guinea
            * `GW` - Guinea-Bissau
            * `GY` - Guyana
            * `HT` - Haiti
            * `HM` - Heard Island and McDonald Islands
            * `VA` - Holy See
            * `HN` - Honduras
            * `HK` - Hong Kong
            * `HU` - Hungary
            * `IS` - Iceland
            * `IN` - India
            * `ID` - Indonesia
            * `IR` - Iran
            * `IQ` - Iraq
            * `IE` - Ireland
            * `IM` - Isle of Man
            * `IL` - Israel
            * `IT` - Italy
            * `JM` - Jamaica
            * `JP` - Japan
            * `JE` - Jersey
            * `JO` - Jordan
            * `KZ` - Kazakhstan
            * `KE` - Kenya
            * `KI` - Kiribati
            * `KW` - Kuwait
            * `KG` - Kyrgyzstan
            * `LA` - Laos
            * `LV` - Latvia
            * `LB` - Lebanon
            * `LS` - Lesotho
            * `LR` - Liberia
            * `LY` - Libya
            * `LI` - Liechtenstein
            * `LT` - Lithuania
            * `LU` - Luxembourg
            * `MO` - Macao
            * `MG` - Madagascar
            * `MW` - Malawi
            * `MY` - Malaysia
            * `MV` - Maldives
            * `ML` - Mali
            * `MT` - Malta
            * `MH` - Marshall Islands
            * `MQ` - Martinique
            * `MR` - Mauritania
            * `MU` - Mauritius
            * `YT` - Mayotte
            * `MX` - Mexico
            * `FM` - Micronesia (Federated States of)
            * `MD` - Moldova
            * `MC` - Monaco
            * `MN` - Mongolia
            * `ME` - Montenegro
            * `MS` - Montserrat
            * `MA` - Morocco
            * `MZ` - Mozambique
            * `MM` - Myanmar
            * `NA` - Namibia
            * `NR` - Nauru
            * `NP` - Nepal
            * `NL` - Netherlands
            * `NC` - New Caledonia
            * `NZ` - New Zealand
            * `NI` - Nicaragua
            * `NE` - Niger
            * `NG` - Nigeria
            * `NU` - Niue
            * `NF` - Norfolk Island
            * `KP` - North Korea
            * `MK` - North Macedonia
            * `MP` - Northern Mariana Islands
            * `NO` - Norway
            * `OM` - Oman
            * `PK` - Pakistan
            * `PW` - Palau
            * `PS` - Palestine, State of
            * `PA` - Panama
            * `PG` - Papua New Guinea
            * `PY` - Paraguay
            * `PE` - Peru
            * `PH` - Philippines
            * `PN` - Pitcairn
            * `PL` - Poland
            * `PT` - Portugal
            * `PR` - Puerto Rico
            * `QA` - Qatar
            * `RE` - Réunion
            * `RO` - Romania
            * `RU` - Russia
            * `RW` - Rwanda
            * `BL` - Saint Barthélemy
            * `SH` - Saint Helena, Ascension and Tristan da Cunha
            * `KN` - Saint Kitts and Nevis
            * `LC` - Saint Lucia
            * `MF` - Saint Martin (French part)
            * `PM` - Saint Pierre and Miquelon
            * `VC` - Saint Vincent and the Grenadines
            * `WS` - Samoa
            * `SM` - San Marino
            * `ST` - Sao Tome and Principe
            * `SA` - Saudi Arabia
            * `SN` - Senegal
            * `RS` - Serbia
            * `SC` - Seychelles
            * `SL` - Sierra Leone
            * `SG` - Singapore
            * `SX` - Sint Maarten (Dutch part)
            * `SK` - Slovakia
            * `SI` - Slovenia
            * `SB` - Solomon Islands
            * `SO` - Somalia
            * `ZA` - South Africa
            * `GS` - South Georgia and the South Sandwich Islands
            * `KR` - South Korea
            * `SS` - South Sudan
            * `ES` - Spain
            * `LK` - Sri Lanka
            * `SD` - Sudan
            * `SR` - Suriname
            * `SJ` - Svalbard and Jan Mayen
            * `SE` - Sweden
            * `CH` - Switzerland
            * `SY` - Syria
            * `TW` - Taiwan
            * `TJ` - Tajikistan
            * `TZ` - Tanzania
            * `TH` - Thailand
            * `TL` - Timor-Leste
            * `TG` - Togo
            * `TK` - Tokelau
            * `TO` - Tonga
            * `TT` - Trinidad and Tobago
            * `TN` - Tunisia
            * `TR` - Turkey
            * `TM` - Turkmenistan
            * `TC` - Turks and Caicos Islands
            * `TV` - Tuvalu
            * `UG` - Uganda
            * `UA` - Ukraine
            * `AE` - United Arab Emirates
            * `GB` - United Kingdom
            * `UM` - United States Minor Outlying Islands
            * `US` - United States of America
            * `UY` - Uruguay
            * `UZ` - Uzbekistan
            * `VU` - Vanuatu
            * `VE` - Venezuela
            * `VN` - Vietnam
            * `VG` - Virgin Islands (British)
            * `VI` - Virgin Islands (U.S.)
            * `WF` - Wallis and Futuna
            * `EH` - Western Sahara
            * `YE` - Yemen
            * `ZM` - Zambia
            * `ZW` - Zimbabwe
          example: US
        zip_code:
          type: string
          nullable: true
          description: The address's zip code.
          example: '10027'
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-category: accounting
    AddressTypeEnum:
      enum:
      - BILLING
      - SHIPPING
      type: string
      description: |-
        * `BILLING` - BILLING
        * `SHIPPING` - SHIPPING
      x-merge-category: accounting
    AdvancedMetadata:
      type: object
      properties:
        id:
          type: string
          format: uuid
        display_name:
          type: string
        description:
          type: string
        is_required:
          type: boolean
        is_custom:
          type: boolean
        field_choices:
          type: array
          items: {}
      required:
      - id
      x-merge-category: accounting
    AsyncPassthroughReciept:
      type: object
      properties:
        async_passthrough_receipt_id:
          type: string
          format: uuid
          example: fd29020f-2695-445e-922e-dcd5e81903fd
      required:
      - async_passthrough_receipt_id
      x-merge-category: accounting
    AsyncPostTask:
      type: object
      properties:
        status:
          oneOf:
          - $ref: '#/components/schemas/AsyncPostTaskStatusEnum'
          - type: string
          example: COMPLETED
        result:
          $ref: '#/components/schemas/AsyncPostTaskResult'
      required:
      - result
      - status
      x-merge-category: accounting
    AsyncPostTaskResult:
      type: object
      properties:
        status_code:
          type: integer
          example: 201
        response:
          type: object
          additionalProperties: {}
          example:
            model:
              id: 9871b4a9-f5d2-4f3b-a66b-dfedbed42c46
              remote_id: '990110'
              created_at: '2021-09-15T00:00:00Z'
              modified_at: '2021-10-16T00:00:00Z'
              integration_params:
                unique_integration_field: unique_integration_field_value
              linked_account_params:
                unique_linked_account_field: unique_linked_account_field_value
              field_mappings:
                organization_defined_targets:
                  custom_key: custom_value
                linked_account_defined_targets:
                  custom_key: custom_value
              type: ACCOUNTS_RECEIVABLE
              contact: 022a2bef-57e5-4def-8ed2-7c41bd9a5ed8
              number: AIQ12546
              issue_date: '2020-03-31T00:00:00Z'
              due_date: '2020-04-15T00:00:00Z'
              memo: Weekly Payment
              company: 595c8f97-2ac4-45b7-b000-41bdf43240b5
              employee: 7442f0d5-722d-45bd-b807-6e38489d37fe
              paid_on_date: '2020-04-01T00:00:00Z'
              currency: USD
              exchange_rate: '2.9'
              status: DRAFT
              total_discount: 0
              sub_total: 100
              total_tax_amount: 5
              total_amount: 105
              balance: 105
              inclusive_of_tax: false
              remote_updated_at: '2020-04-01T00:00:00Z'
              tracking_categories:
              - 7dc5ca17-d311-44cd-9ce0-333080367a18
              - 6aa0700c-48e1-4c4a-8162-02e6a582df05
              - 8c933d61-8f5b-4360-ac0c-c9dc87bee763
              purchase_orders:
              - e7378d8f-3992-4c2a-8417-ebdc4f2bfeb7
              - dd70ca2f-b120-46fa-889a-9604037f45fd
              - 889b281d-739c-4759-95b8-0aedb3947131
              accounting_period: 7dc5ca17-d311-44cd-9ce0-333080367a18
              payments:
              - b26fd49a-cbae-470a-a8f8-bcbc119e0390
              applied_payments:
              - 9017594e-dc33-4113-a5d2-b0f928e34fdd
              line_items: []
              applied_credit_notes: []
              applied_vendor_credits: []
              remote_data:
              - path: /actions
                data:
                - Varies by platform
      x-merge-category: accounting
    AsyncPostTaskStatusEnum:
      enum:
      - QUEUED
      - IN_PROGRESS
      - COMPLETED
      - FAILURE
      type: string
      description: |-
        * `QUEUED` - QUEUED
        * `IN_PROGRESS` - IN_PROGRESS
        * `COMPLETED` - COMPLETED
        * `FAILURE` - FAILURE
      x-merge-category: accounting
    AuditLogEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: b5ceea2a-7171-47ce-8090-165cfce5572c
        user_name:
          type: string
          nullable: true
          description: The User's full name at the time of this Event occurring.
          maxLength: 200
          example: Gil Feig
        user_email:
          type: string
          format: email
          nullable: true
          description: The User's email at the time of this Event occurring.
          maxLength: 254
          example: hello@merge.dev
        role:
          oneOf:
          - $ref: '#/components/schemas/RoleEnum'
          - type: string
          description: |-
            Designates the role of the user (or SYSTEM/API if action not taken by a user) at the time of this Event occurring.

            * `ADMIN` - ADMIN
            * `DEVELOPER` - DEVELOPER
            * `MEMBER` - MEMBER
            * `API` - API
            * `SYSTEM` - SYSTEM
            * `MERGE_TEAM` - MERGE_TEAM
          example: ADMIN
        ip_address:
          type: string
          maxLength: 45
          example: 192.0.2.123
        event_type:
          oneOf:
          - $ref: '#/components/schemas/EventTypeEnum'
          - type: string
          description: |-
            Designates the type of event that occurred.

            * `CREATED_REMOTE_PRODUCTION_API_KEY` - CREATED_REMOTE_PRODUCTION_API_KEY
            * `DELETED_REMOTE_PRODUCTION_API_KEY` - DELETED_REMOTE_PRODUCTION_API_KEY
            * `CREATED_TEST_API_KEY` - CREATED_TEST_API_KEY
            * `DELETED_TEST_API_KEY` - DELETED_TEST_API_KEY
            * `REGENERATED_PRODUCTION_API_KEY` - REGENERATED_PRODUCTION_API_KEY
            * `REGENERATED_WEBHOOK_SIGNATURE` - REGENERATED_WEBHOOK_SIGNATURE
            * `INVITED_USER` - INVITED_USER
            * `TWO_FACTOR_AUTH_ENABLED` - TWO_FACTOR_AUTH_ENABLED
            * `TWO_FACTOR_AUTH_DISABLED` - TWO_FACTOR_AUTH_DISABLED
            * `DELETED_LINKED_ACCOUNT` - DELETED_LINKED_ACCOUNT
            * `DELETED_ALL_COMMON_MODELS_FOR_LINKED_ACCOUNT` - DELETED_ALL_COMMON_MODELS_FOR_LINKED_ACCOUNT
            * `CREATED_DESTINATION` - CREATED_DESTINATION
            * `DELETED_DESTINATION` - DELETED_DESTINATION
            * `CHANGED_DESTINATION` - CHANGED_DESTINATION
            * `CHANGED_SCOPES` - CHANGED_SCOPES
            * `CHANGED_PERSONAL_INFORMATION` - CHANGED_PERSONAL_INFORMATION
            * `CHANGED_ORGANIZATION_SETTINGS` - CHANGED_ORGANIZATION_SETTINGS
            * `ENABLED_INTEGRATION` - ENABLED_INTEGRATION
            * `DISABLED_INTEGRATION` - DISABLED_INTEGRATION
            * `ENABLED_CATEGORY` - ENABLED_CATEGORY
            * `DISABLED_CATEGORY` - DISABLED_CATEGORY
            * `CHANGED_PASSWORD` - CHANGED_PASSWORD
            * `RESET_PASSWORD` - RESET_PASSWORD
            * `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION
            * `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT
            * `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION
            * `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT
            * `CREATED_INTEGRATION_WIDE_FIELD_MAPPING` - CREATED_INTEGRATION_WIDE_FIELD_MAPPING
            * `CREATED_LINKED_ACCOUNT_FIELD_MAPPING` - CREATED_LINKED_ACCOUNT_FIELD_MAPPING
            * `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING` - CHANGED_INTEGRATION_WIDE_FIELD_MAPPING
            * `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING` - CHANGED_LINKED_ACCOUNT_FIELD_MAPPING
            * `DELETED_INTEGRATION_WIDE_FIELD_MAPPING` - DELETED_INTEGRATION_WIDE_FIELD_MAPPING
            * `DELETED_LINKED_ACCOUNT_FIELD_MAPPING` - DELETED_LINKED_ACCOUNT_FIELD_MAPPING
            * `CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
            * `CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
            * `DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
            * `FORCED_LINKED_ACCOUNT_RESYNC` - FORCED_LINKED_ACCOUNT_RESYNC
            * `MUTED_ISSUE` - MUTED_ISSUE
            * `GENERATED_MAGIC_LINK` - GENERATED_MAGIC_LINK
            * `ENABLED_MERGE_WEBHOOK` - ENABLED_MERGE_WEBHOOK
            * `DISABLED_MERGE_WEBHOOK` - DISABLED_MERGE_WEBHOOK
            * `MERGE_WEBHOOK_TARGET_CHANGED` - MERGE_WEBHOOK_TARGET_CHANGED
            * `END_USER_CREDENTIALS_ACCESSED` - END_USER_CREDENTIALS_ACCESSED
          example: CHANGED_SCOPES
        event_description:
          type: string
          example: Organization-wide Scopes for model hris.Employee updated from Read
            to Read+Write
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - event_description
      - event_type
      - ip_address
      - role
      x-merge-category: accounting
    AvailableActions:
      type: object
      description: |-
        # The AvailableActions Object
        ### Description
        The `Activity` object is used to see all available model/operation combinations for an integration.

        ### Usage Example
        Fetch all the actions available for the `Zenefits` integration.
      properties:
        integration:
          $ref: '#/components/schemas/AccountIntegration'
          example:
            name: Lever
            categories:
            - ats
            image: https://merge-api-production.s3.amazonaws.com/media/Lever_Logo.png
            square_image: https://merge-api-production.s3.amazonaws.com/media/Lever_Square_Logo.png
            color: '#262A34'
            is_in_beta: 'true'
            api_endpoints_to_documentation_urls: "{'GET': [('/common-model-scopes',
              'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve')],
              'POST': []}"
        passthrough_available:
          type: boolean
          example: true
        available_model_operations:
          type: array
          items:
            $ref: '#/components/schemas/ModelOperation'
          example:
          - model_name: Candidate
            available_operations:
            - FETCH
            - CREATE
            required_post_parameters:
            - remote_user_id
            supported_fields:
            - first_name
            - last_name
            - company
            - title
      required:
      - integration
      - passthrough_available
      x-merge-category: accounting
    BalanceSheet:
      type: object
      description: |-
        # The BalanceSheet Object
        ### Description
        The `BalanceSheet` object shows a company’s assets, liabilities, and equity. Assets should be equal to liability and equity combined. This shows the company’s financial health at a specific point in time.

        ### Usage Example
        Fetch from the `LIST BalanceSheets` endpoint and view a company's balance sheets.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 9871b4a9-f5d2-4f3b-a66b-dfedbed42c46
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '8937018'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          nullable: true
          description: The balance sheet's name.
          example: BalanceSheet
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The balance sheet's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: '`Company` object for the given `BalanceSheet` object.'
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        date:
          type: string
          format: date-time
          nullable: true
          description: The balance sheet's date. The balance sheet data will reflect
            the company's financial position this point in time.
          example: '2021-09-31T00:00:00Z'
        net_assets:
          type: number
          format: double
          nullable: true
          description: The balance sheet's net assets.
          example: 1000
        assets:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem'
          readOnly: true
          example:
          - remote_id: '10010'
            name: Assets
            value: 1000
            sub_items: []
        liabilities:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem'
          readOnly: true
          example:
          - remote_id: '10011'
            name: Liabilities
            value: 500
            sub_items: []
        equity:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem'
          readOnly: true
          example:
          - remote_id: '10012'
            name: Equity
            value: 500
            sub_items: []
        remote_generated_at:
          type: string
          format: date-time
          nullable: true
          description: The time that balance sheet was generated by the accounting
            system.
          example: '2021-10-01T00:00:00Z'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
      x-merge-expands: '{"company": "CompanyInfo"}'
      x-merge-category: accounting
    BankFeedAccount:
      type: object
      description: |-
        # The BankFeedAccount Object
        ### Description
        The `BankFeedAccount` object represents a bank feed account, detailing various attributes including account identifiers, names, currency, and balance information. This object is central to managing and tracking bank feed accounts within the system.

        ### Usage Example
        Fetch from the `GET BankFeedAccount` endpoint to view details of a bank feed account.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: b26fd49a-cbae-470a-a8f8-bcbc119e0390
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '987300'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        source_account_id:
          type: string
          nullable: true
          description: The unique identifier of the source account from our customer’s
            platform.
          maxLength: 1024
          example: '123566909'
        target_account_id:
          type: string
          nullable: true
          description: The unique identifier of the target account from the third
            party software.
          maxLength: 1024
          example: 49cd5a42-b311-4750-9361-52e2ed1d4653
        source_account_name:
          type: string
          nullable: true
          description: The name of the source account as stored in our customer’s
            platform.
          maxLength: 1024
          example: Travel Bank Account
        source_account_number:
          type: string
          nullable: true
          description: The human-readable account number of the source account as
            stored in our customer’s platform.
          maxLength: 1024
          example: '12567'
        target_account_name:
          type: string
          nullable: true
          description: The name of the target account from the third party software.
          maxLength: 1024
          example: Netsuite Travel Bank Account
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The currency code of the bank feed.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        feed_status:
          oneOf:
          - $ref: '#/components/schemas/FeedStatusEnum'
          - type: string
          nullable: true
          description: |-
            The status of the bank feed.

            * `ACTIVE` - ACTIVE
            * `INACTIVE` - INACTIVE
          example: ACTIVE
        feed_start_date:
          type: string
          format: date-time
          nullable: true
          description: The start date of the bank feed’s transactions.
          example: '2024-02-02T00:00:00.000Z'
        source_account_balance:
          type: number
          format: double
          nullable: true
          description: The current balance of funds in the source account.
          example: 123.94
        account_type:
          oneOf:
          - $ref: '#/components/schemas/BankFeedAccountAccountTypeEnum'
          - type: string
          nullable: true
          description: |-
            The type of the account.

            * `BANK` - BANK
            * `CREDIT_CARD` - CREDIT_CARD
          example: BANK
        remote_was_deleted:
          type: boolean
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            type: object
            additionalProperties: {}
            nullable: true
            description: The full data pulled from the third-party API for an object.
          nullable: true
      x-merge-category: accounting
    BankFeedAccountAccountTypeEnum:
      enum:
      - BANK
      - CREDIT_CARD
      type: string
      description: |-
        * `BANK` - BANK
        * `CREDIT_CARD` - CREDIT_CARD
      x-merge-category: accounting
    BankFeedAccountEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/BankFeedAccountRequest'
      required:
      - model
      x-merge-category: accounting
    BankFeedAccountRequest:
      type: object
      description: |-
        # The BankFeedAccount Object
        ### Description
        The `BankFeedAccount` object represents a bank feed account, detailing various attributes including account identifiers, names, currency, and balance information. This object is central to managing and tracking bank feed accounts within the system.

        ### Usage Example
        Fetch from the `GET BankFeedAccount` endpoint to view details of a bank feed account.
      properties:
        source_account_id:
          type: string
          nullable: true
          description: The unique identifier of the source account from our customer’s
            platform.
          maxLength: 1024
          example: '123566909'
        target_account_id:
          type: string
          nullable: true
          description: The unique identifier of the target account from the third
            party software.
          maxLength: 1024
          example: 49cd5a42-b311-4750-9361-52e2ed1d4653
        source_account_name:
          type: string
          nullable: true
          description: The name of the source account as stored in our customer’s
            platform.
          maxLength: 1024
          example: Travel Bank Account
        source_account_number:
          type: string
          nullable: true
          description: The human-readable account number of the source account as
            stored in our customer’s platform.
          maxLength: 1024
          example: '12567'
        target_account_name:
          type: string
          nullable: true
          description: The name of the target account from the third party software.
          maxLength: 1024
          example: Netsuite Travel Bank Account
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The currency code of the bank feed.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        feed_status:
          oneOf:
          - $ref: '#/components/schemas/FeedStatusEnum'
          - type: string
          nullable: true
          description: |-
            The status of the bank feed.

            * `ACTIVE` - ACTIVE
            * `INACTIVE` - INACTIVE
          example: ACTIVE
        feed_start_date:
          type: string
          format: date-time
          nullable: true
          description: The start date of the bank feed’s transactions.
          example: '2024-02-02T00:00:00.000Z'
        source_account_balance:
          type: number
          format: double
          nullable: true
          description: The current balance of funds in the source account.
          example: 123.94
        account_type:
          oneOf:
          - $ref: '#/components/schemas/BankFeedAccountAccountTypeEnum'
          - type: string
          nullable: true
          description: |-
            The type of the account.

            * `BANK` - BANK
            * `CREDIT_CARD` - CREDIT_CARD
          example: BANK
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-category: accounting
    BankFeedAccountResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/BankFeedAccount'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    BankFeedTransaction:
      type: object
      description: |-
        # The BankFeedTransaction Object
        ### Description
        The `BankFeedTransaction` object is used to represent transactions linked to a bank feed account. This includes details about the transaction such as the date, amount, description, and type.

        ### Usage Example
        Fetch from the `GET BankFeedTransaction` endpoint to view details of a transaction associated with a bank feed account.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: b26fd49a-cbae-470a-a8f8-bcbc119e0390
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '987300'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        bank_feed_account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/BankFeedAccount'
          nullable: true
          description: The bank feed account associated with the transaction.
          example: 49cd5a42-b311-4750-9361-52e2ed1d4653
          x-merge-expands-to: BankFeedAccount
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The date that the transaction occurred.
          example: '2024-02-02T00:00:00.000Z'
        posted_date:
          type: string
          format: date-time
          nullable: true
          description: The date the transaction was posted to the bank account.
          example: '2024-02-03T00:00:00.000Z'
        amount:
          type: number
          format: double
          nullable: true
          description: The amount of the transaction.
          example: 100.1
        description:
          type: string
          nullable: true
          description: The description of the transaction.
          maxLength: 1024
          example: Lunch expense
        transaction_type:
          type: string
          nullable: true
          description: The underlying type of the transaction.
          maxLength: 1024
          example: payment
        payee:
          type: string
          nullable: true
          description: The person or merchant who initiated the transaction, or alternatively,
            to whom the transaction was paid.
          maxLength: 1024
          example: Elmo's diner
        credit_or_debit:
          oneOf:
          - $ref: '#/components/schemas/CreditOrDebitEnum'
          - type: string
          nullable: true
          description: |-
            If the transaction is of type debit or credit.

            * `CREDIT` - CREDIT
            * `DEBIT` - DEBIT
          example: CREDIT
        source_transaction_id:
          type: string
          nullable: true
          description: The customer’s identifier for the transaction.
          maxLength: 1024
          example: '124569'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        is_processed:
          type: boolean
          readOnly: true
          description: Whether or not this transaction has been processed by the external
            system. For example, NetSuite writes this field as True when the SuiteApp
            has processed the transaction.
      x-merge-expands: '{"bank_feed_account": "BankFeedAccount"}'
      x-merge-category: accounting
    BankFeedTransactionEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/BankFeedTransactionRequestRequest'
      required:
      - model
      x-merge-category: accounting
    BankFeedTransactionRequestRequest:
      type: object
      description: |-
        # The BankFeedTransaction Object
        ### Description
        The `BankFeedTransaction` object is used to represent transactions linked to a bank feed account. This includes details about the transaction such as the date, amount, description, and type.

        ### Usage Example
        Fetch from the `GET BankFeedTransaction` endpoint to view details of a transaction associated with a bank feed account.
      properties:
        bank_feed_account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/BankFeedAccount'
          nullable: true
          description: The bank feed account associated with the transaction.
          example: 49cd5a42-b311-4750-9361-52e2ed1d4653
          x-merge-expands-to: BankFeedAccount
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The date that the transaction occurred.
          example: '2024-02-02T00:00:00.000Z'
        posted_date:
          type: string
          format: date-time
          nullable: true
          description: The date the transaction was posted to the bank account.
          example: '2024-02-03T00:00:00.000Z'
        amount:
          type: number
          format: double
          nullable: true
          description: The amount of the transaction.
          example: 100.1
        description:
          type: string
          nullable: true
          description: The description of the transaction.
          maxLength: 1024
          example: Lunch expense
        transaction_type:
          type: string
          nullable: true
          description: The underlying type of the transaction.
          maxLength: 1024
          example: payment
        payee:
          type: string
          nullable: true
          description: The person or merchant who initiated the transaction, or alternatively,
            to whom the transaction was paid.
          maxLength: 1024
          example: Elmo's diner
        credit_or_debit:
          oneOf:
          - $ref: '#/components/schemas/CreditOrDebitEnum'
          - type: string
          nullable: true
          description: |-
            If the transaction is of type debit or credit.

            * `CREDIT` - CREDIT
            * `DEBIT` - DEBIT
          example: CREDIT
        source_transaction_id:
          type: string
          nullable: true
          description: The customer’s identifier for the transaction.
          maxLength: 1024
          example: '124569'
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      required:
      - bank_feed_account
      x-merge-expands: '{"bank_feed_account": "BankFeedAccount"}'
      x-merge-category: accounting
    BankFeedTransactionResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/BankFeedTransaction'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    CashFlowStatement:
      type: object
      description: |-
        # The CashFlowStatement Object
        ### Description
        The `CashFlowStatement` object shows operating activities, investing activities, and financing activities over a period of time (month, quarter, or year).

        ### Usage Example
        Fetch from the `LIST CashFlowStatements` endpoint and view a company's cash flow statements.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '8211088'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          nullable: true
          description: The cash flow statement's name.
          example: CashFlow
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The cash flow statement's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the cash flow statement belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        start_period:
          type: string
          format: date-time
          nullable: true
          description: The cash flow statement's start period.
          example: '2020-01-01T00:00:00Z'
        end_period:
          type: string
          format: date-time
          nullable: true
          description: The cash flow statement's end period.
          example: '2020-03-31T00:00:00Z'
        cash_at_beginning_of_period:
          type: number
          format: double
          nullable: true
          description: Cash and cash equivalents at the beginning of the cash flow
            statement's period.
          example: 5000
        cash_at_end_of_period:
          type: number
          format: double
          nullable: true
          description: Cash and cash equivalents at the beginning of the cash flow
            statement's period.
          example: 4063.52
        operating_activities:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem'
          readOnly: true
          example:
          - remote_id: '19202938'
            created_at: '2021-09-15T00:00:00Z'
            modified_at: '2021-09-18T00:00:00Z'
            name: Operating Activities
            value: 1000
            sub_items:
            - remote_id: '23042938'
              created_at: '2021-09-15T00:00:00Z'
              modified_at: '2021-09-18T00:00:00Z'
              name: Net Income
              value: 1097.13
              sub_items: []
              company:
        investing_activities:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem'
          readOnly: true
          example:
          - remote_id: '192406939'
            created_at: '2021-11-15T00:00:00Z'
            modified_at: '2021-11-18T00:00:00Z'
            name: Equipment
            value: 1000
            sub_items:
            - remote_id:
              created_at: '2021-11-15T00:00:00Z'
              modified_at: '2021-09-18T00:00:00Z'
              name: Equipment
              value: 1000
              sub_items: []
              company:
        financing_activities:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem'
          readOnly: true
          example:
          - remote_id: '192406939'
            created_at: '2021-11-15T00:00:00Z'
            modified_at: '2021-11-15T00:00:00Z'
            sub_items: []
        remote_generated_at:
          type: string
          format: date-time
          nullable: true
          description: The time that cash flow statement was generated by the accounting
            system.
          example: '2020-04-01T00:00:00Z'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      x-merge-expands: '{"company": "CompanyInfo"}'
      x-merge-category: accounting
    CategoriesEnum:
      enum:
      - hris
      - ats
      - accounting
      - ticketing
      - crm
      - mktg
      - filestorage
      type: string
      description: |-
        * `hris` - hris
        * `ats` - ats
        * `accounting` - accounting
        * `ticketing` - ticketing
        * `crm` - crm
        * `mktg` - mktg
        * `filestorage` - filestorage
      x-merge-category: accounting
    CategoryEnum:
      enum:
      - hris
      - ats
      - accounting
      - ticketing
      - crm
      - mktg
      - filestorage
      type: string
      description: |-
        * `hris` - hris
        * `ats` - ats
        * `accounting` - accounting
        * `ticketing` - ticketing
        * `crm` - crm
        * `mktg` - mktg
        * `filestorage` - filestorage
      x-merge-category: accounting
    CategoryTypeEnum:
      enum:
      - CLASS
      - DEPARTMENT
      type: string
      description: |-
        * `CLASS` - CLASS
        * `DEPARTMENT` - DEPARTMENT
      x-merge-category: accounting
    ClassificationEnum:
      enum:
      - ASSET
      - EQUITY
      - EXPENSE
      - LIABILITY
      - REVENUE
      type: string
      description: |-
        * `ASSET` - ASSET
        * `EQUITY` - EQUITY
        * `EXPENSE` - EXPENSE
        * `LIABILITY` - LIABILITY
        * `REVENUE` - REVENUE
      x-merge-category: accounting
    CommonModelScopeAPI:
      type: object
      properties:
        common_models:
          type: array
          items:
            $ref: '#/components/schemas/IndividualCommonModelScopeDeserializer'
          description: The common models you want to update the scopes for
          example:
          - model_name: Employee
            model_permissions:
              READ:
                is_enabled: true
              WRITE:
                is_enabled: false
            field_permissions:
              enabled_fields:
              - avatar
              - created_at
              - custom_fields
              - date_of_birth
              - first_name
              - gender
              - remote_created_at
              - remote_data
              disabled_fields:
              - company
              - employments
              - groups
              - home_location
              - manager
              - work_location
      required:
      - common_models
      x-merge-category: accounting
    CommonModelScopesBodyRequest:
      type: object
      properties:
        model_id:
          type: string
          minLength: 1
          example: hris.Employee
        enabled_actions:
          type: array
          items:
            $ref: '#/components/schemas/EnabledActionsEnum'
          example:
          - READ
          - WRITE
        disabled_fields:
          type: array
          items:
            type: string
            minLength: 1
          example:
          - first_name
      required:
      - disabled_fields
      - enabled_actions
      - model_id
      x-merge-category: accounting
    CompanyInfo:
      type: object
      description: |-
        # The CompanyInfo Object
        ### Description
        The `CompanyInfo` object contains information about the company of the linked account. If the company has multiple entities (also known as subsidiaries), each entity may show up as a single `CompanyInfo` record.

        ### Usage Example
        Fetch from the `GET CompanyInfo` endpoint and view a company's information.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 65d8ffd0-211b-4ba4-b85a-fbe2ce220982
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '19202938'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          nullable: true
          description: The company's name.
          example: Merge Pickleball Company
        legal_name:
          type: string
          nullable: true
          description: The company's legal name.
          example: Merge Pickleball Company Inc.
        tax_number:
          type: string
          nullable: true
          description: The company's tax number.
          example: 11-0011000
        fiscal_year_end_month:
          type: integer
          maximum: 12
          minimum: 1
          nullable: true
          description: The company's fiscal year end month.
          example: 12
        fiscal_year_end_day:
          type: integer
          maximum: 31
          minimum: 1
          nullable: true
          description: The company's fiscal year end day.
          example: 31
        currency:
          nullable: true
          description: |-
            The currency set in the company's accounting platform.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        remote_created_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's company was created.
          example: '2020-03-31T00:00:00Z'
        urls:
          type: array
          items:
            type: string
            nullable: true
            description: The url.
          nullable: true
          description: The company's urls.
          example: https://www.merge.dev
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          example:
          - street_1: 2920 Broadway
            street_2: 2nd Floor
            city: New York
            state: NY
            country: US
            zip_code: '10027'
          x-merge-expands-to: Address
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/AccountingPhoneNumber'
          x-merge-expands-to: AccountingPhoneNumber
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      x-merge-expands: '{"addresses": "Address", "phone_numbers": "AccountingPhoneNumber"}'
      x-merge-category: accounting
    ComponentTypeEnum:
      enum:
      - SALES
      - PURCHASE
      type: string
      description: |-
        * `SALES` - SALES
        * `PURCHASE` - PURCHASE
      x-merge-category: accounting
    Contact:
      type: object
      description: |-
        # The Contact Object
        ### Description
        A `Contact` is an individual or business entity to which products and services are sold to or purchased from. The `Contact` model contains both Customers, in which products and services are sold to, and Vendors (or Suppliers), in which products and services are purchased from.
        * A `Contact` is a Vendor/Supplier if the `is_supplier` property is true.
        * A `Contact` is a customer if the `is_customer` property is true.

        ### Usage Example
        Fetch from the `LIST Contacts` endpoint and view a company's contacts.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: c640b80b-fac9-409f-aa19-1f9221aec445
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '11167'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          nullable: true
          description: The contact's name.
          example: Gil Feig's pickleball store
        is_supplier:
          type: boolean
          nullable: true
          description: Whether the contact is a supplier.
        is_customer:
          type: boolean
          nullable: true
          description: Whether the contact is a customer.
          example: true
        email_address:
          type: string
          nullable: true
          description: The contact's email address.
          example: pickleball@merge.dev
        tax_number:
          type: string
          nullable: true
          description: The contact's tax number.
          example: 12-3456789
        status:
          oneOf:
          - $ref: '#/components/schemas/Status7d1Enum'
          - type: string
          nullable: true
          description: |-
            The contact's status

            * `ACTIVE` - ACTIVE
            * `ARCHIVED` - ARCHIVED
          example: ACTIVE
        currency:
          type: string
          nullable: true
          description: The currency the contact's transactions are in.
          example: USD
        remote_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's contact was updated.
          example: '2020-03-31T00:00:00Z'
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the contact belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        addresses:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/Address'
            nullable: true
          example:
          - 2f2702aa-8948-492b-a412-2acdf6d2c499
          - d98c7428-8dda-48a8-a1da-c570f65e2375
          description: '`Address` object IDs for the given `Contacts` object.'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/AccountingPhoneNumber'
          example:
          - number: '+3198675309'
            type: Mobile
          description: '`AccountingPhoneNumber` object for the given `Contacts` object.'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteField'
          readOnly: true
      x-merge-expands: '{"account": "Account"}'
      x-merge-category: accounting
    ContactEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/ContactRequest'
      required:
      - model
      x-merge-category: accounting
    ContactRequest:
      type: object
      description: |-
        # The Contact Object
        ### Description
        A `Contact` is an individual or business entity to which products and services are sold to or purchased from. The `Contact` model contains both Customers, in which products and services are sold to, and Vendors (or Suppliers), in which products and services are purchased from.
        * A `Contact` is a Vendor/Supplier if the `is_supplier` property is true.
        * A `Contact` is a customer if the `is_customer` property is true.

        ### Usage Example
        Fetch from the `LIST Contacts` endpoint and view a company's contacts.
      properties:
        name:
          type: string
          nullable: true
          description: The contact's name.
          example: Gil Feig's pickleball store
        is_supplier:
          type: boolean
          nullable: true
          description: Whether the contact is a supplier.
        is_customer:
          type: boolean
          nullable: true
          description: Whether the contact is a customer.
          example: true
        email_address:
          type: string
          nullable: true
          description: The contact's email address.
          example: pickleball@merge.dev
        tax_number:
          type: string
          nullable: true
          description: The contact's tax number.
          example: 12-3456789
        status:
          oneOf:
          - $ref: '#/components/schemas/Status7d1Enum'
          - type: string
          nullable: true
          description: |-
            The contact's status

            * `ACTIVE` - ACTIVE
            * `ARCHIVED` - ARCHIVED
          example: ACTIVE
        currency:
          type: string
          nullable: true
          description: The currency the contact's transactions are in.
          example: USD
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the contact belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        addresses:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/Address'
            nullable: true
          example:
          - 2f2702aa-8948-492b-a412-2acdf6d2c499
          - d98c7428-8dda-48a8-a1da-c570f65e2375
          description: '`Address` object IDs for the given `Contacts` object.'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/AccountingPhoneNumberRequest'
          example:
          - number: '+3198675309'
            type: Mobile
          description: '`AccountingPhoneNumber` object for the given `Contacts` object.'
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-expands: '{"account": "Account"}'
      x-merge-category: accounting
    ContactResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/Contact'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    CountryEnum:
      enum:
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BQ
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - CV
      - KH
      - CM
      - CA
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CW
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - SZ
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - KP
      - MK
      - MP
      - NO
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SX
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - KR
      - SS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - GB
      - UM
      - US
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
      type: string
      description: |-
        * `AF` - Afghanistan
        * `AX` - Åland Islands
        * `AL` - Albania
        * `DZ` - Algeria
        * `AS` - American Samoa
        * `AD` - Andorra
        * `AO` - Angola
        * `AI` - Anguilla
        * `AQ` - Antarctica
        * `AG` - Antigua and Barbuda
        * `AR` - Argentina
        * `AM` - Armenia
        * `AW` - Aruba
        * `AU` - Australia
        * `AT` - Austria
        * `AZ` - Azerbaijan
        * `BS` - Bahamas
        * `BH` - Bahrain
        * `BD` - Bangladesh
        * `BB` - Barbados
        * `BY` - Belarus
        * `BE` - Belgium
        * `BZ` - Belize
        * `BJ` - Benin
        * `BM` - Bermuda
        * `BT` - Bhutan
        * `BO` - Bolivia
        * `BQ` - Bonaire, Sint Eustatius and Saba
        * `BA` - Bosnia and Herzegovina
        * `BW` - Botswana
        * `BV` - Bouvet Island
        * `BR` - Brazil
        * `IO` - British Indian Ocean Territory
        * `BN` - Brunei
        * `BG` - Bulgaria
        * `BF` - Burkina Faso
        * `BI` - Burundi
        * `CV` - Cabo Verde
        * `KH` - Cambodia
        * `CM` - Cameroon
        * `CA` - Canada
        * `KY` - Cayman Islands
        * `CF` - Central African Republic
        * `TD` - Chad
        * `CL` - Chile
        * `CN` - China
        * `CX` - Christmas Island
        * `CC` - Cocos (Keeling) Islands
        * `CO` - Colombia
        * `KM` - Comoros
        * `CG` - Congo
        * `CD` - Congo (the Democratic Republic of the)
        * `CK` - Cook Islands
        * `CR` - Costa Rica
        * `CI` - Côte d'Ivoire
        * `HR` - Croatia
        * `CU` - Cuba
        * `CW` - Curaçao
        * `CY` - Cyprus
        * `CZ` - Czechia
        * `DK` - Denmark
        * `DJ` - Djibouti
        * `DM` - Dominica
        * `DO` - Dominican Republic
        * `EC` - Ecuador
        * `EG` - Egypt
        * `SV` - El Salvador
        * `GQ` - Equatorial Guinea
        * `ER` - Eritrea
        * `EE` - Estonia
        * `SZ` - Eswatini
        * `ET` - Ethiopia
        * `FK` - Falkland Islands (Malvinas)
        * `FO` - Faroe Islands
        * `FJ` - Fiji
        * `FI` - Finland
        * `FR` - France
        * `GF` - French Guiana
        * `PF` - French Polynesia
        * `TF` - French Southern Territories
        * `GA` - Gabon
        * `GM` - Gambia
        * `GE` - Georgia
        * `DE` - Germany
        * `GH` - Ghana
        * `GI` - Gibraltar
        * `GR` - Greece
        * `GL` - Greenland
        * `GD` - Grenada
        * `GP` - Guadeloupe
        * `GU` - Guam
        * `GT` - Guatemala
        * `GG` - Guernsey
        * `GN` - Guinea
        * `GW` - Guinea-Bissau
        * `GY` - Guyana
        * `HT` - Haiti
        * `HM` - Heard Island and McDonald Islands
        * `VA` - Holy See
        * `HN` - Honduras
        * `HK` - Hong Kong
        * `HU` - Hungary
        * `IS` - Iceland
        * `IN` - India
        * `ID` - Indonesia
        * `IR` - Iran
        * `IQ` - Iraq
        * `IE` - Ireland
        * `IM` - Isle of Man
        * `IL` - Israel
        * `IT` - Italy
        * `JM` - Jamaica
        * `JP` - Japan
        * `JE` - Jersey
        * `JO` - Jordan
        * `KZ` - Kazakhstan
        * `KE` - Kenya
        * `KI` - Kiribati
        * `KW` - Kuwait
        * `KG` - Kyrgyzstan
        * `LA` - Laos
        * `LV` - Latvia
        * `LB` - Lebanon
        * `LS` - Lesotho
        * `LR` - Liberia
        * `LY` - Libya
        * `LI` - Liechtenstein
        * `LT` - Lithuania
        * `LU` - Luxembourg
        * `MO` - Macao
        * `MG` - Madagascar
        * `MW` - Malawi
        * `MY` - Malaysia
        * `MV` - Maldives
        * `ML` - Mali
        * `MT` - Malta
        * `MH` - Marshall Islands
        * `MQ` - Martinique
        * `MR` - Mauritania
        * `MU` - Mauritius
        * `YT` - Mayotte
        * `MX` - Mexico
        * `FM` - Micronesia (Federated States of)
        * `MD` - Moldova
        * `MC` - Monaco
        * `MN` - Mongolia
        * `ME` - Montenegro
        * `MS` - Montserrat
        * `MA` - Morocco
        * `MZ` - Mozambique
        * `MM` - Myanmar
        * `NA` - Namibia
        * `NR` - Nauru
        * `NP` - Nepal
        * `NL` - Netherlands
        * `NC` - New Caledonia
        * `NZ` - New Zealand
        * `NI` - Nicaragua
        * `NE` - Niger
        * `NG` - Nigeria
        * `NU` - Niue
        * `NF` - Norfolk Island
        * `KP` - North Korea
        * `MK` - North Macedonia
        * `MP` - Northern Mariana Islands
        * `NO` - Norway
        * `OM` - Oman
        * `PK` - Pakistan
        * `PW` - Palau
        * `PS` - Palestine, State of
        * `PA` - Panama
        * `PG` - Papua New Guinea
        * `PY` - Paraguay
        * `PE` - Peru
        * `PH` - Philippines
        * `PN` - Pitcairn
        * `PL` - Poland
        * `PT` - Portugal
        * `PR` - Puerto Rico
        * `QA` - Qatar
        * `RE` - Réunion
        * `RO` - Romania
        * `RU` - Russia
        * `RW` - Rwanda
        * `BL` - Saint Barthélemy
        * `SH` - Saint Helena, Ascension and Tristan da Cunha
        * `KN` - Saint Kitts and Nevis
        * `LC` - Saint Lucia
        * `MF` - Saint Martin (French part)
        * `PM` - Saint Pierre and Miquelon
        * `VC` - Saint Vincent and the Grenadines
        * `WS` - Samoa
        * `SM` - San Marino
        * `ST` - Sao Tome and Principe
        * `SA` - Saudi Arabia
        * `SN` - Senegal
        * `RS` - Serbia
        * `SC` - Seychelles
        * `SL` - Sierra Leone
        * `SG` - Singapore
        * `SX` - Sint Maarten (Dutch part)
        * `SK` - Slovakia
        * `SI` - Slovenia
        * `SB` - Solomon Islands
        * `SO` - Somalia
        * `ZA` - South Africa
        * `GS` - South Georgia and the South Sandwich Islands
        * `KR` - South Korea
        * `SS` - South Sudan
        * `ES` - Spain
        * `LK` - Sri Lanka
        * `SD` - Sudan
        * `SR` - Suriname
        * `SJ` - Svalbard and Jan Mayen
        * `SE` - Sweden
        * `CH` - Switzerland
        * `SY` - Syria
        * `TW` - Taiwan
        * `TJ` - Tajikistan
        * `TZ` - Tanzania
        * `TH` - Thailand
        * `TL` - Timor-Leste
        * `TG` - Togo
        * `TK` - Tokelau
        * `TO` - Tonga
        * `TT` - Trinidad and Tobago
        * `TN` - Tunisia
        * `TR` - Turkey
        * `TM` - Turkmenistan
        * `TC` - Turks and Caicos Islands
        * `TV` - Tuvalu
        * `UG` - Uganda
        * `UA` - Ukraine
        * `AE` - United Arab Emirates
        * `GB` - United Kingdom
        * `UM` - United States Minor Outlying Islands
        * `US` - United States of America
        * `UY` - Uruguay
        * `UZ` - Uzbekistan
        * `VU` - Vanuatu
        * `VE` - Venezuela
        * `VN` - Vietnam
        * `VG` - Virgin Islands (British)
        * `VI` - Virgin Islands (U.S.)
        * `WF` - Wallis and Futuna
        * `EH` - Western Sahara
        * `YE` - Yemen
        * `ZM` - Zambia
        * `ZW` - Zimbabwe
      x-merge-category: accounting
    CreateFieldMappingRequest:
      type: object
      properties:
        target_field_name:
          type: string
          minLength: 1
          description: The name of the target field you want this remote field to
            map to.
          example: example_target_field_name
        target_field_description:
          type: string
          minLength: 1
          description: The description of the target field you want this remote field
            to map to.
          example: this is a example description of the target field
        remote_field_traversal_path:
          type: array
          items: {}
          description: The field traversal path of the remote field listed when you
            hit the GET /remote-fields endpoint.
          example:
          - example_remote_field
        remote_method:
          type: string
          minLength: 1
          description: The method of the remote endpoint where the remote field is
            coming from.
          example: GET
        remote_url_path:
          type: string
          minLength: 1
          description: The path of the remote endpoint where the remote field is coming
            from.
          example: /example-url-path
        common_model_name:
          type: string
          minLength: 1
          description: The name of the Common Model that the remote field corresponds
            to in a given category.
          example: ExampleCommonModel
      required:
      - common_model_name
      - remote_field_traversal_path
      - remote_method
      - remote_url_path
      - target_field_description
      - target_field_name
      x-merge-category: accounting
    CreditNote:
      type: object
      description: |-
        # The CreditNote Object
        ### Description
        A `CreditNote` is transaction issued to a customer, indicating a reduction or cancellation of the amount owed by the customer. It is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a sales transaction. A `CreditNote` can be applied to *Accounts Receivable* Invoices to decrease the overall amount of the Invoice.

        ### Usage Example
        Fetch from the `LIST CreditNotes` endpoint and view a company's credit notes.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '123877'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The credit note's transaction date.
          example: '2020-03-31T00:00:00Z'
        status:
          oneOf:
          - $ref: '#/components/schemas/CreditNoteStatusEnum'
          - type: string
          nullable: true
          description: |-
            The credit note's status.

            * `SUBMITTED` - SUBMITTED
            * `AUTHORIZED` - AUTHORIZED
            * `PAID` - PAID
          example: PAID
        number:
          type: string
          nullable: true
          description: The credit note's number.
          example: CN-29
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The credit note's contact.
          example: c6c7b870-bb4d-489a-921e-2f0ee4192ff9
          x-merge-expands-to: Contact
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the credit note belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The credit note's exchange rate.
          example: '2.9'
        total_amount:
          type: number
          format: double
          nullable: true
          description: The credit note's total amount.
          example: 50
        remaining_credit:
          type: number
          format: double
          nullable: true
          description: The amount of value remaining in the credit note that the customer
            can use.
          example: 20
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteLineItem'
          readOnly: true
          example:
          - item: 0e3fd929-436c-4fd4-a48b-0c61f68d6178
            name: Basic Monthly
            description: prorated amount for items
            quantity: 1
            memo: privNote
            unit_price: '5.0'
            tax_rate: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
            total_line_amount: '5.0'
            tracking_categories:
            - 8d9fd929-436c-4fd4-a48b-0c61f68d6178
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            project: 22e65a5d-2df5-4e6e-884a-e538d0339000
            contact: 908934-49j9-093f-0989-908923908
            account: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
            company: 595c8f97-2ac4-45b7-b000-41bdf43240b5
            remote_id: '121222'
            remote_was_deleted: true
          x-merge-expands-to: CreditNoteLineItem
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The credit note's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        remote_created_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's credit note was created.
          example: '2020-03-31T00:00:00Z'
        remote_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's credit note was updated.
          example: '2020-03-31T00:00:00Z'
        payments:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/Payment'
            nullable: true
          example:
          - b26fd49a-cbae-470a-a8f8-bcbc119e0390
          description: Array of `Payment` object IDs
          x-merge-expands-to: Payment
        applied_payments:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/PaymentLineItem'
            nullable: true
          example:
          - a9a94a75-19c1-41fe-90d8-d9ba959c38e5
          description: A list of the Payment Applied to Lines common models related
            to a given Invoice, Credit Note, or Journal Entry.
          x-merge-expands-to: PaymentLineItemWithPayment
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the CreditNote was generated in.
          example: b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          x-merge-expands-to: AccountingPeriod
        applied_to_lines:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteApplyLineForCreditNote'
          description: A list of the CreditNote Applied to Lines common models related
            to a given Credit Note
          example:
          - invoice: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
            applied_date: '2020-03-31T00:00:00Z'
            applied_amount: '2.9'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      x-merge-expands: '{"accounting_period": "AccountingPeriod", "applied_payments":
        "PaymentLineItemWithPayment", "company": "CompanyInfo", "contact": "Contact",
        "line_items": "CreditNoteLineItem", "payments": "Payment", "tracking_categories":
        "TrackingCategory"}'
      x-merge-category: accounting
    CreditNoteApplyLineForCreditNote:
      type: object
      description: |-
        # The CreditNoteApplyLine Object
        ### Description
        The `CreditNoteApplyLine` is attached to the CreditNote model.

        ### Usage Example
        Fetch from the `GET CreditNote` endpoint and view the invoice's applied to lines.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        invoice:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Invoice'
          nullable: true
          example: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
          x-merge-expands-to: Invoice
        applied_date:
          type: string
          format: date-time
          nullable: true
          description: Date that the credit note is applied to the invoice.
          example: '2020-03-31T00:00:00Z'
        applied_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The amount of the Credit Note applied to the invoice.
          example: '2.9'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"invoice": "Invoice"}'
      x-merge-category: accounting
    CreditNoteApplyLineForCreditNoteRequest:
      type: object
      description: |-
        # The CreditNoteApplyLine Object
        ### Description
        The `CreditNoteApplyLine` is attached to the CreditNote model.

        ### Usage Example
        Fetch from the `GET CreditNote` endpoint and view the invoice's applied to lines.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        invoice:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Invoice'
          nullable: true
          example: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
          x-merge-expands-to: Invoice
        applied_date:
          type: string
          format: date-time
          nullable: true
          description: Date that the credit note is applied to the invoice.
          example: '2020-03-31T00:00:00Z'
        applied_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The amount of the Credit Note applied to the invoice.
          example: '2.9'
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-expands: '{"invoice": "Invoice"}'
      x-merge-category: accounting
    CreditNoteApplyLineForInvoice:
      type: object
      description: |-
        # The CreditNoteApplyLine Object
        ### Description
        The `CreditNoteApplyLine` is attached to the CreditNote model.

        ### Usage Example
        Fetch from the `GET CreditNote` endpoint and view the invoice's applied to lines.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        credit_note:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CreditNote'
          nullable: true
          example: dd7ae92086acb2fc9c2739de564ef8e9571f7263
          x-merge-expands-to: CreditNote
        applied_date:
          type: string
          format: date-time
          nullable: true
          description: Date that the credit note is applied to the invoice.
          example: '2020-03-31T00:00:00Z'
        applied_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The amount of the Credit Note applied to the invoice.
          example: '2.9'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"credit_note": "CreditNote"}'
      x-merge-category: accounting
    CreditNoteEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/CreditNoteRequest'
      required:
      - model
      x-merge-category: accounting
    CreditNoteLineItem:
      type: object
      description: |-
        # The CreditNoteLineItem Object
        ### Description
        The `CreditNoteLineItem` object is used to represent a credit note's line items.

        ### Usage Example
        Fetch from the `GET CreditNote` endpoint and view the credit note's line items.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '121222'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        item:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Item'
          nullable: true
          example: 0e3fd929-436c-4fd4-a48b-0c61f68d6178
          x-merge-expands-to: Item
        name:
          type: string
          nullable: true
          description: The credit note line item's name.
          example: Basic Monthly
        description:
          type: string
          nullable: true
          description: The description of the item that is owed.
          example: prorated amount for items
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,24}(?:\.\d{0,8})?$
          nullable: true
          description: The credit note line item's quantity.
          example: 1
        memo:
          type: string
          nullable: true
          description: The credit note line item's memo.
          example: privNote
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The credit note line item's unit price.
          example: '5.0'
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
          description: The tax rate that applies to this line item.
        total_line_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The credit note line item's total.
          example: '5.0'
        tracking_category:
          type: string
          format: uuid
          nullable: true
          description: The credit note line item's associated tracking category.
          deprecated: true
        tracking_categories:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
          example:
          - 8d9fd929-436c-4fd4-a48b-0c61f68d6178
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The credit note line item's associated tracking categories.
        account:
          type: string
          format: uuid
          nullable: true
          description: The credit note line item's account.
          example: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the credit note belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The credit note's contact.
          example: 908934-49j9-093f-0989-908923908
          x-merge-expands-to: Contact
        project:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Project'
          nullable: true
          example: 22e65a5d-2df5-4e6e-884a-e538d0339000
          x-merge-expands-to: Project
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
          example: true
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"company": "CompanyInfo", "contact": "Contact", "item": "Item",
        "project": "Project"}'
      x-merge-category: accounting
    CreditNoteLineItemRequest:
      type: object
      description: |-
        # The CreditNoteLineItem Object
        ### Description
        The `CreditNoteLineItem` object is used to represent a credit note's line items.

        ### Usage Example
        Fetch from the `GET CreditNote` endpoint and view the credit note's line items.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '121222'
        item:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Item'
          nullable: true
          example: 0e3fd929-436c-4fd4-a48b-0c61f68d6178
          x-merge-expands-to: Item
        name:
          type: string
          nullable: true
          description: The credit note line item's name.
          example: Basic Monthly
        description:
          type: string
          nullable: true
          description: The description of the item that is owed.
          example: prorated amount for items
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,24}(?:\.\d{0,8})?$
          nullable: true
          description: The credit note line item's quantity.
          example: 1
        memo:
          type: string
          nullable: true
          description: The credit note line item's memo.
          example: privNote
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The credit note line item's unit price.
          example: '5.0'
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
          description: The tax rate that applies to this line item.
        total_line_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The credit note line item's total.
          example: '5.0'
        tracking_category:
          type: string
          format: uuid
          nullable: true
          description: The credit note line item's associated tracking category.
          deprecated: true
        tracking_categories:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
          example:
          - 8d9fd929-436c-4fd4-a48b-0c61f68d6178
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The credit note line item's associated tracking categories.
        account:
          type: string
          format: uuid
          nullable: true
          description: The credit note line item's account.
          example: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the credit note belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The credit note's contact.
          example: 908934-49j9-093f-0989-908923908
          x-merge-expands-to: Contact
        project:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Project'
          nullable: true
          example: 22e65a5d-2df5-4e6e-884a-e538d0339000
          x-merge-expands-to: Project
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-expands: '{"company": "CompanyInfo", "contact": "Contact", "item": "Item",
        "project": "Project"}'
      x-merge-category: accounting
    CreditNoteRequest:
      type: object
      description: |-
        # The CreditNote Object
        ### Description
        A `CreditNote` is transaction issued to a customer, indicating a reduction or cancellation of the amount owed by the customer. It is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a sales transaction. A `CreditNote` can be applied to *Accounts Receivable* Invoices to decrease the overall amount of the Invoice.

        ### Usage Example
        Fetch from the `LIST CreditNotes` endpoint and view a company's credit notes.
      properties:
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The credit note's transaction date.
          example: '2020-03-31T00:00:00Z'
        status:
          oneOf:
          - $ref: '#/components/schemas/CreditNoteStatusEnum'
          - type: string
          nullable: true
          description: |-
            The credit note's status.

            * `SUBMITTED` - SUBMITTED
            * `AUTHORIZED` - AUTHORIZED
            * `PAID` - PAID
          example: PAID
        number:
          type: string
          nullable: true
          description: The credit note's number.
          example: CN-29
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The credit note's contact.
          example: c6c7b870-bb4d-489a-921e-2f0ee4192ff9
          x-merge-expands-to: Contact
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the credit note belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The credit note's exchange rate.
          example: '2.9'
        total_amount:
          type: number
          format: double
          nullable: true
          description: The credit note's total amount.
          example: 50
        remaining_credit:
          type: number
          format: double
          nullable: true
          description: The amount of value remaining in the credit note that the customer
            can use.
          example: 20
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        line_items:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/CreditNoteLineItemRequest'
          example:
          - item: 0e3fd929-436c-4fd4-a48b-0c61f68d6178
            name: Basic Monthly
            description: prorated amount for items
            quantity: 1
            memo: privNote
            unit_price: '5.0'
            tax_rate: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
            total_line_amount: '5.0'
            tracking_categories:
            - 8d9fd929-436c-4fd4-a48b-0c61f68d6178
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            project: 22e65a5d-2df5-4e6e-884a-e538d0339000
            contact: 908934-49j9-093f-0989-908923908
            account: 8d9fd929-436c-4fd4-a48b-0c61f68d6178
            company: 595c8f97-2ac4-45b7-b000-41bdf43240b5
            remote_id: '121222'
            remote_was_deleted: true
          x-merge-expands-to: CreditNoteLineItem
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The credit note's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        payments:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/Payment'
            nullable: true
          example:
          - b26fd49a-cbae-470a-a8f8-bcbc119e0390
          description: Array of `Payment` object IDs
          x-merge-expands-to: Payment
        applied_payments:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/PaymentLineItem'
            nullable: true
          example:
          - a9a94a75-19c1-41fe-90d8-d9ba959c38e5
          description: A list of the Payment Applied to Lines common models related
            to a given Invoice, Credit Note, or Journal Entry.
          x-merge-expands-to: PaymentLineItemWithPayment
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the CreditNote was generated in.
          example: b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          x-merge-expands-to: AccountingPeriod
        applied_to_lines:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteApplyLineForCreditNoteRequest'
          description: A list of the CreditNote Applied to Lines common models related
            to a given Credit Note
          example:
          - invoice: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
            applied_date: '2020-03-31T00:00:00Z'
            applied_amount: '2.9'
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-expands: '{"accounting_period": "AccountingPeriod", "applied_payments":
        "PaymentLineItemWithPayment", "company": "CompanyInfo", "contact": "Contact",
        "line_items": "CreditNoteLineItem", "payments": "Payment", "tracking_categories":
        "TrackingCategory"}'
      x-merge-category: accounting
    CreditNoteResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/CreditNote'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    CreditNoteStatusEnum:
      enum:
      - SUBMITTED
      - AUTHORIZED
      - PAID
      type: string
      description: |-
        * `SUBMITTED` - SUBMITTED
        * `AUTHORIZED` - AUTHORIZED
        * `PAID` - PAID
      x-merge-category: accounting
    CreditOrDebitEnum:
      enum:
      - CREDIT
      - DEBIT
      type: string
      description: |-
        * `CREDIT` - CREDIT
        * `DEBIT` - DEBIT
      x-merge-category: accounting
    DataPassthroughRequest:
      type: object
      description: |-
        # The DataPassthrough Object
        ### Description
        The `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.

        ### Usage Example
        Create a `DataPassthrough` to get team hierarchies from your Rippling integration.
      properties:
        method:
          allOf:
          - $ref: '#/components/schemas/MethodEnum'
          example: POST
        path:
          type: string
          minLength: 1
          description: The path of the request in the third party's platform.
          example: /scooters
        base_url_override:
          type: string
          nullable: true
          minLength: 1
          description: An optional override of the third party's base url for the
            request.
          example: https://api.example.com
        data:
          type: string
          nullable: true
          minLength: 1
          description: The data with the request. You must include a `request_format`
            parameter matching the data's format
          example: '{"company": "Lime", "model": "Gen 2.5"}'
        multipart_form_data:
          type: array
          items:
            $ref: '#/components/schemas/MultipartFormFieldRequest'
          nullable: true
          description: Pass an array of `MultipartFormField` objects in here instead
            of using the `data` param if `request_format` is set to `MULTIPART`.
        headers:
          type: object
          additionalProperties: {}
          nullable: true
          description: The headers to use for the request (Merge will handle the account's
            authorization headers). `Content-Type` header is required for passthrough.
            Choose content type corresponding to expected format of receiving server.
          example:
            EXTRA-HEADER: value
        request_format:
          allOf:
          - $ref: '#/components/schemas/RequestFormatEnum'
          nullable: true
          example: JSON
        normalize_response:
          type: boolean
          description: 'Optional. If true, the response will always be an object of
            the form `{"type": T, "value": ...}` where `T` will be one of `string,
            boolean, number, null, array, object`.'
      required:
      - method
      - path
      x-merge-category: accounting
    DebugModeLog:
      type: object
      properties:
        log_id:
          type: string
          example: 99433219-8017-4acd-bb3c-ceb23d663832
        dashboard_view:
          type: string
          example: https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832
        log_summary:
          $ref: '#/components/schemas/DebugModelLogSummary'
          example:
            url: www.exampleintegration.com/api/v1/exampleapi
            method: POST
            status_code: 200
      required:
      - dashboard_view
      - log_id
      - log_summary
      x-merge-sample-json: '{"log_id": "99433219-8017-4acd-bb3c-ceb23d663832", "dashboard_view":
        "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832", "log_summary":
        {"url": "www.exampleintegration.com/api/v1/exampleapi", "method": "POST",
        "status_code": 200}}'
      x-merge-category: accounting
    DebugModelLogSummary:
      type: object
      properties:
        url:
          type: string
          example: www.exampleintegration.com/api/v1/exampleapi
        method:
          type: string
          example: POST
        status_code:
          type: integer
          example: 200
      required:
      - method
      - status_code
      - url
      x-merge-sample-json: '{"url": "www.exampleintegration.com/api/v1/exampleapi",
        "method": "POST", "status_code": 200}'
      x-merge-category: accounting
    Employee:
      type: object
      description: |-
        # The Employee Object
        ### Description
        An `Employee` is an individual who works for the company of the linked account. The `Employee` model contains both contractors and full time employees.
        * An `Employee` is a contractor if `is_contractor` property is `True`
        * An `Employee` is a full time employee if `is_contractor` property is `False`

        ### Usage Example
        Fetch from the `LIST Employees` endpoint and view a company's employees.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: c640b80b-fac9-409f-aa19-1f9221aec445
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '11167'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        first_name:
          type: string
          nullable: true
          description: The employee's first name.
          maxLength: 255
          example: John
        last_name:
          type: string
          nullable: true
          description: The employee's last name.
          maxLength: 255
          example: Smith
        is_contractor:
          type: boolean
          nullable: true
          description: '`True` if the employee is a contractor, `False` if not.'
          example: true
        employee_number:
          type: string
          nullable: true
          description: The employee's internal identification number.
          maxLength: 50
          example: '325462'
        email_address:
          type: string
          nullable: true
          description: The employee's email address.
          example: johnsmith@merge.dev
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The subsidiary that the employee belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        status:
          oneOf:
          - $ref: '#/components/schemas/Status895Enum'
          - type: string
          description: |-
            The employee's status in the accounting system.

            * `ACTIVE` - ACTIVE
            * `INACTIVE` - INACTIVE
          example: ACTIVE
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      required:
      - status
      x-merge-expands: '{"company": "Company", "employments": "Employment", "groups":
        "Group", "home_location": "Location", "manager": "Employee", "pay_group":
        "PayGroup", "team": "Team", "work_location": "Location"}'
      x-merge-category: accounting
    EnabledActionsEnum:
      enum:
      - READ
      - WRITE
      type: string
      description: |-
        * `READ` - READ
        * `WRITE` - WRITE
      x-merge-category: accounting
    EncodingEnum:
      enum:
      - RAW
      - BASE64
      - GZIP_BASE64
      type: string
      description: |-
        * `RAW` - RAW
        * `BASE64` - BASE64
        * `GZIP_BASE64` - GZIP_BASE64
      x-merge-category: accounting
    EndUserDetailsRequest:
      type: object
      properties:
        end_user_email_address:
          type: string
          minLength: 1
          description: Your end user's email address. This is purely for identification
            purposes - setting this value will not cause any emails to be sent.
          maxLength: 100
          example: example@gmail.com
        end_user_organization_name:
          type: string
          minLength: 1
          description: Your end user's organization.
          maxLength: 100
          example: Test Organization
        end_user_origin_id:
          type: string
          minLength: 1
          description: This unique identifier typically represents the ID for your
            end user in your product's database. This value must be distinct from
            other Linked Accounts' unique identifiers.
          maxLength: 100
          example: '12345'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoriesEnum'
          description: The integration categories to show in Merge Link.
          example:
          - hris
          - ats
        integration:
          type: string
          nullable: true
          minLength: 1
          description: The slug of a specific pre-selected integration for this linking
            flow token. For examples of slugs, see https://docs.merge.dev/guides/merge-link/single-integration/.
          example: bamboohr
        link_expiry_mins:
          type: integer
          maximum: 10080
          minimum: 30
          default: 30
          description: An integer number of minutes between [30, 720 or 10080 if for
            a Magic Link URL] for how long this token is valid. Defaults to 30.
        should_create_magic_link_url:
          type: boolean
          nullable: true
          default: false
          description: Whether to generate a Magic Link URL. Defaults to false. For
            more information on Magic Link, see https://merge.dev/blog/integrations-fast-say-hello-to-magic-link.
        hide_admin_magic_link:
          type: boolean
          nullable: true
          default: false
          description: Whether to generate a Magic Link URL on the Admin Needed screen
            during the linking flow. Defaults to false. For more information on Magic
            Link, see https://merge.dev/blog/integrations-fast-say-hello-to-magic-link.
        common_models:
          type: array
          items:
            $ref: '#/components/schemas/CommonModelScopesBodyRequest'
          nullable: true
          description: An array of objects to specify the models and fields that will
            be disabled for a given Linked Account. Each object uses model_id, enabled_actions,
            and disabled_fields to specify the model, method, and fields that are
            scoped for a given Linked Account.
        category_common_model_scopes:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/IndividualCommonModelScopeDeserializerRequest'
          nullable: true
          description: When creating a Link Token, you can set permissions for Common
            Models that will apply to the account that is going to be linked. Any
            model or field not specified in link token payload will default to existing
            settings.
          example:
            hris:
            - model_name: Employee
              model_permissions:
                READ:
                  is_enabled: true
                WRITE:
                  is_enabled: true
              field_permissions:
                enabled_fields:
                - first_name
                - last_name
                - personal_email
                disabled_fields:
                - preferred_name
            - model_name: Employment
              model_permissions:
                READ:
                  is_enabled: false
                WRITE:
                  is_enabled: false
              field_permissions:
                enabled_fields:
                - effective_date
            ats:
            - model_name: Job
              model_permissions:
                READ:
                  is_enabled: true
                WRITE:
                  is_enabled: true
              field_permissions:
                enabled_fields:
                - name
                disabled_fields:
                - description
            - model_name: Department
              model_permissions:
                READ:
                  is_enabled: true
                WRITE:
                  is_enabled: true
        language:
          oneOf:
          - $ref: '#/components/schemas/LanguageEnum'
          - type: string
          nullable: true
          description: |-
            The following subset of IETF language tags can be used to configure localization.

            * `en` - en
            * `de` - de
          example: en
        are_syncs_disabled:
          type: boolean
          nullable: true
          default: false
          description: The boolean that indicates whether initial, periodic, and force
            syncs will be disabled.
        integration_specific_config:
          type: object
          additionalProperties: {}
          nullable: true
          description: A JSON object containing integration-specific configuration
            options.
          example:
            rippling:
              oauth_code: 3h1jj8ssdf31dfji3o1jjdfjasd
      required:
      - categories
      - end_user_email_address
      - end_user_organization_name
      - end_user_origin_id
      x-merge-category: accounting
    ErrorValidationProblem:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/ValidationProblemSource'
          example:
            pointer: /model/custom_fields
        title:
          type: string
          example: Missing Required Field
        detail:
          type: string
          example: custom_fields is a required field on model.
        problem_type:
          type: string
          example: MISSING_REQUIRED_FIELD
      required:
      - detail
      - problem_type
      - title
      x-merge-category: accounting
    EventTypeEnum:
      enum:
      - CREATED_REMOTE_PRODUCTION_API_KEY
      - DELETED_REMOTE_PRODUCTION_API_KEY
      - CREATED_TEST_API_KEY
      - DELETED_TEST_API_KEY
      - REGENERATED_PRODUCTION_API_KEY
      - REGENERATED_WEBHOOK_SIGNATURE
      - INVITED_USER
      - TWO_FACTOR_AUTH_ENABLED
      - TWO_FACTOR_AUTH_DISABLED
      - DELETED_LINKED_ACCOUNT
      - DELETED_ALL_COMMON_MODELS_FOR_LINKED_ACCOUNT
      - CREATED_DESTINATION
      - DELETED_DESTINATION
      - CHANGED_DESTINATION
      - CHANGED_SCOPES
      - CHANGED_PERSONAL_INFORMATION
      - CHANGED_ORGANIZATION_SETTINGS
      - ENABLED_INTEGRATION
      - DISABLED_INTEGRATION
      - ENABLED_CATEGORY
      - DISABLED_CATEGORY
      - CHANGED_PASSWORD
      - RESET_PASSWORD
      - ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION
      - ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT
      - DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION
      - DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT
      - CREATED_INTEGRATION_WIDE_FIELD_MAPPING
      - CREATED_LINKED_ACCOUNT_FIELD_MAPPING
      - CHANGED_INTEGRATION_WIDE_FIELD_MAPPING
      - CHANGED_LINKED_ACCOUNT_FIELD_MAPPING
      - DELETED_INTEGRATION_WIDE_FIELD_MAPPING
      - DELETED_LINKED_ACCOUNT_FIELD_MAPPING
      - CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
      - CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
      - DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
      - FORCED_LINKED_ACCOUNT_RESYNC
      - MUTED_ISSUE
      - GENERATED_MAGIC_LINK
      - ENABLED_MERGE_WEBHOOK
      - DISABLED_MERGE_WEBHOOK
      - MERGE_WEBHOOK_TARGET_CHANGED
      - END_USER_CREDENTIALS_ACCESSED
      type: string
      description: |-
        * `CREATED_REMOTE_PRODUCTION_API_KEY` - CREATED_REMOTE_PRODUCTION_API_KEY
        * `DELETED_REMOTE_PRODUCTION_API_KEY` - DELETED_REMOTE_PRODUCTION_API_KEY
        * `CREATED_TEST_API_KEY` - CREATED_TEST_API_KEY
        * `DELETED_TEST_API_KEY` - DELETED_TEST_API_KEY
        * `REGENERATED_PRODUCTION_API_KEY` - REGENERATED_PRODUCTION_API_KEY
        * `REGENERATED_WEBHOOK_SIGNATURE` - REGENERATED_WEBHOOK_SIGNATURE
        * `INVITED_USER` - INVITED_USER
        * `TWO_FACTOR_AUTH_ENABLED` - TWO_FACTOR_AUTH_ENABLED
        * `TWO_FACTOR_AUTH_DISABLED` - TWO_FACTOR_AUTH_DISABLED
        * `DELETED_LINKED_ACCOUNT` - DELETED_LINKED_ACCOUNT
        * `DELETED_ALL_COMMON_MODELS_FOR_LINKED_ACCOUNT` - DELETED_ALL_COMMON_MODELS_FOR_LINKED_ACCOUNT
        * `CREATED_DESTINATION` - CREATED_DESTINATION
        * `DELETED_DESTINATION` - DELETED_DESTINATION
        * `CHANGED_DESTINATION` - CHANGED_DESTINATION
        * `CHANGED_SCOPES` - CHANGED_SCOPES
        * `CHANGED_PERSONAL_INFORMATION` - CHANGED_PERSONAL_INFORMATION
        * `CHANGED_ORGANIZATION_SETTINGS` - CHANGED_ORGANIZATION_SETTINGS
        * `ENABLED_INTEGRATION` - ENABLED_INTEGRATION
        * `DISABLED_INTEGRATION` - DISABLED_INTEGRATION
        * `ENABLED_CATEGORY` - ENABLED_CATEGORY
        * `DISABLED_CATEGORY` - DISABLED_CATEGORY
        * `CHANGED_PASSWORD` - CHANGED_PASSWORD
        * `RESET_PASSWORD` - RESET_PASSWORD
        * `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION
        * `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT
        * `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION
        * `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT
        * `CREATED_INTEGRATION_WIDE_FIELD_MAPPING` - CREATED_INTEGRATION_WIDE_FIELD_MAPPING
        * `CREATED_LINKED_ACCOUNT_FIELD_MAPPING` - CREATED_LINKED_ACCOUNT_FIELD_MAPPING
        * `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING` - CHANGED_INTEGRATION_WIDE_FIELD_MAPPING
        * `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING` - CHANGED_LINKED_ACCOUNT_FIELD_MAPPING
        * `DELETED_INTEGRATION_WIDE_FIELD_MAPPING` - DELETED_INTEGRATION_WIDE_FIELD_MAPPING
        * `DELETED_LINKED_ACCOUNT_FIELD_MAPPING` - DELETED_LINKED_ACCOUNT_FIELD_MAPPING
        * `CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - CREATED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
        * `CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - CHANGED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
        * `DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE` - DELETED_LINKED_ACCOUNT_COMMON_MODEL_OVERRIDE
        * `FORCED_LINKED_ACCOUNT_RESYNC` - FORCED_LINKED_ACCOUNT_RESYNC
        * `MUTED_ISSUE` - MUTED_ISSUE
        * `GENERATED_MAGIC_LINK` - GENERATED_MAGIC_LINK
        * `ENABLED_MERGE_WEBHOOK` - ENABLED_MERGE_WEBHOOK
        * `DISABLED_MERGE_WEBHOOK` - DISABLED_MERGE_WEBHOOK
        * `MERGE_WEBHOOK_TARGET_CHANGED` - MERGE_WEBHOOK_TARGET_CHANGED
        * `END_USER_CREDENTIALS_ACCESSED` - END_USER_CREDENTIALS_ACCESSED
      x-merge-category: accounting
    Expense:
      type: object
      description: |-
        # The Expense Object
        ### Description
        The `Expense` object is used to represent a direct purchase by a business, typically made with a check, credit card, or cash. Each `Expense` object is dedicated to a grouping of expenses, with each expense recorded in the lines object.

        The `Expense` object is used also used to represent refunds to direct purchases. Refunds can be distinguished from purchases by the amount sign of the records. Expense objects with a negative amount are purchases and `Expense` objects with a positive amount are refunds to those purchases.

        ### Usage Example
        Fetch from the `GET Expense` endpoint and view a company's expense.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: When the transaction occurred.
        remote_created_at:
          type: string
          format: date-time
          nullable: true
          description: When the expense was created.
          example: '2020-03-31T00:00:00Z'
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: The expense's payment account.
          example: 9d892439-5fab-4dbb-8bd8-34f7f96c7912
          x-merge-expands-to: Account
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The expense's contact.
          example: 3d263469-51a1-4766-9205-f6c997826be1
          x-merge-expands-to: Contact
        total_amount:
          type: number
          format: double
          nullable: true
          description: The expense's total amount.
          example: 10000
        sub_total:
          type: number
          format: double
          nullable: true
          description: The expense's total amount before tax.
        total_tax_amount:
          type: number
          format: double
          nullable: true
          description: The expense's total tax amount.
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The expense's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The expense's exchange rate.
          example: '2.9'
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the expense belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        employee:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Employee'
          nullable: true
          description: The employee this overall transaction relates to.
          example: 7442f0d5-722d-45bd-b807-6e38489d37fe
          x-merge-expands-to: Employee
        memo:
          type: string
          nullable: true
          description: The expense's private note.
          example: New employee supplies
        lines:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseLine'
          example:
          - remote_id: '121222'
            net_amount: 25.54
            tracking_categories:
            - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            tax_rate: a12e7c20-1922-9df7-s75n-edfeewnn7384
            company: 595c8f97-2ac4-45b7-b000-41bdf43240b5
            project: 22e65a5d-2df5-4e6e-884a-e538d0339000
            employee: 7442f0d5-722d-45bd-b807-6e38489d37fe
            item: b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            account: 2a56344a-a491-11ec-b909-0242ac120002
            contact: c640b80b-fac9-409f-aa19-1f9221aec445
            description: MacBook Pro
            exchange_rate: '2.9'
            remote_was_deleted: false
          - remote_id: '121223'
            net_amount: 10
            tracking_categories:
            - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            item: b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            account: 2a56344a-a491-11ec-b909-0242ac120002
            description: Desk Lamp
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the Expense was generated in.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: AccountingPeriod
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteField'
          readOnly: true
      x-merge-expands: '{"account": "Account", "accounting_period": "AccountingPeriod",
        "company": "CompanyInfo", "contact": "Contact", "employee": "Employee", "tracking_categories":
        "TrackingCategory"}'
      x-merge-category: accounting
    ExpenseEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/ExpenseRequest'
      required:
      - model
      x-merge-category: accounting
    ExpenseLine:
      type: object
      description: |-
        # The ExpenseLine Object
        ### Description
        The `ExpenseLine` object is used to represent an expense's line items.

        ### Usage Example
        Fetch from the `GET Expense` endpoint and view the expense's line items.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '121222'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        item:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Item'
          nullable: true
          description: The line's item.
          example: b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          x-merge-expands-to: Item
        net_amount:
          type: number
          format: double
          nullable: true
          description: The line's net amount.
          example: 25.54
        tracking_category:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/TrackingCategory'
          nullable: true
          deprecated: true
          x-merge-expands-to: TrackingCategory
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The expense line item's associated tracking categories.
          x-merge-expands-to: TrackingCategory
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the expense belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        employee:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Employee'
          nullable: true
          description: The employee this overall transaction relates to.
          example: 7442f0d5-722d-45bd-b807-6e38489d37fe
          x-merge-expands-to: Employee
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          = type: string
          nullable: true
          description: |-
            The expense line item's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: The expense's payment account.
          example: 2a56344a-a491-11ec-b909-0242ac120002
          x-merge-expands-to: Account
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The expense's contact.
          example: c640b80b-fac9-409f-aa19-1f9221aec445
          x-merge-expands-to: Contact
        project:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Project'
          nullable: true
          example: 22e65a5d-2df5-4e6e-884a-e538d0339000
          x-merge-expands-to: Project
        description:
          type: string
          nullable: true
          description: The description of the item that was purchased by the company.
          example: MacBook Pro
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The expense line item's exchange rate.
          example: '2.9'
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: a12e7c20-1922-9df7-s75n-edfeewnn7384
          description: The tax rate that applies to this line item.
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"account": "Account", "contact": "Contact", "employee": "Employee",
        "item": "Item", "project": "Project", "tracking_categories": "TrackingCategory",
        "tracking_category": "TrackingCategory"}'
      x-merge-category: accounting
    ExpenseLineRequest:
      type: object
      description: |-
        # The ExpenseLine Object
        ### Description
        The `ExpenseLine` object is used to represent an expense's line items.

        ### Usage Example
        Fetch from the `GET Expense` endpoint and view the expense's line items.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '121222'
        item:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Item'
          nullable: true
          description: The line's item.
          example: b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          x-merge-expands-to: Item
        net_amount:
          type: number
          format: double
          nullable: true
          description: The line's net amount.
          example: 25.54
        tracking_category:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/TrackingCategory'
          nullable: true
          deprecated: true
          x-merge-expands-to: TrackingCategory
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The expense line item's associated tracking categories.
          x-merge-expands-to: TrackingCategory
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the expense belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        employee:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Employee'
          nullable: true
          description: The employee this overall transaction relates to.
          example: 7442f0d5-722d-45bd-b807-6e38489d37fe
          x-merge-expands-to: Employee
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The expense line item's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: The expense's payment account.
          example: 2a56344a-a491-11ec-b909-0242ac120002
          x-merge-expands-to: Account
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The expense's contact.
          example: c640b80b-fac9-409f-aa19-1f9221aec445
          x-merge-expands-to: Contact
        project:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Project'
          nullable: true
          example: 22e65a5d-2df5-4e6e-884a-e538d0339000
          x-merge-expands-to: Project
        description:
          type: string
          nullable: true
          description: The description of the item that was purchased by the company.
          example: MacBook Pro
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The expense line item's exchange rate.
          example: '2.9'
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: a12e7c20-1922-9df7-s75n-edfeewnn7384
          description: The tax rate that applies to this line item.
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-expands: '{"account": "Account", "contact": "Contact", "employee": "Employee",
        "item": "Item", "project": "Project", "tracking_categories": "TrackingCategory",
        "tracking_category": "TrackingCategory"}'
      x-merge-category: accounting
    ExpenseRequest:
      type: object
      description: |-
        # The Expense Object
        ### Description
        The `Expense` object is used to represent a direct purchase by a business, typically made with a check, credit card, or cash. Each `Expense` object is dedicated to a grouping of expenses, with each expense recorded in the lines object.

        The `Expense` object is used also used to represent refunds to direct purchases. Refunds can be distinguished from purchases by the amount sign of the records. Expense objects with a negative amount are purchases and `Expense` objects with a positive amount are refunds to those purchases.

        ### Usage Example
        Fetch from the `GET Expense` endpoint and view a company's expense.
      properties:
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: When the transaction occurred.
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: The expense's payment account.
          example: 9d892439-5fab-4dbb-8bd8-34f7f96c7912
          x-merge-expands-to: Account
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The expense's contact.
          example: 3d263469-51a1-4766-9205-f6c997826be1
          x-merge-expands-to: Contact
        total_amount:
          type: number
          format: double
          nullable: true
          description: The expense's total amount.
          example: 10000
        sub_total:
          type: number
          format: double
          nullable: true
          description: The expense's total amount before tax.
        total_tax_amount:
          type: number
          format: double
          nullable: true
          description: The expense's total tax amount.
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          = type: string
          nullable: true
          description: |-
            The expense's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The expense's exchange rate.
          example: '2.9'
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the expense belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        employee:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Employee'
          nullable: true
          description: The employee this overall transaction relates to.
          example: 7442f0d5-722d-45bd-b807-6e38489d37fe
          x-merge-expands-to: Employee
        memo:
          type: string
          nullable: true
          description: The expense's private note.
          example: New employee supplies
        lines:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseLineRequest'
          example:
          - remote_id: '121222'
            net_amount: 25.54
            tracking_categories:
            - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            tax_rate: a12e7c20-1922-9df7-s75n-edfeewnn7384
            company: 595c8f97-2ac4-45b7-b000-41bdf43240b5
            project: 22e65a5d-2df5-4e6e-884a-e538d0339000
            employee: 7442f0d5-722d-45bd-b807-6e38489d37fe
            item: b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            account: 2a56344a-a491-11ec-b909-0242ac120002
            contact: c640b80b-fac9-409f-aa19-1f9221aec445
            description: MacBook Pro
            exchange_rate: '2.9'
            remote_was_deleted: false
          - remote_id: '121223'
            net_amount: 10
            tracking_categories:
            - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            item: b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            account: 2a56344a-a491-11ec-b909-0242ac120002
            description: Desk Lamp
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the Expense was generated in.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: AccountingPeriod
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-expands: '{"account": "Account", "accounting_period": "AccountingPeriod",
        "company": "CompanyInfo", "contact": "Contact", "employee": "Employee", "tracking_categories":
        "TrackingCategory"}'
      x-merge-category: accounting
    ExpenseResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/Expense'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    ExternalTargetFieldAPI:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
          example: example_target_field_name
        description:
          type: string
          nullable: true
          readOnly: true
          example: this is a example description of a target field
        is_mapped:
          type: string
          nullable: true
          readOnly: true
          example: true
      x-merge-category: accounting
    ExternalTargetFieldAPIResponse:
      type: object
      properties:
        Account:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        AccountingAttachment:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        BalanceSheet:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        CashFlowStatement:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        CompanyInfo:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        Contact:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        IncomeStatement:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        CreditNote:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        Item:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        PurchaseOrder:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        TrackingCategory:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        JournalEntry:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        TaxRate:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        Invoice:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        Payment:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        Expense:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        VendorCredit:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        Transaction:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        AccountingPeriod:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        GeneralLedgerTransaction:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        BankFeedAccount:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        Employee:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        PaymentMethod:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        Project:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
        PaymentTerm:
          type: array
          items:
            $ref: '#/components/schemas/ExternalTargetFieldAPI'
      x-merge-category: accounting
    FeedStatusEnum:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      description: |-
        * `ACTIVE` - ACTIVE
        * `INACTIVE` - INACTIVE
      x-merge-category: accounting
    FieldFormatEnum:
      enum:
      - string
      - number
      - date
      - datetime
      - bool
      - list
      type: string
      description: |-
        * `string` - string
        * `number` - number
        * `date` - date
        * `datetime` - datetime
        * `bool` - bool
        * `list` - list
      x-merge-category: accounting
    FieldMappingApiInstance:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        is_integration_wide:
          type: boolean
          readOnly: true
        target_field:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            is_organization_wide:
              type: boolean
          required:
          - description
          - is_organization_wide
          - name
          nullable: true
          readOnly: true
          example:
            name: example_target_field_name
            description: this is a example description of a target field
            is_organization_wide: true
        remote_field:
          type: object
          properties:
            remote_key_name:
              type: string
              nullable: true
            schema:
              type: object
              additionalProperties: {}
              nullable: true
            remote_endpoint_info:
              type: object
              properties:
                method:
                  type: string
                  nullable: true
                url_path:
                  type: string
                  nullable: true
                field_traversal_path:
                  type: array
                  items:
                    type: string
                  nullable: true
              required:
              - field_traversal_path
              - method
              - url_path
          required:
          - remote_endpoint_info
          - remote_key_name
          - schema
          nullable: true
          readOnly: true
          example:
            remote_key_name: example_remote_field_key
            schema:
              type: string
            remote_endpoint_info:
              method: GET
              url_path: /example-url-path
              field_traversal_path:
              - example_remote_field_key
      x-merge-category: accounting
    FieldMappingApiInstanceResponse:
      type: object
      properties:
        Account:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        AccountingAttachment:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        BalanceSheet:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        CashFlowStatement:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        CompanyInfo:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        Contact:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        IncomeStatement:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        CreditNote:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        Item:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        PurchaseOrder:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        TrackingCategory:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        JournalEntry:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        TaxRate:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        Invoice:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        Payment:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        Expense:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        VendorCredit:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        Transaction:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        AccountingPeriod:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        GeneralLedgerTransaction:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        BankFeedAccount:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        Employee:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        PaymentMethod:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        Project:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
        PaymentTerm:
          type: array
          items:
            $ref: '#/components/schemas/FieldMappingApiInstance'
      x-merge-category: accounting
    FieldMappingInstanceResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/FieldMappingApiInstance'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    FieldPermissionDeserializer:
      type: object
      properties:
        enabled_fields:
          type: array
          items: {}
        disabled_fields:
          type: array
          items: {}
      x-merge-category: accounting
    FieldPermissionDeserializerRequest:
      type: object
      properties:
        enabled_fields:
          type: array
          items: {}
        disabled_fields:
          type: array
          items: {}
      x-merge-category: accounting
    FieldTypeEnum:
      enum:
      - string
      - number
      - date
      - datetime
      - bool
      - list
      type: string
      description: |-
        * `string` - string
        * `number` - number
        * `date` - date
        * `datetime` - datetime
        * `bool` - bool
        * `list` - list
      x-merge-category: accounting
    GeneralLedgerTransaction:
      type: object
      description: |-
        # The GeneralLedgerTransaction Object
        ### Description
        A General Ledger Entry is a record of a financial transaction that is posted to the general ledger, the central repository of a company’s financial data.

        The `GeneralLedgerTransaction` object is a singular endpoint to pull all transactions posted to a company’s general ledger. The transaction that generated the `GeneralLedgerTransaction` can be found by referencing the `underlying_transaction_type` and `underlying_transaction_remote_id` fields.

        The lines of a `GeneralLedgerTransaction` object will always have equal amounts of debits and credits.

        ### Usage Example
        Fetch from the `GET GeneralLedgerTransaction` endpoint and view a general ledger transaction.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: b26fd49a-cbae-470a-a8f8-bcbc119e0390
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '987300'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        underlying_transaction_remote_id:
          type: string
          nullable: true
          description: The third party remote ID of the underlying transaction.
          maxLength: 50
          example: '1234'
        underlying_transaction_type:
          oneOf:
          - $ref: '#/components/schemas/UnderlyingTransactionTypeEnum'
          - type: string
          nullable: true
          description: |-
            The type of the underlying transaction.

            * `INVOICE` - INVOICE
            * `EXPENSE` - EXPENSE
            * `TRANSACTION` - TRANSACTION
            * `JOURNAL_ENTRY` - JOURNAL_ENTRY
            * `PAYMENT` - PAYMENT
            * `VENDOR_CREDIT` - VENDOR_CREDIT
            * `CREDIT_NOTE` - CREDIT_NOTE
          example: INVOICE
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the GeneralLedgerTransaction was
            generated in.
          example: d6e687d6-0c36-48a1-8114-35324b5cb38f
          x-merge-expands-to: AccountingPeriod
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the GeneralLedgerTransaction belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        remote_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's GeneralLedgerTransaction entry was updated.
          example: '2020-03-31T00:00:00Z'
        remote_created_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's GeneralLedgerTransaction entry was created.
          example: '2020-03-31T00:00:00Z'
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        posting_date:
          type: string
          format: date-time
          nullable: true
          description: The date that the transaction was posted to the general ledger.
          example: '2020-03-31T00:00:00Z'
        general_ledger_transaction_lines:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/GeneralLedgerTransactionLine'
          readOnly: true
          example:
          - remote_id: '123'
            account: a47e11b6-c73b-4a0c-be31-130fc48177fa
            company: 595c8f97-2ac4-45b7-b000-41bdf43240b5
            contact: d6e687d6-0c36-48a1-8114-35324b5cb38f
            base_currency: USD
            transaction_currency: USD
            description: Invoice created
            exchange_rate: 1
            tracking_categories:
            - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            debit_amount: 0
            crebit_amount: 123.5
            item: a47e11b6-c73b-4a0c-be31-130fc48177fa
            foreign_debit_amount: 0
            foreign_credit_amount: 123.5
            remote_was_deleted: false
            remote_data:
            - path: /actions
              data:
              - Varies by platform
          description: A list of “General Ledger Transaction Applied to Lines” objects.
          x-merge-expands-to: GeneralLedgerTransactionLine
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
      x-merge-expands: '{"accounting_period": "AccountingPeriod", "company": "CompanyInfo",
        "general_ledger_transaction_lines": "GeneralLedgerTransactionLine", "tracking_categories":
        "TrackingCategory"}'
      x-merge-category: accounting
    GeneralLedgerTransactionLine:
      type: object
      description: |-
        # The GeneralLedgerTransactionLineSerializer Object
        ### Description
        The `GeneralLedgerTransactionLineSerializer` object represents general ledger transaction line item.

        ### Usage Example Fetch from the `GET GeneralLedgerTransactionLineSerializer` endpoint and view an
        `GeneralLedgerTransaction` line item.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '123'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          example: a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: Account
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the GeneralLedgerTransaction belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        employee:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Employee'
          nullable: true
          example: 7442f0d5-722d-45bd-b807-6e38489d37fe
          x-merge-expands-to: Employee
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          example: d6e687d6-0c36-48a1-8114-35324b5cb38f
          x-merge-expands-to: Contact
        project:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Project'
          nullable: true
          example: 22e65a5d-2df5-4e6e-884a-e538d0339000
          x-merge-expands-to: Project
        base_currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          = type: string
          nullable: true
          description: |-
            The base currency of the transaction

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        transaction_currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The transaction currency that the transaction is made in.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The exchange rate between the base currency and the transaction
            currency.
          example: 1
        description:
          type: string
          nullable: true
          description: A description of the line item.
          example: Invoice created
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
          readOnly: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
        debit_amount:
          type: string
          format: decimal
        credit_amount:
          type: string
          format: decimal
        item:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Item'
          nullable: true
          example: a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: Item
        foreign_debit_amount:
          type: string
          format: decimal
        foreign_credit_amount:
          type: string
          format: decimal
          example: 123.5
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
      required:
      - credit_amount
      - debit_amount
      - foreign_credit_amount
      - foreign_debit_amount
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"account": "Account", "company": "CompanyInfo", "contact":
        "Contact", "employee": "Employee", "item": "Item", "project": "Project"}'
      x-merge-category: accounting
    GenerateRemoteKeyRequest:
      type: object
      description: |-
        # The GenerateRemoteKey Object
        ### Description
        The `GenerateRemoteKey` object is used to represent a request for a new remote key.

        ### Usage Example
        Post a `GenerateRemoteKey` to create a new remote key.
      properties:
        name:
          type: string
          minLength: 1
          description: The name of the remote key
          example: Remote Deployment Key 1
      required:
      - name
      x-merge-category: accounting
    IncomeStatement:
      type: object
      description: |-
        # The IncomeStatement Object
        ### Description
        The `IncomeStatement` object is used to represent a company’s income, the cost of sales, operating expenses, and other non-operating expenses. The object also includes other important values like gross profit, gross operating profit, and net income. This represents a period of time (month, quarter, or year).

        ### Usage Example
        Fetch from the `GET IncomeStatement` endpoint and view a company's income statement for a given period.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 0958cbc6-6040-430a-848e-aafacbadf4ae
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '1342348'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          nullable: true
          description: The income statement's name.
          example: IncomeStatement
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The income statement's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the income statement belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        start_period:
          type: string
          format: date-time
          nullable: true
          description: The income statement's start period.
        end_period:
          type: string
          format: date-time
          nullable: true
          description: The income statement's end period.
        income:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem'
          readOnly: true
          example:
          - remote_id: '10299'
            name: Total Income
            value: 325
            sub_items:
            - remote_id: '10200'
              name: Landscaping Services
              value: 425
              sub_items: []
            - remote_id: '10201'
              name: Pest Control Services
              value: -100
              sub_items: []
        cost_of_sales:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem'
          readOnly: true
          example:
          - remote_id: '10299'
            name: Total COGS
            value: 25
            sub_items:
            - remote_id: '10200'
              name: Supplies
              value: 10
              sub_items: []
        gross_profit:
          type: number
          format: double
          nullable: true
          description: The revenue minus the cost of sale.
          example: 300
        operating_expenses:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem'
          readOnly: true
          example:
          - remote_id: '10299'
            name: Total Operating Expenses
            value: 100
            sub_items: []
        net_operating_income:
          type: number
          format: double
          nullable: true
          description: The revenue minus the operating expenses.
          example: 200
        non_operating_expenses:
          type: array
          items:
            $ref: '#/components/schemas/ReportItem'
          readOnly: true
          example:
          - remote_id: '10299'
            name: Total Non-Operating Expenses
            value: 100
            sub_items: []
        net_income:
          type: number
          format: double
          nullable: true
          description: The gross profit minus the total expenses.
          example: 100
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      x-merge-expands: '{"company": "CompanyInfo"}'
      x-merge-category: accounting
    IndividualCommonModelScopeDeserializer:
      type: object
      properties:
        model_name:
          type: string
        model_permissions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ModelPermissionDeserializer'
        field_permissions:
          $ref: '#/components/schemas/FieldPermissionDeserializer'
      required:
      - model_name
      x-merge-category: accounting
    IndividualCommonModelScopeDeserializerRequest:
      type: object
      properties:
        model_name:
          type: string
          minLength: 1
        model_permissions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ModelPermissionDeserializerRequest'
        field_permissions:
          $ref: '#/components/schemas/FieldPermissionDeserializerRequest'
      required:
      - model_name
      x-merge-category: accounting
    Invoice:
      type: object
      description: |-
        # The Invoice Object
        ### Description
        The `Invoice` object represents an itemized record of goods and/or services sold to a customer or bought from a vendor.


        Represents a Bill when the `Invoice` type is `ACCOUNTS_PAYABLE`. References an Invoice when the `Invoice` type is `ACCOUNTS_RECEIVABLE`.

        ### Usage Example
        Fetch from the `LIST Invoices` endpoint and view a company's invoices.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 9871b4a9-f5d2-4f3b-a66b-dfedbed42c46
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '990110'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        type:
          oneOf:
          - $ref: '#/components/schemas/InvoiceTypeEnum'
          = type: string
          nullable: true
          description: |-
            Whether the invoice is an accounts receivable or accounts payable. If `type` is `ACCOUNTS_PAYABLE`, the invoice is a bill. If `type` is `ACCOUNTS_RECEIVABLE`, it is an invoice.

            * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
            * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
          example: ACCOUNTS_RECEIVABLE
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The invoice's contact.
          example: 022a2bef-57e5-4def-8ed2-7c41bd9a5ed8
          x-merge-expands-to: Contact
        number:
          type: string
          nullable: true
          description: The invoice's number.
          example: AIQ12546
        issue_date:
          type: string
          format: date-time
          nullable: true
          description: The invoice's issue date.
          example: '2020-03-31T00:00:00Z'
        due_date:
          type: string
          format: date-time
          nullable: true
          description: The invoice's due date.
          example: '2020-04-15T00:00:00Z'
        paid_on_date:
          type: string
          format: date-time
          nullable: true
          description: The invoice's paid date.
          example: '2020-04-01T00:00:00Z'
        memo:
          type: string
          nullable: true
          description: The invoice's private note.
          example: Weekly Payment
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the invoice belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        employee:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Employee'
          nullable: true
          description: The employee this overall transaction relates to.
          example: 7442f0d5-722d-45bd-b807-6e38489d37fe
          x-merge-expands-to: Employee
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The invoice's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The invoice's exchange rate.
          example: '2.9'
        payment_term:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/PaymentTerm'
          nullable: true
          description: The payment term that applies to this transaction.
          example: 89d329de-825f-4ac6-8369-3c58b4e68bee
          x-merge-expands-to: PaymentTerm
        total_discount:
          type: number
          format: double
          nullable: true
          description: The total discounts applied to the total cost.
        sub_total:
          type: number
          format: double
          nullable: true
          description: The total amount being paid before taxes.
          example: 100
        status:
          oneOf:
          - $ref: '#/components/schemas/InvoiceStatusEnum'
          - type: string
          nullable: true
          description: |-
            The status of the invoice.

            * `PAID` - PAID
            * `DRAFT` - DRAFT
            * `SUBMITTED` - SUBMITTED
            * `PARTIALLY_PAID` - PARTIALLY_PAID
            * `OPEN` - OPEN
            * `VOID` - VOID
          example: DRAFT
        total_tax_amount:
          type: number
          format: double
          nullable: true
          description: The total amount being paid in taxes.
          example: 5
        total_amount:
          type: number
          format: double
          nullable: true
          description: The invoice's total amount.
          example: 105
        balance:
          type: number
          format: double
          nullable: true
          description: The invoice's remaining balance.
          example: 105
        remote_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's invoice entry was updated.
          example: '2020-04-01T00:00:00Z'
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - 7dc5ca17-d311-44cd-9ce0-333080367a18
          - 6aa0700c-48e1-4c4a-8162-02e6a582df05
          - 8c933d61-8f5b-4360-ac0c-c9dc87bee763
          x-merge-expands-to: TrackingCategory
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the Invoice was generated in.
          example: 7dc5ca17-d311-44cd-9ce0-333080367a18
          x-merge-expands-to: AccountingPeriod
        purchase_orders:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/PurchaseOrder'
            nullable: true
          example:
          - e7378d8f-3992-4c2a-8417-ebdc4f2bfeb7
          - dd70ca2f-b120-46fa-889a-9604037f45fd
          - 889b281d-739c-4759-95b8-0aedb3947131
          x-merge-expands-to: PurchaseOrder
        payments:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/Payment'
            nullable: true
          example:
          - b26fd49a-cbae-470a-a8f8-bcbc119e0390
          description: Array of `Payment` object IDs.
          x-merge-expands-to: Payment
        applied_payments:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/PaymentLineItem'
            nullable: true
          example:
          - 9017594e-dc33-4113-a5d2-b0f928e34fdd
          description: A list of the Payment Applied to Lines common models related
            to a given Invoice, Credit Note, or Journal Entry.
          x-merge-expands-to: PaymentLineItemWithPayment
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          readOnly: true
          example:
          - remote_id: '8765432'
            description: Pickleball lessons
            unit_price: 50
            quantity: 1
            total_amount: 50
            currency: USD
            exchange_rate: '2.9'
            employee: 7442f0d5-722d-45bd-b807-6e38489d37fe
            tax_rate: a12e7c20-1922-9df7-s75n-edfeewnn7384
            item: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
            account: cd0f32d4-a493-11ec-b909-0242ac120002
            project: 22e65a5d-2df5-4e6e-884a-e538d0339000
            contact: 908934-49j9-093f-0989-908923908
            tracking_categories:
            - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            company: 595c8f97-2ac4-45b7-b000-41bdf43240b5
            remote_data:
            - path: /actions
              data:
              - Varies by platform
          x-merge-expands-to: InvoiceLineItem
        applied_credit_notes:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/CreditNoteApplyLineForInvoice'
          readOnly: true
          example:
          - credit_note: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
            applied_date: '2020-03-31T00:00:00Z'
            applied_amount: '2.9'
          description: '`CreditNoteApplyLines` applied to the Invoice.'
          x-merge-expands-to: CreditNoteApplyLineForInvoice
        applied_vendor_credits:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/VendorCreditApplyLineForInvoice'
          readOnly: true
          example:
          - vendor_credit: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
            applied_date: '2020-03-31T00:00:00Z'
            applied_amount: '2.9'
          description: '`VendorCreditApplyLines` applied to the Invoice.'
          x-merge-expands-to: VendorCreditApplyLineForInvoice
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteField'
          readOnly: true
      x-merge-expands: '{"accounting_period": "AccountingPeriod", "applied_credit_notes":
        "CreditNoteApplyLineForInvoice", "applied_payments": "PaymentLineItemWithPayment",
        "applied_vendor_credits": "VendorCreditApplyLineForInvoice", "company": "CompanyInfo",
        "contact": "Contact", "employee": "Employee", "line_items": "InvoiceLineItem",
        "payment_term": "PaymentTerm", "payments": "Payment", "purchase_orders": "PurchaseOrder",
        "tracking_categories": "TrackingCategory"}'
      x-merge-category: accounting
    InvoiceEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/InvoiceRequest'
      required:
      - model
      x-merge-category: accounting
    InvoiceLineItem:
      type: object
      description: |-
        # The InvoiceLineItem Object
        ### Description
        The `InvoiceLineItem` object represents an itemized record of goods and/or services sold to a customer.

        ### Usage Example
        Fetch from the `GET Invoice` endpoint and view the invoice's line items.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '8765432'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        description:
          type: string
          nullable: true
          description: The line item's description.
          example: Pickleball lessons
        unit_price:
          type: number
          format: double
          nullable: true
          description: The line item's unit price.
          example: 50
        quantity:
          type: number
          format: double
          nullable: true
          description: The line item's quantity.
          example: 1
        total_amount:
          type: number
          format: double
          nullable: true
          description: The line item's total amount.
          example: 50
        employee:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Employee'
          nullable: true
          description: The employee this overall transaction relates to.
          example: 7442f0d5-722d-45bd-b807-6e38489d37fe
        project:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Project'
          nullable: true
          example: 22e65a5d-2df5-4e6e-884a-e538d0339000
          x-merge-expands-to: Project
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The invoice's contact.
          example: 908934-49j9-093f-0989-908923908
          x-merge-expands-to: Contact
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The line item's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The line item's exchange rate.
          example: '2.9'
        item:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Item'
          nullable: true
          example: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
          x-merge-expands-to: Item
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          example: cd0f32d4-a493-11ec-b909-0242ac120002
          x-merge-expands-to: Account
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: a12e7c20-1922-9df7-s75n-edfeewnn7384
          description: The tax rate that applies to this line item.
        tracking_category:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/TrackingCategory'
          nullable: true
          deprecated: true
          x-merge-expands-to: TrackingCategory
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The invoice line item's associated tracking categories.
          x-merge-expands-to: TrackingCategory
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the invoice belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteField'
          readOnly: true
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"account": "Account", "contact": "Contact", "item": "Item",
        "project": "Project", "tracking_categories": "TrackingCategory", "tracking_category":
        "TrackingCategory"}'
      x-merge-category: accounting
    InvoiceLineItemRequest:
      type: object
      description: |-
        # The InvoiceLineItem Object
        ### Description
        The `InvoiceLineItem` object represents an itemized record of goods and/or services sold to a customer.

        ### Usage Example
        Fetch from the `GET Invoice` endpoint and view the invoice's line items.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '8765432'
        description:
          type: string
          nullable: true
          description: The line item's description.
          example: Pickleball lessons
        unit_price:
          type: number
          format: double
          nullable: true
          description: The line item's unit price.
          example: 50
        quantity:
          type: number
          format: double
          nullable: true
          description: The line item's quantity.
          example: 1
        total_amount:
          type: number
          format: double
          nullable: true
          description: The line item's total amount.
          example: 50
        employee:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Employee'
          nullable: true
          description: The employee this overall transaction relates to.
          example: 7442f0d5-722d-45bd-b807-6e38489d37fe
        project:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Project'
          nullable: true
          example: 22e65a5d-2df5-4e6e-884a-e538d0339000
          x-merge-expands-to: Project
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The invoice's contact.
          example: 908934-49j9-093f-0989-908923908
          x-merge-expands-to: Contact
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The line item's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The line item's exchange rate.
          example: '2.9'
        item:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Item'
          nullable: true
          example: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
          x-merge-expands-to: Item
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          example: cd0f32d4-a493-11ec-b909-0242ac120002
          x-merge-expands-to: Account
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: a12e7c20-1922-9df7-s75n-edfeewnn7384
          description: The tax rate that applies to this line item.
        tracking_category:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/TrackingCategory'
          nullable: true
          deprecated: true
          x-merge-expands-to: TrackingCategory
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The invoice line item's associated tracking categories.
          x-merge-expands-to: TrackingCategory
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the invoice belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-expands: '{"account": "Account", "contact": "Contact", "item": "Item",
        "project": "Project", "tracking_categories": "TrackingCategory", "tracking_category":
        "TrackingCategory"}'
      x-merge-category: accounting
    InvoiceRequest:
      type: object
      description: |-
        # The Invoice Object
        ### Description
        The `Invoice` object represents an itemized record of goods and/or services sold to a customer or bought from a vendor.


        Represents a Bill when the `Invoice` type is `ACCOUNTS_PAYABLE`. References an Invoice when the `Invoice` type is `ACCOUNTS_RECEIVABLE`.

        ### Usage Example
        Fetch from the `LIST Invoices` endpoint and view a company's invoices.
      properties:
        type:
          oneOf:
          - $ref: '#/components/schemas/InvoiceTypeEnum'
          - type: string
          nullable: true
          description: |-
            Whether the invoice is an accounts receivable or accounts payable. If `type` is `ACCOUNTS_PAYABLE`, the invoice is a bill. If `type` is `ACCOUNTS_RECEIVABLE`, it is an invoice.

            * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
            * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The invoice's contact.
          x-merge-expands-to: Contact
        number:
          type: string
          nullable: true
          description: The invoice's number.
        issue_date:
          type: string
          format: date-time
          nullable: true
          description: The invoice's issue date.
        due_date:
          type: string
          format: date-time
          nullable: true
          description: The invoice's due date.
        paid_on_date:
          type: string
          format: date-time
          nullable: true
          description: The invoice's paid date.
        employee:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Employee'
          nullable: true
          description: The employee this overall transaction relates to.
          x-merge-expands-to: Employee
        memo:
          type: string
          nullable: true
          description: The invoice's private note.
        status:
          oneOf:
          - $ref: '#/components/schemas/InvoiceStatusEnum'
          - type: string
          nullable: true
          description: |-
            The status of the invoice.

            * `PAID` - PAID
            * `DRAFT` - DRAFT
            * `SUBMITTED` - SUBMITTED
            * `PARTIALLY_PAID` - PARTIALLY_PAID
            * `OPEN` - OPEN
            * `VOID` - VOID
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the invoice belongs to.
          x-merge-expands-to: CompanyInfo
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The invoice's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The invoice's exchange rate.
        total_discount:
          type: number
          format: double
          nullable: true
          description: The total discounts applied to the total cost.
        sub_total:
          type: number
          format: double
          nullable: true
          description: The total amount being paid before taxes.
        payment_term:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/PaymentTerm'
          nullable: true
          description: The payment term that applies to this transaction.
          x-merge-expands-to: PaymentTerm
        total_tax_amount:
          type: number
          format: double
          nullable: true
          description: The total amount being paid in taxes.
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        total_amount:
          type: number
          format: double
          nullable: true
          description: The invoice's total amount.
        balance:
          type: number
          format: double
          nullable: true
          description: The invoice's remaining balance.
        payments:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/Payment'
            nullable: true
          description: Array of `Payment` object IDs.
          x-merge-expands-to: Payment
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          x-merge-expands-to: TrackingCategory
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItemRequest'
          x-merge-expands-to: InvoiceLineItem
        purchase_orders:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/PurchaseOrder'
            nullable: true
          x-merge-expands-to: PurchaseOrder
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-expands: '{"accounting_period": "AccountingPeriod", "applied_credit_notes":
        "CreditNoteApplyLineForInvoice", "applied_payments": "PaymentLineItemWithPayment",
        "applied_vendor_credits": "VendorCreditApplyLineForInvoice", "company": "CompanyInfo",
        "contact": "Contact", "employee": "Employee", "line_items": "InvoiceLineItem",
        "payment_term": "PaymentTerm", "payments": "Payment", "purchase_orders": "PurchaseOrder",
        "tracking_categories": "TrackingCategory"}'
      x-merge-category: accounting
    InvoiceResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/Invoice'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    InvoiceStatusEnum:
      enum:
      - PAID
      - DRAFT
      - SUBMITTED
      - PARTIALLY_PAID
      - OPEN
      - VOID
      type: string
      description: |-
        * `PAID` - PAID
        * `DRAFT` - DRAFT
        * `SUBMITTED` - SUBMITTED
        * `PARTIALLY_PAID` - PARTIALLY_PAID
        * `OPEN` - OPEN
        * `VOID` - VOID
      x-merge-category: accounting
    InvoiceTypeEnum:
      enum:
      - ACCOUNTS_RECEIVABLE
      - ACCOUNTS_PAYABLE
      type: string
      description: |-
        * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
        * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
      x-merge-category: accounting
    Issue:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        status:
          oneOf:
          - $ref: '#/components/schemas/IssueStatusEnum'
          - type: string
          description: |-
            Status of the issue. Options: ('ONGOING', 'RESOLVED')

            * `ONGOING` - ONGOING
            * `RESOLVED` - RESOLVED
          example: ONGOING
        error_description:
          type: string
          example: Missing Permissions
        end_user:
          type: object
          additionalProperties: {}
          readOnly: true
          example: b82302de-852e-4e60-b050-edf9da3b7c02
        first_incident_time:
          type: string
          format: date-time
          nullable: true
          example: '2022-12-05T16:19:15.161Z'
        last_incident_time:
          type: string
          format: date-time
          nullable: true
          example: '2022-12-05T16:19:15.161Z'
        is_muted:
          type: boolean
          readOnly: true
          example: true
        error_details:
          type: array
          items:
            type: string
          readOnly: true
          example:
          - Missing employee permissions.
          - Missing time off permissions.
      required:
      - error_description
      x-merge-category: accounting
    IssueStatusEnum:
      enum:
      - ONGOING
      - RESOLVED
      type: string
      description: |-
        * `ONGOING` - ONGOING
        * `RESOLVED` - RESOLVED
      x-merge-category: accounting
    Item:
      type: object
      description: |-
        # The Item Object
        ### Description
        The `Item` object refers to the goods involved in a transaction.

        ### Usage Example
        Fetch from the `LIST Items` endpoint and view a company's items.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: d2f972d0-2526-434b-9409-4c3b468e08f0
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '12374'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          nullable: true
          description: The item's name.
          example: Pickleball Paddle
        status:
          oneOf:
          - $ref: '#/components/schemas/Status7d1Enum'
          - type: string
          nullable: true
          description: |-
            The item's status.

            * `ACTIVE` - ACTIVE
            * `ARCHIVED` - ARCHIVED
          example: ACTIVE
        type:
          oneOf:
          - $ref: '#/components/schemas/Type2bbEnum'
          - type: string
          nullable: true
          description: |-
            The item's type.

            * `INVENTORY` - INVENTORY
            * `NON_INVENTORY` - NON_INVENTORY
            * `SERVICE` - SERVICE
            * `UNKNOWN` - UNKNOWN
          example: INVENTORY
        unit_price:
          type: number
          format: double
          nullable: true
          description: The item's unit price.
          example: 10
        purchase_price:
          type: number
          format: double
          nullable: true
          description: The price at which the item is purchased from a vendor.
          example: 25
        purchase_account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: References the default account used to record a purchase of
            the item.
          example: 9871b4a9-f5d2-4f3b-a66b-dfedbed42c46
          x-merge-expands-to: Account
        sales_account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: References the default account used to record a sale.
          example: 3872b4c9-f5d2-4f3b-a66b-dfedbed42c49
          x-merge-expands-to: Account
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the item belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        purchase_tax_rate:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/TaxRate'
          nullable: true
          description: The default purchase tax rate for this item.
          example: 983e8f97-9qw2-34v9-p123-67bdf98740v5
          x-merge-expands-to: TaxRate
        sales_tax_rate:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/TaxRate'
          nullable: true
          description: The default sales tax rate for this item.
          example: 232c8f56-7se4-98f2-y334-12bdf89249f5
          x-merge-expands-to: TaxRate
        remote_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's item note was updated.
          example: '2020-03-31T00:00:00Z'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      x-merge-expands: '{"company": "CompanyInfo", "purchase_account": "Account",
        "purchase_tax_rate": "TaxRate", "sales_account": "Account", "sales_tax_rate":
        "TaxRate"}'
      x-merge-category: accounting
    ItemEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/ItemRequestRequest'
      required:
      - model
      x-merge-category: accounting
    ItemFormatEnum:
      enum:
      - string
      - number
      - date
      - datetime
      - bool
      - list
      type: string
      description: |-
        * `string` - uuid
        * `number` - url
        * `date` - email
        * `datetime` - phone
        * `bool` - currency
        * `list` - decimal
      x-merge-category: accounting
    ItemRequestRequest:
      type: object
      description: |-
        # The Item Object
        ### Description
        The `Item` object refers to the goods involved in a transaction.

        ### Usage Example
        Fetch from the `LIST Items` endpoint and view a company's items.
      properties:
        name:
          type: string
          nullable: true
          description: The item's name.
          example: Pickleball Paddle
        status:
          oneOf:
          - $ref: '#/components/schemas/Status7d1Enum'
          - type: string
          nullable: true
          description: |-
            The item's status.

            * `ACTIVE` - ACTIVE
            * `ARCHIVED` - ARCHIVED
          example: ACTIVE
        type:
          oneOf:
          - $ref: '#/components/schemas/Type2bbEnum'
          - type: string
          nullable: true
          description: |-
            The item's type.

            * `INVENTORY` - INVENTORY
            * `NON_INVENTORY` - NON_INVENTORY
            * `SERVICE` - SERVICE
            * `UNKNOWN` - UNKNOWN
          example: INVENTORY
        unit_price:
          type: number
          format: double
          nullable: true
          description: The item's unit price.
          example: 10
        purchase_price:
          type: number
          format: double
          nullable: true
          description: The price at which the item is purchased from a vendor.
          example: 25
        purchase_account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: References the default account used to record a purchase of
            the item.
          example: 9871b4a9-f5d2-4f3b-a66b-dfedbed42c46
          x-merge-expands-to: Account
        sales_account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: References the default account used to record a sale.
          example: 3872b4c9-f5d2-4f3b-a66b-dfedbed42c49
          x-merge-expands-to: Account
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the item belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        purchase_tax_rate:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/TaxRate'
          nullable: true
          description: The default purchase tax rate for this item.
          example: 983e8f97-9qw2-34v9-p123-67bdf98740v5
          x-merge-expands-to: TaxRate
        sales_tax_rate:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/TaxRate'
          nullable: true
          description: The default sales tax rate for this item.
          example: 232c8f56-7se4-98f2-y334-12bdf89249f5
          x-merge-expands-to: TaxRate
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-expands: '{"company": "CompanyInfo", "purchase_account": "Account",
        "purchase_tax_rate": "TaxRate", "sales_account": "Account", "sales_tax_rate":
        "TaxRate"}'
      x-merge-category: accounting
    ItemResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/Item'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    ItemSchema:
      type: object
      properties:
        item_type:
          $ref: '#/components/schemas/ItemTypeEnum'
        item_format:
          $ref: '#/components/schemas/ItemFormatEnum'
        item_choices:
          type: array
          items:
            type: string
      x-merge-category: accounting
    ItemTypeEnum:
      enum:
      - string
      - number
      - date
      - datetime
      - bool
      - list
      type: string
      description: |-
        * `string` - string
        * `number` - number
        * `date` - date
        * `datetime` - datetime
        * `bool` - bool
        * `list` - list
      x-merge-category: accounting
    JournalEntry:
      type: object
      description: |-
        # The JournalEntry Object
        ### Description
        A `JournalEntry` is a record of a transaction or event that is entered into a company's accounting system.

        The `JournalEntry` common model contains records that are automatically created as a result of a certain type of transaction, like an Invoice, and records that are manually created against a company’s ledger.

        The lines of a given `JournalEntry` object should always sum to 0. A positive `net_amount` means the line represents a debit and a negative net_amount represents a credit.

        ### Usage Example
        Fetch from the `GET JournalEntry` endpoint and view a company's journey entry.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The journal entry's transaction date.
          example: '2020-03-31T00:00:00Z'
        payments:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/Payment'
            nullable: true
          example:
          - b26fd49a-cbae-470a-a8f8-bcbc119e0390
          description: Array of `Payment` object IDs.
          x-merge-expands-to: Payment
        applied_payments:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/PaymentLineItem'
            nullable: true
          example:
          - 4311155d-f236-4a5d-9e0f-1cb167e38f95
          description: A list of the Payment Applied to Lines common models related
            to a given Invoice, Credit Note, or Journal Entry.
          x-merge-expands-to: PaymentLineItemWithPayment
        memo:
          type: string
          nullable: true
          description: The journal entry's private note.
          example: Weekly Payment
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The journal's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The journal entry's exchange rate.
          example: '2.9'
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the journal entry belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        lines:
          type: array
          items:
            $ref: '#/components/schemas/JournalLine'
          readOnly: true
          example:
          - remote_id: '121222'
            account: 9d892439-5fab-4dbb-8bd8-34f7f96c7912
            net_amount: 25.54
            tracking_categories:
            - d25d609b-945f-4762-b55a-1c8fb220c43c
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            tax_rate: a12e7c20-1922-9df7-s75n-edfeewnn7384
            contact: d2d5ea3c-b032-11ec-b909-0242ac120002
            company: 595c8f97-2ac4-45b7-b000-41bdf43240b5
            project: 22e65a5d-2df5-4e6e-884a-e538d0339000
            employee: 123c8r35-5kf5-12x5-r833-99bwf35210b5
            description: Cash payment for lunch
            exchange_rate: '2.9'
            remote_was_deleted: false
          - remote_id: '121223'
            account: f963f34d-3d2f-4f77-b557-cf36bc7e6498
            net_amount: 10
          x-merge-expands-to: JournalLine
        journal_number:
          type: string
          nullable: true
          description: Reference number for identifying journal entries.
          maxLength: 70
          example: '42'
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        posting_status:
          oneOf:
          - $ref: '#/components/schemas/PostingStatusEnum'
          - type: string
          nullable: true
          description: |-
            The journal's posting status.

            * `UNPOSTED` - UNPOSTED
            * `POSTED` - POSTED
          example: POSTED
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the JournalEntry was generated in.
          example: 655c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: AccountingPeriod
        remote_created_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's journal entry was created.
          example: '2020-03-31T00:00:00Z'
        remote_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's journal entry was updated.
          example: '2020-03-31T00:00:00Z'
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteField'
          readOnly: true
      x-merge-expands: '{"accounting_period": "AccountingPeriod", "applied_payments":
        "PaymentLineItemWithPayment", "company": "CompanyInfo", "lines": "JournalLine",
        "payments": "Payment", "tracking_categories": "TrackingCategory"}'
      x-merge-category: accounting
    JournalEntryEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/JournalEntryRequest'
      required:
      - model
      x-merge-category: accounting
    JournalEntryRequest:
      type: object
      description: |-
        # The JournalEntry Object
        ### Description
        The `JournalEntry` object is used to get a record of all manually created entries made in a company’s general ledger. The journal line items for each journal entry should sum to zero.

        ### Usage Example
        Fetch from the `GET JournalEntry` endpoint and view a company's journey entry.
      properties:
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The journal entry's transaction date.
        payments:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/Payment'
            nullable: true
          description: Array of `Payment` object IDs.
          x-merge-expands-to: Payment
        memo:
          type: string
          nullable: true
          description: The journal entry's private note.
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The journal's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The journal entry's exchange rate.
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the journal entry belongs to.
          x-merge-expands-to: CompanyInfo
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          x-merge-expands-to: TrackingCategory
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        lines:
          type: array
          items:
            $ref: '#/components/schemas/JournalLineRequest'
          x-merge-expands-to: JournalLine
        journal_number:
          type: string
          nullable: true
          description: Reference number for identifying journal entries.
          maxLength: 70
        posting_status:
          oneOf:
          - $ref: '#/components/schemas/PostingStatusEnum'
          - type: string
          nullable: true
          description: |-
            The journal's posting status.

            * `UNPOSTED` - UNPOSTED
            * `POSTED` - POSTED
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-expands: '{"accounting_period": "AccountingPeriod", "applied_payments":
        "PaymentLineItemWithPayment", "company": "CompanyInfo", "lines": "JournalLine",
        "payments": "Payment", "tracking_categories": "TrackingCategory"}'
      x-merge-category: accounting
    JournalEntryResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/JournalEntry'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    JournalLine:
      type: object
      description: |-
        # The JournalLine Object
        ### Description
        The `JournalLine` object is used to represent a journal entry's line items.

        ### Usage Example
        Fetch from the `GET JournalEntry` endpoint and view the journal entry's line items.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '121222'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          example: 9d892439-5fab-4dbb-8bd8-34f7f96c7912
          x-merge-expands-to: Account
        net_amount:
          type: number
          format: double
          nullable: true
          description: The value of the line item including taxes and other fees.
          example: 25.54
        tracking_category:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/TrackingCategory'
          nullable: true
          deprecated: true
          x-merge-expands-to: TrackingCategory
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - d25d609b-945f-4762-b55a-1c8fb220c43c
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The journal line item's associated tracking categories.
          x-merge-expands-to: TrackingCategory
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The journal line item's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the journal entry belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        employee:
          type: string
          format: uuid
          nullable: true
          example: 123c8r35-5kf5-12x5-r833-99bwf35210b5
        project:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Project'
          nullable: true
          example: 22e65a5d-2df5-4e6e-884a-e538d0339000
          x-merge-expands-to: Project
        contact:
          type: string
          format: uuid
          nullable: true
          example: d2d5ea3c-b032-11ec-b909-0242ac120002
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: a12e7c20-1922-9df7-s75n-edfeewnn7384
          description: The tax rate that applies to this line item.
        description:
          type: string
          nullable: true
          description: The line's description.
          example: Cash payment for lunch
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The journal line item's exchange rate.
          example: '2.9'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteField'
          readOnly: true
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"account": "Account", "project": "Project", "tracking_categories":
        "TrackingCategory", "tracking_category": "TrackingCategory"}'
      x-merge-category: accounting
    JournalLineRequest:
      type: object
      description: |-
        # The JournalLine Object
        ### Description
        The `JournalLine` object is used to represent a journal entry's line items.

        ### Usage Example
        Fetch from the `GET JournalEntry` endpoint and view the journal entry's line items.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '121222'
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          example: 9d892439-5fab-4dbb-8bd8-34f7f96c7912
          x-merge-expands-to: Account
        net_amount:
          type: number
          format: double
          nullable: true
          description: The value of the line item including taxes and other fees.
          example: 25.54
        tracking_category:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/TrackingCategory'
          nullable: true
          deprecated: true
          x-merge-expands-to: TrackingCategory
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - d25d609b-945f-4762-b55a-1c8fb220c43c
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The journal line item's associated tracking categories.
          x-merge-expands-to: TrackingCategory
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The journal line item's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the journal entry belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        employee:
          type: string
          format: uuid
          nullable: true
          example: 123c8r35-5kf5-12x5-r833-99bwf35210b5
        project:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Project'
          nullable: true
          example: 22e65a5d-2df5-4e6e-884a-e538d0339000
          x-merge-expands-to: Project
        contact:
          type: string
          format: uuid
          nullable: true
          example: d2d5ea3c-b032-11ec-b909-0242ac120002
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: a12e7c20-1922-9df7-s75n-edfeewnn7384
          description: The tax rate that applies to this line item.
        description:
          type: string
          nullable: true
          description: The line's description.
          example: Cash payment for lunch
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The journal line item's exchange rate.
          example: '2.9'
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-expands: '{"account": "Account", "project": "Project", "tracking_categories":
        "TrackingCategory", "tracking_category": "TrackingCategory"}'
      x-merge-category: accounting
    LanguageEnum:
      enum:
      - en
      - de
      type: string
      description: |-
        * `en` - en
        * `de` - de
      x-merge-category: accounting
    LastSyncResultEnum:
      enum:
      - SYNCING
      - DONE
      - FAILED
      - DISABLED
      - PAUSED
      - PARTIALLY_SYNCED
      type: string
      description: |-
        * `SYNCING` - SYNCING
        * `DONE` - DONE
        * `FAILED` - FAILED
        * `DISABLED` - DISABLED
        * `PAUSED` - PAUSED
        * `PARTIALLY_SYNCED` - PARTIALLY_SYNCED
      x-merge-category: accounting
    LinkToken:
      type: object
      properties:
        link_token:
          type: string
          example: necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0
        integration_name:
          type: string
          example: Lever
        magic_link_url:
          type: string
          example: https://link.merge.dev/asdfjkl12345jsndfgi2i83n
      required:
      - link_token
      x-merge-category: accounting
    LinkedAccountCommonModelScopeDeserializerRequest:
      type: object
      properties:
        common_models:
          type: array
          items:
            $ref: '#/components/schemas/IndividualCommonModelScopeDeserializerRequest'
          description: The common models you want to update the scopes for
          example:
          - model_name: Employee
            model_permissions:
              READ:
                is_enabled: true
              WRITE:
                is_enabled: false
            field_permissions:
              enabled_fields:
              - avatar
              - home_location
              disabled_fields:
              - work_location
          - model_name: Benefit
            model_permissions:
              WRITE:
                is_enabled: false
      required:
      - common_models
      x-merge-category: accounting
    LinkedAccountStatus:
      type: object
      properties:
        linked_account_status:
          type: string
        can_make_request:
          type: boolean
      required:
      - can_make_request
      - linked_account_status
      x-merge-category: accounting
    MetaResponse:
      type: object
      properties:
        request_schema:
          type: object
          additionalProperties: {}
          example:
            type: object
            properties:
              model:
                type: object
                required:
                - last_name
                - first_name
                - merge_categories
                - new_york_city_neighborhood
                - favorite_tv_shows
                - favorite_watch
                properties:
                  email_addresses:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                          title: value
                        email_address_type:
                          type: string
                          title: email_address_type
                        integration_params:
                          type: object
                          title: integration_params
                          properties: {}
                        linked_account_params:
                          type: object
                          title: linked_account_params
                          properties: {}
                    title: email_addresses
                    description: Array of email_addresses objects
                  urls:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                          title: value
                        url_type:
                          type: string
                          title: url_type
                        integration_params:
                          type: object
                          title: integration_params
                          properties: {}
                        linked_account_params:
                          type: object
                          title: linked_account_params
                          properties: {}
                    title: urls
                    description: Array of urls objects
                  first_name:
                    type: string
                    title: first_name
                    description: The first name.
                  last_name:
                    type: string
                    title: last_name
                    description: The last name.
                  phone_numbers:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                          title: value
                        phone_number_type:
                          type: string
                          title: phone_number_type
                        integration_params:
                          type: object
                          title: integration_params
                          properties: {}
                        linked_account_params:
                          type: object
                          title: linked_account_params
                          properties: {}
                    title: phone_numbers
                    description: Array of phone_numbers objects
                  tags:
                    type: array
                    items:
                      type: string
                      format: uuid
                    title: tags
                    description: Array of tags names
                  attachments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          title: id
                        file_url:
                          type: string
                          title: file_url
                        file_name:
                          type: string
                          title: file_name
                        attachment_type:
                          type: string
                          title: attachment_type
                        integration_params:
                          type: object
                          title: integration_params
                          properties: {}
                        linked_account_params:
                          type: object
                          title: linked_account_params
                          properties: {}
                    title: attachments
                    description: 'Array of attachments objects '
                  merge_categories:
                    type: array
                    categories:
                      type: string
                      enum:
                      - HRIS
                      - ATS
                      - Accounting
                      - Ticketing
                      - File Storage
                      - CRM
                      - Marketing Automation
                      enum_information:
                      - value: HRIS
                        description: Merge HRIS Category
                      - value: ATS
                        description: Merge ATS Category
                      - value: Accounting
                        description: Merge Accounting Category
                      - value: Ticketing
                        description: Merge Ticketing Category
                      - value: File Storage
                        description: Merge File Storage Category
                      - value: CRM
                        description: Merge CRM Category
                      - value: Marketing Automation
                        description: Merge Marketing Automation Category
                    title: Merge Categories
                    description: Array of Merge's Unified API Categories
                  new_york_city_neighborhood:
                    type: string
                    title: Borough
                    description: One of the 5 Boroughs of New York City
                  favorite_tv_shows:
                    type: array
                    items:
                      type: string
                      format: uuid
                    title: Favorite TV Shows
                    description: Array of TV Show objects on merge.tv_shows
                  favorite_watch:
                    type: string
                    title: Favorite Watch
                    description: Favorite watch of all time
        remote_field_classes:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/LinkedAccountStatus'
          example:
            linked_account_status: COMPLETE
            can_make_request: true
        has_conditional_params:
          type: boolean
        has_required_linked_account_params:
          type: boolean
      required:
      - has_conditional_params
      - has_required_linked_account_params
      - request_schema
      x-merge-category: accounting
    MethodEnum:
      enum:
      - GET
      - OPTIONS
      - HEAD
      - POST
      - PUT
      - PATCH
      - DELETE
      type: string
      description: |-
        * `GET` - GET
        * `OPTIONS` - OPTIONS
        * `HEAD` - HEAD
        * `POST` - POST
        * `PUT` - PUT
        * `PATCH` - PATCH
        * `DELETE` - DELETE
      x-merge-category: accounting
    MethodTypeEnum:
      enum:
      - CREDIT_CARD
      - DEBIT_CARD
      - ACH
      - CASH
      - CHECK
      type: string
      description: |-
        * `CREDIT_CARD` - CREDIT_CARD
        * `DEBIT_CARD` - DEBIT_CARD
        * `ACH` - ACH
        * `CASH` - CASH
        * `CHECK` - CHECK
      x-merge-category: accounting
    ModelOperation:
      type: object
      description: |-
        # The ModelOperation Object
        ### Description
        The `ModelOperation` object is used to represent the operations that are currently supported for a given model.

        ### Usage Example
        View what operations are supported for the `Candidate` endpoint.
      properties:
        model_name:
          type: string
          example: Candidate
        available_operations:
          type: array
          items:
            type: string
          example:
          - FETCH
          - CREATE
        required_post_parameters:
          type: array
          items:
            type: string
          example:
          - remote_user_id
        supported_fields:
          type: array
          items:
            type: string
          example:
          - first_name
          - last_name
          - company
          - title
      required:
      - available_operations
      - model_name
      - required_post_parameters
      - supported_fields
      x-merge-category: accounting
    ModelPermissionDeserializer:
      type: object
      properties:
        is_enabled:
          type: boolean
      x-merge-category: accounting
    ModelPermissionDeserializerRequest:
      type: object
      properties:
        is_enabled:
          type: boolean
      x-merge-category: accounting
    MultipartFormFieldRequest:
      type: object
      description: |-
        # The MultipartFormField Object
        ### Description
        The `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.

        ### Usage Example
        Create a `MultipartFormField` to define a multipart form entry.
      properties:
        name:
          type: string
          minLength: 1
          description: The name of the form field
          example: resume
        data:
          type: string
          minLength: 1
          description: The data for the form field.
          example: SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U=
        encoding:
          oneOf:
          - $ref: '#/components/schemas/EncodingEnum'
          nullable: true
          default: RAW
          description: |-
            The encoding of the value of `data`. Defaults to `RAW` if not defined.

            * `RAW` - RAW
            * `BASE64` - BASE64
            * `GZIP_BASE64` - GZIP_BASE64
          example: BASE64
        file_name:
          type: string
          nullable: true
          minLength: 1
          description: The file name of the form field, if the field is for a file.
          example: resume.pdf
        content_type:
          type: string
          nullable: true
          minLength: 1
          description: The MIME type of the file, if the field is for a file.
          example: application/pdf
      required:
      - data
      - name
      x-merge-category: accounting
    PaginatedAccountDetailsAndActionsList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccountDetailsAndActions'
      x-merge-category: accounting
    PaginatedAccountList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      x-merge-category: accounting
    PaginatedAccountingAttachmentList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccountingAttachment'
      x-merge-category: accounting
    PaginatedAccountingPeriodList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccountingPeriod'
      x-merge-category: accounting
    PaginatedAuditLogEventList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogEvent'
      x-merge-category: accounting
    PaginatedBalanceSheetList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/BalanceSheet'
      x-merge-category: accounting
    PaginatedBankFeedAccountList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/BankFeedAccount'
      x-merge-category: accounting
    PaginatedBankFeedTransactionList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/BankFeedTransaction'
      x-merge-category: accounting
    PaginatedCashFlowStatementList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/CashFlowStatement'
      x-merge-category: accounting
    PaginatedCompanyInfoList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompanyInfo'
      x-merge-category: accounting
    PaginatedContactList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      x-merge-category: accounting
    PaginatedCreditNoteList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/CreditNote'
      x-merge-category: accounting
    PaginatedEmployeeList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
      x-merge-category: accounting
    PaginatedExpenseList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
      x-merge-category: accounting
    PaginatedGeneralLedgerTransactionList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/GeneralLedgerTransaction'
      x-merge-category: accounting
    PaginatedIncomeStatementList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/IncomeStatement'
      x-merge-category: accounting
    PaginatedInvoiceList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
      x-merge-category: accounting
    PaginatedIssueList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/Issue'
      x-merge-category: accounting
    PaginatedItemList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/Item'
      x-merge-category: accounting
    PaginatedJournalEntryList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/JournalEntry'
      x-merge-category: accounting
    PaginatedPaymentList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
      x-merge-category: accounting
    PaginatedPaymentMethodList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
      x-merge-category: accounting
    PaginatedPaymentTermList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTerm'
      x-merge-category: accounting
    PaginatedProjectList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
      x-merge-category: accounting
    PaginatedPurchaseOrderList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrder'
      x-merge-category: accounting
    PaginatedRemoteFieldClassList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldClass'
      x-merge-category: accounting
    PaginatedSyncStatusList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/SyncStatus'
      x-merge-category: accounting
    PaginatedTaxRateList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
      x-merge-category: accounting
    PaginatedTrackingCategoryList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategory'
      x-merge-category: accounting
    PaginatedTransactionList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
      x-merge-category: accounting
    PaginatedVendorCreditList:
      type: object
      properties:
        next:
          type: string
          nullable: true
          example: cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
        previous:
          type: string
          nullable: true
          example: cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ
        results:
          type: array
          items:
            $ref: '#/components/schemas/VendorCredit'
      x-merge-category: accounting
    PatchedEditFieldMappingRequest:
      type: object
      properties:
        remote_field_traversal_path:
          type: array
          items: {}
          description: The field traversal path of the remote field listed when you
            hit the GET /remote-fields endpoint.
          example:
          - example_remote_field_name
        remote_method:
          type: string
          minLength: 1
          description: The method of the remote endpoint where the remote field is
            coming from.
          example: GET
        remote_url_path:
          type: string
          minLength: 1
          description: The path of the remote endpoint where the remote field is coming
            from.
          example: /example-url-path
      x-merge-category: accounting
    PatchedInvoiceEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/InvoiceRequest'
      required:
      - model
      x-merge-category: accounting
    PatchedItemEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/PatchedItemRequestRequest'
      required:
      - model
      x-merge-category: accounting
    PatchedItemRequestRequest:
      type: object
      description: |-
        # The Item Object
        ### Description
        The `Item` object refers to the goods involved in a transaction.

        ### Usage Example
        Fetch from the `LIST Items` endpoint and view a company's items.
      properties:
        name:
          type: string
          nullable: true
          description: The item's name.
          example: Pickleball Paddle
        status:
          oneOf:
          - $ref: '#/components/schemas/Status7d1Enum'
          - type: string
          nullable: true
          description: |-
            The item's status.

            * `ACTIVE` - ACTIVE
            * `ARCHIVED` - ARCHIVED
          example: ACTIVE
        type:
          oneOf:
          - $ref: '#/components/schemas/Type2bbEnum'
          - type: string
          nullable: true
          description: |-
            The item's type.

            * `INVENTORY` - INVENTORY
            * `NON_INVENTORY` - NON_INVENTORY
            * `SERVICE` - SERVICE
            * `UNKNOWN` - UNKNOWN
          example: INVENTORY
        unit_price:
          type: number
          format: double
          nullable: true
          description: The item's unit price.
          example: 10
        purchase_price:
          type: number
          format: double
          nullable: true
          description: The price at which the item is purchased from a vendor.
          example: 25
        purchase_account:
          type: string
          format: uuid
          nullable: true
          description: References the default account used to record a purchase of
            the item.
          example: 9871b4a9-f5d2-4f3b-a66b-dfedbed42c46
        sales_account:
          type: string
          format: uuid
          nullable: true
          description: References the default account used to record a sale.
          example: 3872b4c9-f5d2-4f3b-a66b-dfedbed42c49
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the item belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        purchase_tax_rate:
          type: string
          format: uuid
          nullable: true
          description: The default purchase tax rate for this item.
          example: 983e8f97-9qw2-34v9-p123-67bdf98740v5
        sales_tax_rate:
          type: string
          format: uuid
          nullable: true
          description: The default sales tax rate for this item.
          example: 232c8f56-7se4-98f2-y334-12bdf89249f5
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-category: accounting
    PatchedPaymentEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/PatchedPaymentRequest'
      required:
      - model
      x-merge-category: accounting
    PatchedPaymentRequest:
      type: object
      description: |-
        # The Payment Object
        ### Description
        The `Payment` object represents general payments made towards a specific transaction.

        ### Usage Example
        Fetch from the `GET Payment` endpoint and view an invoice's payment.
      properties:
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The payment's transaction date.
          example: '2020-03-31T00:00:00Z'
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The supplier, or customer involved in the payment.
          example: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: The supplier’s or customer’s account in which the payment is
            made.
          example: d6e687d6-0c36-48a1-8114-35324b5cb38f
        payment_method:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
          description: The method which this payment was made by.
          example: 9394320-8864-2343-4343-9008789
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The payment's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: FKP
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The payment's exchange rate.
          example: '2.9'
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the payment belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        total_amount:
          type: number
          format: double
          nullable: true
          description: The total amount of money being paid to the supplier, or customer,
            after taxes.
          example: 50
        type:
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - type: string
          nullable: true
          description: |-
            The type of the invoice.

            * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
            * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
          example: ACCOUNTS_PAYABLE
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the Payment was generated in.
          example: b38c59b0-a9d7-4740-b1ee-5436c6751e3d
        applied_to_lines:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/PaymentLineItemRequest'
          description: A list of “Payment Applied to Lines” objects.
          example:
          - remote_id: '234'
            applied_amount: '25'
            related_object_id: a47e11b6-c73b-4a0c-be31-130fc48177fa
            related_object_type: INVOICE
            applied_date: '2020-03-31T00:00:00Z'
          - remote_id: '235'
            applied_amount: '25'
            related_object_id: 9b96a886-29a5-452b-8733-2a1e03497cf4
            related_object_type: CREDIT_NOTE
            applied_date: '2020-03-31T00:00:00Z'
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-category: accounting
    Payment:
      type: object
      description: |-
        # The Payment Object
        ### Description
        The `Payment` object represents general payments made towards a specific transaction.

        ### Usage Example
        Fetch from the `GET Payment` endpoint and view an invoice's payment.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: b26fd49a-cbae-470a-a8f8-bcbc119e0390
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '987300'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The payment's transaction date.
          example: '2020-03-31T00:00:00Z'
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The supplier, or customer involved in the payment.
          example: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
          x-merge-expands-to: Contact
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: The supplier’s or customer’s account in which the payment is
            made.
          example: d6e687d6-0c36-48a1-8114-35324b5cb38f
          x-merge-expands-to: Account
        payment_method:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
          description: The method which this payment was made by.
          example: 9394320-8864-2343-4343-9008789
          x-merge-expands-to: PaymentMethod
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The payment's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: FKP
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The payment's exchange rate.
          example: '2.9'
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the payment belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        total_amount:
          type: number
          format: double
          nullable: true
          description: The total amount of money being paid to the supplier, or customer,
            after taxes.
          example: 50
        type:
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - type: string
          nullable: true
          description: |-
            The type of the invoice.

            * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
            * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
          example: ACCOUNTS_PAYABLE
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the Payment was generated in.
          example: b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          x-merge-expands-to: AccountingPeriod
        applied_to_lines:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/PaymentLineItem'
          description: A list of “Payment Applied to Lines” objects.
          example:
          - remote_id: '234'
            applied_amount: '25'
            related_object_id: a47e11b6-c73b-4a0c-be31-130fc48177fa
            related_object_type: INVOICE
            applied_date: '2020-03-31T00:00:00Z'
          - remote_id: '235'
            applied_amount: '25'
            related_object_id: 9b96a886-29a5-452b-8733-2a1e03497cf4
            related_object_type: CREDIT_NOTE
            applied_date: '2020-03-31T00:00:00Z'
          x-merge-expands-to: PaymentLineItem
        remote_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's payment entry was updated.
          example: '2020-03-31T00:00:00Z'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteField'
          readOnly: true
      x-merge-expands: '{"account": "Account", "accounting_period": "AccountingPeriod",
        "applied_to_lines": "PaymentLineItem", "company": "CompanyInfo", "contact":
        "Contact", "payment_method": "PaymentMethod", "tracking_categories": "TrackingCategory"}'
      x-merge-category: accounting
    PaymentEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/PaymentRequest'
      required:
      - model
      x-merge-category: accounting
    PaymentLineItem:
      type: object
      description: |-
        # The PaymentLineItem Object
        ### Description
        The `PaymentLineItem` object is an applied-to-line on a `Payment` that can either be a `Invoice`, `CreditNote`, or `JournalEntry`.

        ### Usage Example
        `Payment` will have a field called `applied-to-lines` which will be an array of `PaymentLineItemInternalMappingSerializer` objects that can either be a `Invoice`, `CreditNote`, or `JournalEntry`.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '234'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        applied_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The amount being applied to the transaction.
          example: '25'
        applied_date:
          type: string
          format: date-time
          nullable: true
          description: The date the payment portion is applied.
          example: '2020-03-31T00:00:00Z'
        related_object_id:
          type: string
          format: uuid
          description: The Merge ID of the transaction the payment portion is being
            applied to.
          example: 92e8a369-fffe-430d-b93a-f7e8a16563f1
        related_object_type:
          type: string
          description: 'The type of transaction the payment portion is being applied
            to. Possible values include: INVOICE, JOURNAL_ENTRY, or CREDIT_NOTE.'
          example: INVOICE
      x-merge-nested-write-allowed: true
      x-merge-category: accounting
    PaymentLineItemRequest:
      type: object
      description: |-
        # The PaymentLineItem Object
        ### Description
        The `PaymentLineItem` object is an applied-to-line on a `Payment` that can either be a `Invoice`, `CreditNote`, or `JournalEntry`.

        ### Usage Example
        `Payment` will have a field called `applied-to-lines` which will be an array of `PaymentLineItemInternalMappingSerializer` objects that can either be a `Invoice`, `CreditNote`, or `JournalEntry`.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '234'
        applied_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The amount being applied to the transaction.
          example: '25'
        applied_date:
          type: string
          format: date-time
          nullable: true
          description: The date the payment portion is applied.
          example: '2020-03-31T00:00:00Z'
        related_object_id:
          type: string
          format: uuid
          description: The Merge ID of the transaction the payment portion is being
            applied to.
          example: 92e8a369-fffe-430d-b93a-f7e8a16563f1
        related_object_type:
          type: string
          minLength: 1
          description: 'The type of transaction the payment portion is being applied
            to. Possible values include: INVOICE, JOURNAL_ENTRY, or CREDIT_NOTE.'
          example: INVOICE
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-category: accounting
    PaymentMethod:
      type: object
      description: |-
        # The PaymentMethod Object
        ### Description
        The `PaymentMethod` object defines how a payment against an invoice is made.

        ### Usage Example
        Fetch from the `GET PaymentMethod` endpoint and view payment method information.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        method_type:
          oneOf:
          - $ref: '#/components/schemas/MethodTypeEnum'
          - type: string
          description: |-
            The type of the payment method.

            * `CREDIT_CARD` - CREDIT_CARD
            * `DEBIT_CARD` - DEBIT_CARD
            * `ACH` - ACH
            * `CASH` - CASH
            * `CHECK` - CHECK
          example: CREDIT_CARD
        name:
          type: string
          description: The payment method’s name
          maxLength: 255
          example: John Smith's Credit Card
        is_active:
          type: boolean
          description: '`True` if the payment method is active, `False` if not.'
          example: true
        remote_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's payment method was updated.
          example: '2021-09-15T00:00:00Z'
        field_mappings:
          type: object
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      required:
      - method_type
      - name
      x-merge-category: accounting
    PaymentRequest:
      type: object
      description: |-
        # The Payment Object
        ### Description
        The `Payment` object represents general payments made towards a specific transaction.

        ### Usage Example
        Fetch from the `GET Payment` endpoint and view an invoice's payment.
      properties:
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The payment's transaction date.
          example: '2020-03-31T00:00:00Z'
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The supplier, or customer involved in the payment.
          example: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
          x-merge-expands-to: Contact
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: The supplier’s or customer’s account in which the payment is
            made.
          example: d6e687d6-0c36-48a1-8114-35324b5cb38f
          x-merge-expands-to: Account
        payment_method:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/PaymentMethod'
          nullable: true
          description: The method which this payment was made by.
          example: 9394320-8864-2343-4343-9008789
          x-merge-expands-to: PaymentMethod
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The payment's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: FKP
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The payment's exchange rate.
          example: '2.9'
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the payment belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        total_amount:
          type: number
          format: double
          nullable: true
          description: The total amount of money being paid to the supplier, or customer,
            after taxes.
          example: 50
        type:
          oneOf:
          - $ref: '#/components/schemas/PaymentTypeEnum'
          - type: string
          nullable: true
          description: |-
            The type of the invoice.

            * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
            * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
          example: ACCOUNTS_PAYABLE
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the Payment was generated in.
          example: b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          x-merge-expands-to: AccountingPeriod
        applied_to_lines:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/PaymentLineItemRequest'
          description: A list of “Payment Applied to Lines” objects.
          example:
          - remote_id: '234'
            applied_amount: 25
            related_object_id: a47e11b6-c73b-4a0c-be31-130fc48177fa
            related_object_type: INVOICE
            applied_date: '2020-03-31T00:00:00Z'
          - remote_id: '235'
            applied_amount: 25
            related_object_id: 9b96a886-29a5-452b-8733-2a1e03497cf4
            related_object_type: CREDIT_NOTE
            applied_date: '2020-03-31T00:00:00Z'
          x-merge-expands-to: PaymentLineItem
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-expands: '{"account": "Account", "accounting_period": "AccountingPeriod",
        "applied_to_lines": "PaymentLineItem", "company": "CompanyInfo", "contact":
        "Contact", "payment_method": "PaymentMethod", "tracking_categories": "TrackingCategory"}'
      x-merge-category: accounting
    PaymentResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/Payment'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    PaymentTerm:
      type: object
      description: |-
        # The PaymentTerm Object
        ### Description
        The `PaymentTerm` object is the agreed-upon conditions between a buyer and a seller that define the timing,
        amount, and conditions under which payment for goods or services must be made.

        ### Usage Example
        Fetch from the `GET PaymentTerm` endpoint and view payment term information.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          description: The name of the payment term.
          maxLength: 255
          example: Net 30
        is_active:
          type: boolean
          description: '`True` if the payment term is active, `False` if not.'
          example: true
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The subsidiary that the payment term belongs to.
          example: d2f972d0-2526-434b-9409-4c3b468e08f0
          x-merge-expands-to: CompanyInfo
        days_until_due:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The number of days after the invoice date that payment is due.
          example: 30
        discount_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The number of days the invoice must be paid before discounts
            expire.
          example: 15
        remote_last_modified_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's payment term was modified.
          example: '2024-10-16T00:00:00Z'
        field_mappings:
          type: object
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      required:
      - name
      x-merge-expands: '{"company": "CompanyInfo"}'
      x-merge-category: accounting
    PaymentTypeEnum:
      enum:
      - ACCOUNTS_PAYABLE
      - ACCOUNTS_RECEIVABLE
      type: string
      description: |-
        * `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE
        * `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE
      x-merge-category: accounting
    PostingStatusEnum:
      enum:
      - UNPOSTED
      - POSTED
      type: string
      description: |-
        * `UNPOSTED` - UNPOSTED
        * `POSTED` - POSTED
      x-merge-category: accounting
    Project:
      type: object
      description: |-
        # The Project Object
        ### Description
        The `Project` object is used to track and manage time, costs, resources, and revenue for specific initiatives or work efforts.
        It provides classification on transactions for allocating expenses, revenue, and activities to a specific project for financial reporting.

        ### Usage Example
        Fetch from the `GET Project` endpoint and view project information.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          description: The project’s name
          maxLength: 255
          example: Permissions Mapping
        is_active:
          type: boolean
          description: '`True` if the project is active, `False` if the project is
            not active.'
          example: true
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The subsidiary that the project belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The supplier, or customer involved in the project.
          example: d25d609b-945f-4762-b55a-1c8fb220c43c
          x-merge-expands-to: Contact
        field_mappings:
          type: object
          nullable: true
          readOnly: true
          additionalProperties: {}
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      required:
      - name
      x-merge-expands: '{"company": "CompanyInfo", "contact": "Contact"}'
      x-merge-category: accounting
    PurchaseOrder:
      type: object
      description: |-
        # The PurchaseOrder Object
        ### Description
        A `PurchaseOrder` represents a request to purchase goods or services from a vendor. It outlines the details of the purchase, such as the items or services requested, quantities, prices, and delivery details.

        A `PurchaseOrder` is a crucial component of the procurement process, but does not typically result in any impact on the company’s general ledger. The general ledger is typically only affected when the `PurchaseOrder` is fulfilled as an *Accounts Payable* `Invoice` object (also known as a Bill).

        ### Usage Example
        Fetch from the `LIST PurchaseOrders` endpoint and view a company's purchase orders.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 0048ea5b-911e-4dff-9364-92070dea62ff
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '239741'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        status:
          oneOf:
          - $ref: '#/components/schemas/PurchaseOrderStatusEnum'
          - type: string
          nullable: true
          description: |-
            The purchase order's status.

            * `DRAFT` - DRAFT
            * `SUBMITTED` - SUBMITTED
            * `AUTHORIZED` - AUTHORIZED
            * `BILLED` - BILLED
            * `DELETED` - DELETED
          example: SUBMITTED
        issue_date:
          type: string
          format: date-time
          nullable: true
          description: The purchase order's issue date.
          example: '2020-03-31T00:00:00Z'
        purchase_order_number:
          type: string
          nullable: true
          description: The human-readable number of the purchase order.
          maxLength: 100
          example: PO1234
        delivery_date:
          type: string
          format: date-time
          nullable: true
          description: The purchase order's delivery date.
          example: '2020-04-15T00:00:00Z'
        delivery_address:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Address'
          nullable: true
          description: The purchase order's delivery address.
          example:
            street_1: 2920 Broadway
            street_2: 2nd Floor
            city: New York
            state: NY
            country: US
            zip_code: '10027'
          x-merge-expands-to: Address
        customer:
          type: string
          format: uuid
          nullable: true
          description: The contact making the purchase order.
          example: 3e442c5d-8f51-4103-b5c9-dcee39c30a08
        vendor:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The party fulfilling the purchase order.
          example: 2c22ce34-5c6e-4fc7-a594-7f26bb4cf78b
          x-merge-expands-to: Contact
        memo:
          type: string
          nullable: true
          description: A memo attached to the purchase order.
          example: private note
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the purchase order belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        total_amount:
          type: number
          format: double
          nullable: true
          description: The purchase order's total amount.
          example: 260
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The purchase order's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The purchase order's exchange rate.
          example: '2.9'
        payment_term:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/PaymentTerm'
          nullable: true
          description: The payment term that applies to this transaction.
          example: 89d329de-825f-4ac6-8369-3c58b4e68bee
          x-merge-expands-to: PaymentTerm
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderLineItem'
          readOnly: true
          example:
          - remote_id: '121222'
            description: Pickleball paddles
            unit_price: 25
            quantity: 10
            tax_rate: a12e7c20-1922-9df7-s75n-edfeewnn7384
            item: 0958cbc6-6040-430a-848e-aafacbadf4ae
            tracking_categories:
            - f1214c24-2702-4617-b74b-3ddecfc0d384
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            tax_amount: 10
            total_line_amount: 260
            currency: USD
            exchange_rate: '2.9'
            company: 595c8f97-2ac4-45b7-b000-41bdf43240b5
            remote_was_deleted: false
          - description: Pickleball Balls
            unit_price: 1
            quantity: 10
            item: 249c9faa-3045-4a31-953b-8f22d3613301
            tracking_categories:
            - f1214c24-2702-4617-b74b-3ddecfc0d384
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            tax_amount: 10
            total_line_amount: 20
          x-merge-expands-to: PurchaseOrderLineItem
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the PurchaseOrder was generated
            in.
          example: 2c22ce34-5c6e-4fc7-a594-7f26bb4cf78b
          x-merge-expands-to: AccountingPeriod
        remote_created_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's purchase order note was created.
          example: '2020-03-31T00:00:00Z'
        remote_updated_at:
          type: string
          format: date-time
          nullable: true
          description: When the third party's purchase order note was updated.
          example: '2020-03-31T00:00:00Z'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteField'
          readOnly: true
      x-merge-expands: '{"accounting_period": "AccountingPeriod", "company": "CompanyInfo",
        "delivery_address": "Address", "line_items": "PurchaseOrderLineItem", "payment_term":
        "PaymentTerm", "tracking_categories": "TrackingCategory", "vendor": "Contact"}'
      x-merge-category: accounting
    PurchaseOrderEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/PurchaseOrderRequest'
      required:
      - model
      x-merge-category: accounting
    PurchaseOrderLineItem:
      type: object
      description: |-
        # The PurchaseOrderLineItem Object
        ### Description
        The `PurchaseOrderLineItem` object is used to represent a purchase order's line item.

        ### Usage Example
        Fetch from the `GET PurchaseOrder` endpoint and view a company's purchase orders.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '121222'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        description:
          type: string
          nullable: true
          description: A description of the good being purchased.
          example: Pickleball paddles
        unit_price:
          type: number
          format: double
          nullable: true
          description: The line item's unit price.
          example: 25
        quantity:
          type: number
          format: double
          nullable: true
          description: The line item's quantity.
          example: 10
        item:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Item'
          nullable: true
          example: 0958cbc6-6040-430a-848e-aafacbadf4ae
          x-merge-expands-to: Item
        account:
          type: string
          format: uuid
          nullable: true
          description: The purchase order line item's account.
        tracking_category:
          type: string
          format: uuid
          nullable: true
          description: The purchase order line item's associated tracking category.
          deprecated: true
        tracking_categories:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
          example:
          - f1214c24-2702-4617-b74b-3ddecfc0d384
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The purchase order line item's associated tracking categories.
        tax_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The purchase order line item's tax amount.
          example: 10
        total_line_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The purchase order line item's total amount.
          example: 260
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The purchase order line item's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: a12e7c20-1922-9df7-s75n-edfeewnn7384
          description: The tax rate that applies to this line item.
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The purchase order line item's exchange rate.
          example: '2.9'
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the purchase order line item belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteField'
          readOnly: true
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"item": "Item"}'
      x-merge-category: accounting
    PurchaseOrderLineItemRequest:
      type: object
      description: |-
        # The PurchaseOrderLineItem Object
        ### Description
        The `PurchaseOrderLineItem` object is used to represent a purchase order's line item.

        ### Usage Example
        Fetch from the `GET PurchaseOrder` endpoint and view a company's purchase orders.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '121222'
        description:
          type: string
          nullable: true
          description: A description of the good being purchased.
          example: Pickleball paddles
        unit_price:
          type: number
          format: double
          nullable: true
          description: The line item's unit price.
          example: 25
        quantity:
          type: number
          format: double
          nullable: true
          description: The line item's quantity.
          example: 10
        item:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Item'
          nullable: true
          example: 0958cbc6-6040-430a-848e-aafacbadf4ae
          x-merge-expands-to: Item
        account:
          type: string
          format: uuid
          nullable: true
          description: The purchase order line item's account.
        tracking_category:
          type: string
          format: uuid
          nullable: true
          description: The purchase order line item's associated tracking category.
          deprecated: true
        tracking_categories:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
          example:
          - f1214c24-2702-4617-b74b-3ddecfc0d384
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The purchase order line item's associated tracking categories.
        tax_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The purchase order line item's tax amount.
          example: 10
        total_line_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The purchase order line item's total amount.
          example: 260
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The purchase order line item's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: a12e7c20-1922-9df7-s75n-edfeewnn7384
          description: The tax rate that applies to this line item.
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The purchase order line item's exchange rate.
          example: '2.9'
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the purchase order line item belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-expands: '{"item": "Item"}'
      x-merge-category: accounting
    PurchaseOrderRequest:
      type: object
      description: |-
        # The PurchaseOrder Object
        ### Description
        The `PurchaseOrder` object is a record of request for a product or service between a buyer and seller.

        ### Usage Example
        Fetch from the `LIST PurchaseOrders` endpoint and view a company's purchase orders.
      properties:
        status:
          oneOf:
          - $ref: '#/components/schemas/PurchaseOrderStatusEnum'
          - type: string
          nullable: true
          description: |-
            The purchase order's status.

            * `DRAFT` - DRAFT
            * `SUBMITTED` - SUBMITTED
            * `AUTHORIZED` - AUTHORIZED
            * `BILLED` - BILLED
            * `DELETED` - DELETED
        issue_date:
          type: string
          format: date-time
          nullable: true
          description: The purchase order's issue date.
        delivery_date:
          type: string
          format: date-time
          nullable: true
          description: The purchase order's delivery date.
        delivery_address:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Address'
          nullable: true
          description: The purchase order's delivery address.
          x-merge-expands-to: Address
        customer:
          type: string
          format: uuid
          nullable: true
          description: The contact making the purchase order.
        vendor:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The party fulfilling the purchase order.
          x-merge-expands-to: Contact
        memo:
          type: string
          nullable: true
          description: A memo attached to the purchase order.
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the purchase order belongs to.
          x-merge-expands-to: CompanyInfo
        total_amount:
          type: number
          format: double
          nullable: true
          description: The purchase order's total amount.
        payment_term:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/PaymentTerm'
          nullable: true
          description: The payment term that applies to this transaction.
          x-merge-expands-to: PaymentTerm
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The purchase order's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The purchase order's exchange rate.
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          x-merge-expands-to: TrackingCategory
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderLineItemRequest'
          x-merge-expands-to: PurchaseOrderLineItem
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
        remote_fields:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldRequest'
          writeOnly: true
      x-merge-expands: '{"accounting_period": "AccountingPeriod", "company": "CompanyInfo",
        "delivery_address": "Address", "line_items": "PurchaseOrderLineItem", "payment_term":
        "PaymentTerm", "tracking_categories": "TrackingCategory", "vendor": "Contact"}'
      x-merge-category: accounting
    PurchaseOrderResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/PurchaseOrder'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    PurchaseOrderStatusEnum:
      enum:
      - DRAFT
      - SUBMITTED
      - AUTHORIZED
      - BILLED
      - DELETED
      type: string
      description: |-
        * `DRAFT` - DRAFT
        * `SUBMITTED` - SUBMITTED
        * `AUTHORIZED` - AUTHORIZED
        * `BILLED` - BILLED
        * `DELETED` - DELETED
      x-merge-category: accounting
    RemoteData:
      type: object
      description: |-
        # The RemoteData Object
        ### Description
        The `RemoteData` object is used to represent the full data pulled from the third-party API for an object.

        ### Usage Example
        TODO
      properties:
        path:
          type: string
          description: The third-party API path that is being called.
          example: /platform-endpoint
        data:
          readOnly: true
          description: The data returned from the third-party for this object in its
            original, unnormalized format.
          example:
          - Varies by platform
      required:
      - path
      x-merge-category: accounting
    RemoteEndpointInfo:
      type: object
      properties:
        method:
          type: string
          example: GET
        url_path:
          type: string
          example: /example-url-path
        field_traversal_path:
          type: array
          items: {}
          example:
          - example_key_name
      required:
      - field_traversal_path
      - method
      - url_path
      x-merge-category: accounting
    RemoteField:
      type: object
      properties:
        remote_field_class:
          oneOf:
          - type: string
          - $ref: '#/components/schemas/RemoteFieldClass'
          x-merge-expands-to: RemoteFieldClass
        value:
          nullable: true
          example: string
      required:
      - remote_field_class
      x-merge-expands: '{"remote_field_class": "RemoteFieldClass"}'
      x-merge-category: accounting
    RemoteFieldAPI:
      type: object
      properties:
        schema:
          type: object
          additionalProperties: {}
          example:
            type: string
        remote_key_name:
          type: string
          example: example_remote_key_name
        remote_endpoint_info:
          $ref: '#/components/schemas/RemoteEndpointInfo'
          example:
            method: GET
            url_path: /example-url-path
            field_traversal_path:
            - example_key_name
        example_values:
          type: array
          items: {}
          nullable: true
          example:
          - example
        advanced_metadata:
          allOf:
          - $ref: '#/components/schemas/AdvancedMetadata'
          nullable: true
        coverage:
          oneOf:
          - type: integer
          - type: number
            format: double
          nullable: true
          readOnly: true
          example: 0.33
      required:
      - advanced_metadata
      - remote_endpoint_info
      - remote_key_name
      - schema
      x-merge-category: accounting
    RemoteFieldAPIResponse:
      type: object
      properties:
        Account:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        AccountingAttachment:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        BalanceSheet:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        CashFlowStatement:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        CompanyInfo:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        Contact:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        IncomeStatement:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        CreditNote:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        Item:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        PurchaseOrder:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        TrackingCategory:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        JournalEntry:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        TaxRate:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        Invoice:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        Payment:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        Expense:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        VendorCredit:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        Transaction:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        AccountingPeriod:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        GeneralLedgerTransaction:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        BankFeedAccount:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        Employee:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        PaymentMethod:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        Project:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
        PaymentTerm:
          type: array
          items:
            $ref: '#/components/schemas/RemoteFieldAPI'
      x-merge-category: accounting
    RemoteFieldClass:
      type: object
      properties:
        id:
          type: string
        display_name:
          type: string
        remote_key_name:
          type: string
        description:
          type: string
        is_custom:
          type: boolean
        is_required:
          type: boolean
        field_type:
          $ref: '#/components/schemas/FieldTypeEnum'
        field_format:
          $ref: '#/components/schemas/FieldFormatEnum'
        field_choices:
          type: array
          items:
            type: string
        item_schema:
          $ref: '#/components/schemas/ItemSchema'
      x-merge-category: accounting
    RemoteFieldRequest:
      type: object
      properties:
        remote_field_class:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/RemoteFieldClass'
          example: b057d1d2-c204-4da8-a74c-c91d1a260614
          x-merge-expands-to: RemoteFieldClass
        value:
          nullable: true
          example: string
      required:
      - remote_field_class
      x-merge-expands: '{"remote_field_class": "RemoteFieldClass"}'
      x-merge-category: accounting
    RemoteKey:
      type: object
      description: |-
        # The RemoteKey Object
        ### Description
        The `RemoteKey` object is used to represent a request for a new remote key.

        ### Usage Example
        Post a `GenerateRemoteKey` to receive a new `RemoteKey`.
      properties:
        name:
          type: string
          example: Remote Deployment Key 1
        key:
          type: string
          example: hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA
      required:
      - key
      - name
      x-merge-category: accounting
    RemoteKeyForRegenerationRequest:
      type: object
      description: |-
        # The RemoteKeyForRegeneration Object
        ### Description
        The `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one

        ### Usage Example
        Post a `RemoteKeyForRegeneration` to swap out an old remote key for a new one
      properties:
        name:
          type: string
          minLength: 1
          description: The name of the remote key
          example: Remote Deployment Key 1
      required:
      - name
      x-merge-category: accounting
    RemoteResponse:
      type: object
      description: |-
        # The RemoteResponse Object
        ### Description
        The `RemoteResponse` object is used to represent information returned from a third-party endpoint.

        ### Usage Example
        View the `RemoteResponse` returned from your `DataPassthrough`.
      properties:
        method:
          type: string
          example: GET
        path:
          type: string
          example: /scooters
        status:
          type: integer
          example: 200
        response:
          example:
            scooters:
            - company: Lime
              model: Gen 2.5
            - company: Bird
              model: Bird Zero
        response_headers:
          type: object
          additionalProperties: {}
          example:
            X-Page-Token: value
        response_type:
          allOf:
          - $ref: '#/components/schemas/ResponseTypeEnum'
          example: JSON
        headers:
          type: object
          additionalProperties: {}
          example:
            EXTRA-HEADER: value
            Authorization: <redacted>
      required:
      - method
      - path
      - response
      - status
      x-merge-category: accounting
    ReportItem:
      type: object
      description: |-
        # The ReportItem Object
        ### Description
        The `ReportItem` object is used to represent a report item for a Balance Sheet, Cash Flow Statement or Profit and Loss Report.

        ### Usage Example
        Fetch from the `GET BalanceSheet` endpoint and view the balance sheet's report items.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '10299'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          nullable: true
          description: The report item's name.
          example: Revenue
        value:
          type: number
          format: double
          nullable: true
          description: The report item's value.
          example: 1000
        sub_items:
          type: array
          items:
            type: object
            additionalProperties: {}
          readOnly: true
          example:
          - remote_id: '10300'
            name: Revenue - San Francisco
            value: 500
            sub_items: []
          - remote_id: '10301'
            name: Revenue - New York
            value: 500
            sub_items: []
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the report item belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        remote_was_deleted:
          type: boolean
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
      x-merge-nested-write-allowed: true
      x-merge-category: accounting
    RequestFormatEnum:
      enum:
      - JSON
      - XML
      - MULTIPART
      type: string
      description: |-
        * `JSON` - JSON
        * `XML` - XML
        * `MULTIPART` - MULTIPART
      x-merge-category: accounting
    ResponseTypeEnum:
      enum:
      - JSON
      - BASE64_GZIP
      type: string
      description: |-
        * `JSON` - JSON
        * `BASE64_GZIP` - BASE64_GZIP
      x-merge-category: accounting
    RoleEnum:
      enum:
      - ADMIN
      - DEVELOPER
      - MEMBER
      - API
      - SYSTEM
      - MERGE_TEAM
      type: string
      description: |-
        * `ADMIN` - ADMIN
        * `DEVELOPER` - DEVELOPER
        * `MEMBER` - MEMBER
        * `API` - API
        * `SYSTEM` - SYSTEM
        * `MERGE_TEAM` - MERGE_TEAM
      x-merge-category: accounting
    SelectiveSyncConfigurationsUsageEnum:
      enum:
      - IN_NEXT_SYNC
      - IN_LAST_SYNC
      type: string
      description: |-
        * `IN_NEXT_SYNC` - IN_NEXT_SYNC
        * `IN_LAST_SYNC` - IN_LAST_SYNC
      x-merge-category: accounting
    Status7d1Enum:
      enum:
      - ACTIVE
      - ARCHIVED
      type: string
      description: |-
        * `ACTIVE` - ACTIVE
        * `ARCHIVED` - ARCHIVED
      x-merge-category: accounting
    Status895Enum:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      description: |-
        * `ACTIVE` - ACTIVE
        * `INACTIVE` - INACTIVE
      x-merge-category: accounting
    StatusFd5Enum:
      enum:
      - SYNCING
      - DONE
      - FAILED
      - DISABLED
      - PAUSED
      - PARTIALLY_SYNCED
      type: string
      description: |-
        * `SYNCING` - SYNCING
        * `DONE` - DONE
        * `FAILED` - FAILED
        * `DISABLED` - DISABLED
        * `PAUSED` - PAUSED
        * `PARTIALLY_SYNCED` - PARTIALLY_SYNCED
      x-merge-category: accounting
    SyncStatus:
      type: object
      description: |-
        # The SyncStatus Object
        ### Description
        The `SyncStatus` object is used to represent the syncing state of an account

        ### Usage Example
        View the `SyncStatus` for an account to see how recently its models were synced.
      properties:
        model_name:
          type: string
          example: Invoice
        model_id:
          type: string
          example: accounting.Invoices
        last_sync_start:
          type: string
          format: date-time
          example: '2021-03-30T19:44:18.695973Z'
        next_sync_start:
          type: string
          format: date-time
          example: '2021-03-30T20:44:18.662942Z'
        last_sync_result:
          oneOf:
          - $ref: '#/components/schemas/LastSyncResultEnum'
          - type: string
          example: DONE
        last_sync_finished:
          type: string
          format: date-time
          example: '2021-03-30T19:55:18.695973Z'
        status:
          oneOf:
          - $ref: '#/components/schemas/StatusFd5Enum'
          - type: string
          example: SYNCING
        is_initial_sync:
          type: boolean
          example: true
        selective_sync_configurations_usage:
          $ref: '#/components/schemas/SelectiveSyncConfigurationsUsageEnum'
      required:
      - is_initial_sync
      - model_id
      - model_name
      - status
      x-merge-sample-json: '{"model_name": "Candidate", "model_id": "ats.Candidate",
        "last_sync_start": "2021-03-30T19:44:18.695973Z", "next_sync_start": "2021-03-30T20:44:18.662942Z",
        "status": "SYNCING", "is_initial_sync": true}'
      x-merge-category: accounting
    TaxComponent:
      type: object
      description: |-
        # The TaxRate Object
        ### Description
        The `TaxComponent` object is used to represent any sub-taxes that make up the `TaxRate`.

        ### Usage Example
        Fetch from the `LIST TaxRates` endpoint and view tax components relevant to a tax rate.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '039111'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          nullable: true
          description: The tax rate’s name.
          maxLength: 100
          example: Drink Tax Component
        rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The tax component’s rate.
          example: 15
        is_compound:
          type: boolean
          nullable: true
          description: Returns True if the tax component is compound, False if not.
          example: true
        component_type:
          oneOf:
          - $ref: '#/components/schemas/ComponentTypeEnum'
          - type: string
          nullable: true
          description: |-
            Returns PURCHASE if the tax component corresponds to a purchase tax or SALES if the tax component corresponds to a sales tax.

            * `SALES` - SALES
            * `PURCHASE` - PURCHASE
          example: SALES
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
      x-merge-nested-write-allowed: true
      x-merge-category: accounting
    TaxRate:
      type: object
      description: |-
        # The TaxRate Object
        ### Description
        The `TaxRate` object is used to represent a tax rate.

        ### Usage Example
        Fetch from the `LIST TaxRates` endpoint and view tax rates relevant to a company.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: b82302de-852e-4e60-b050-edf9da3b7c02
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '039111'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The subsidiary that the tax rate belongs to (in the case of
            multi-entity systems).
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        code:
          type: string
          nullable: true
          description: The tax code associated with this tax rate or group of tax
            rates from the third-party platform.
          maxLength: 100
          example: '890'
        name:
          type: string
          nullable: true
          description: The tax rate’s name.
          maxLength: 100
          example: State tax rate
        description:
          type: string
          nullable: true
          description: The tax rate's description.
          example: Sales Tax
        status:
          oneOf:
          - $ref: '#/components/schemas/Status7d1Enum'
          - type: string
          nullable: true
          description: |-
            The tax rate’s status - `ACTIVE` if an active tax rate, `ARCHIVED` if not active.

            * `ACTIVE` - ACTIVE
            * `ARCHIVED` - ARCHIVED
          example: ACTIVE
        country:
          type: string
          nullable: true
          description: The country the tax rate is associated with.
          maxLength: 100
          example: US
        total_tax_rate:
          type: number
          format: double
          nullable: true
          description: The tax’s total tax rate - sum of the tax components (not compounded).
          example: 15
        effective_tax_rate:
          type: number
          format: double
          nullable: true
          description: The tax rate’s effective tax rate - total amount of tax with
            compounding.
          example: 15
        tax_components:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TaxComponent'
          example:
          - remote_id: '039111'
            is_compound: true
            rate: 15
            component_type: SALES
            name: Drink Tax Component
          description: The related tax components of the tax rate.
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      x-merge-expands: '{"company": "CompanyInfo"}'
      x-merge-category: accounting
    TrackingCategory:
      type: object
      description: |-
        # The TrackingCategory Object
        ### Description
        A `TrackingCategory` object represents a categorization method used to classify transactions within an accounting platform. They are often used to group records for reporting and analysis purposes. The most common types of `TrackingCategories` are Classes and Departments.

        ### Usage Example
        Fetch from the `GET TrackingCategory` endpoint and view a company's tracking category.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '948201'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        name:
          type: string
          nullable: true
          description: The tracking category's name.
          example: Marketing Department
        status:
          oneOf:
          - $ref: '#/components/schemas/Status7d1Enum'
          - type: string
          nullable: true
          description: |-
            The tracking category's status.

            * `ACTIVE` - ACTIVE
            * `ARCHIVED` - ARCHIVED
          example: ACTIVE
        category_type:
          oneOf:
          - $ref: '#/components/schemas/CategoryTypeEnum'
          - type: string
          nullable: true
          description: |-
            The tracking category’s type.

            * `CLASS` - CLASS
            * `DEPARTMENT` - DEPARTMENT
          example: DEPARTMENT
        parent_category:
          type: string
          format: uuid
          nullable: true
          example: d25d609b-945f-4762-b55a-1c8fb220c43c
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the GeneralLedgerTransaction belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
      x-merge-expands: '{"company": "CompanyInfo"}'
      x-merge-category: accounting
    Transaction:
      type: object
      description: |-
        # The Transaction Object
        ### Description
        The `Transaction` common model includes records of all types of transactions that do not appear in other common models. The type of transaction can be identified through the type field. More specifically, it will contain all types of transactions outside of:
        * __Credit Notes__
        * __Expenses__
        * __Invoices__
        * __Journal Entries__
        * __Payments__
        * __Purchase Orders__
        * __Vendor Credits__

        ### Usage Example
        Fetch from the `GET Transaction` endpoint and view a company's transactions.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: 0048ea5b-911e-4dff-9364-92070dea62ff
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '239741'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        transaction_type:
          type: string
          nullable: true
          description: The type of transaction, which can by any transaction object
            not already included in Merge’s common model.
          example: estimate
        number:
          type: string
          nullable: true
          description: The transaction's number used for identifying purposes.
          example: '122'
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The date upon which the transaction occurred.
          example: '2020-03-31T00:00:00Z'
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: The transaction's account.
          example: 3e442c5d-8f51-4103-b5c9-dcee39c30a08
          x-merge-expands-to: Account
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The contact to whom the transaction relates to.
          example: 2c22ce34-5c6e-4fc7-a594-7f26bb4cf78b
          x-merge-expands-to: Contact
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The total amount being paid after taxes.
          example: 260
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The transaction's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The transaction's exchange rate.
          example: '2.9'
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the transaction belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/TransactionLineItem'
          readOnly: true
          example:
          - remote_id: '121222'
            memo: Pickleball paddles
            unit_price: '25.0'
            quantity: '10.0'
            item: 0958cbc6-6040-430a-848e-aafacbadf4ae
            account: 2b38c085-2620-4269-b5ec-75dd9095ed2c
            tracking_categories:
            - f1214c24-2702-4617-b74b-3ddecfc0d384
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            total_line_amount: 260
            tax_rate: a12e7c20-1922-9df7-s75n-edfeewnn7384
            currency: USD
            exchange_rate: '2.9'
            company: 595c8f97-2ac4-45b7-b000-41bdf43240b5
            remote_was_deleted: false
          - memo: Pickleball balls
            unit_price: 1
            quantity: 10
            item: 249c9faa-3045-4a31-953b-8f22d3613301
            account: 3e442c5d-8f51-4103-b5c9-dcee39c30a08
            tracking_categories:
            - f1214c24-2702-4617-b74b-3ddecfc0d384
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            total_line_amount: 20
            tax_rate: a12e7c20-1922-9df7-s75n-edfeewnn7384
          x-merge-expands-to: TransactionLineItem
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the Transaction was generated in.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: AccountingPeriod
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      x-merge-model-tooltip:
        title:
        content: A positive `net_amount` means the line represents a debit and a negative
          `net_amount` represents a credit.
      x-merge-expands: '{"account": "Account", "accounting_period": "AccountingPeriod",
        "contact": "Contact", "line_items": "TransactionLineItem", "tracking_categories":
        "TrackingCategory"}'
      x-merge-category: accounting
    TransactionCurrencyEnum:
      enum:
      - XUA
      - AFN
      - AFA
      - ALL
      - ALK
      - DZD
      - ADP
      - AOA
      - AOK
      - AON
      - AOR
      - ARA
      - ARS
      - ARM
      - ARP
      - ARL
      - AMD
      - AWG
      - AUD
      - ATS
      - AZN
      - AZM
      - BSD
      - BHD
      - BDT
      - BBD
      - BYN
      - BYB
      - BYR
      - BEF
      - BEC
      - BEL
      - BZD
      - BMD
      - BTN
      - BOB
      - BOL
      - BOV
      - BOP
      - BAM
      - BAD
      - BAN
      - BWP
      - BRC
      - BRZ
      - BRE
      - BRR
      - BRN
      - BRB
      - BRL
      - GBP
      - BND
      - BGL
      - BGN
      - BGO
      - BGM
      - BUK
      - BIF
      - XPF
      - KHR
      - CAD
      - CVE
      - KYD
      - XAF
      - CLE
      - CLP
      - CLF
      - CNX
      - CNY
      - CNH
      - COP
      - COU
      - KMF
      - CDF
      - CRC
      - HRD
      - HRK
      - CUC
      - CUP
      - CYP
      - CZK
      - CSK
      - DKK
      - DJF
      - DOP
      - NLG
      - XCD
      - DDM
      - ECS
      - ECV
      - EGP
      - GQE
      - ERN
      - EEK
      - ETB
      - EUR
      - XBA
      - XEU
      - XBB
      - XBC
      - XBD
      - FKP
      - FJD
      - FIM
      - FRF
      - XFO
      - XFU
      - GMD
      - GEK
      - GEL
      - DEM
      - GHS
      - GHC
      - GIP
      - XAU
      - GRD
      - GTQ
      - GWP
      - GNF
      - GNS
      - GYD
      - HTG
      - HNL
      - HKD
      - HUF
      - IMP
      - ISK
      - ISJ
      - INR
      - IDR
      - IRR
      - IQD
      - IEP
      - ILS
      - ILP
      - ILR
      - ITL
      - JMD
      - JPY
      - JOD
      - KZT
      - KES
      - KWD
      - KGS
      - LAK
      - LVL
      - LVR
      - LBP
      - LSL
      - LRD
      - LYD
      - LTL
      - LTT
      - LUL
      - LUC
      - LUF
      - MOP
      - MKD
      - MKN
      - MGA
      - MGF
      - MWK
      - MYR
      - MVR
      - MVP
      - MLF
      - MTL
      - MTP
      - MRU
      - MRO
      - MUR
      - MXV
      - MXN
      - MXP
      - MDC
      - MDL
      - MCF
      - MNT
      - MAD
      - MAF
      - MZE
      - MZN
      - MZM
      - MMK
      - NAD
      - NPR
      - ANG
      - TWD
      - NZD
      - NIO
      - NIC
      - NGN
      - KPW
      - NOK
      - OMR
      - PKR
      - XPD
      - PAB
      - PGK
      - PYG
      - PEI
      - PEN
      - PES
      - PHP
      - XPT
      - PLN
      - PLZ
      - PTE
      - GWE
      - QAR
      - XRE
      - RHD
      - RON
      - ROL
      - RUB
      - RUR
      - RWF
      - SVC
      - WST
      - SAR
      - RSD
      - CSD
      - SCR
      - SLL
      - XAG
      - SGD
      - SKK
      - SIT
      - SBD
      - SOS
      - ZAR
      - ZAL
      - KRH
      - KRW
      - KRO
      - SSP
      - SUR
      - ESP
      - ESA
      - ESB
      - XDR
      - LKR
      - SHP
      - XSU
      - SDD
      - SDG
      - SDP
      - SRD
      - SRG
      - SZL
      - SEK
      - CHF
      - SYP
      - STN
      - STD
      - TVD
      - TJR
      - TJS
      - TZS
      - XTS
      - THB
      - XXX
      - TPE
      - TOP
      - TTD
      - TND
      - TRY
      - TRL
      - TMT
      - TMM
      - USD
      - USN
      - USS
      - UGX
      - UGS
      - UAH
      - UAK
      - AED
      - UYW
      - UYU
      - UYP
      - UYI
      - UZS
      - VUV
      - VES
      - VEB
      - VEF
      - VND
      - VNN
      - CHE
      - CHW
      - XOF
      - YDD
      - YER
      - YUN
      - YUD
      - YUM
      - YUR
      - ZWN
      - ZRN
      - ZRZ
      - ZMW
      - ZMK
      - ZWD
      - ZWR
      - ZWL
      type: string
      description: |-
        * `XUA` - ADB Unit of Account
        * `AFN` - Afghan Afghani
        * `AFA` - Afghan Afghani (1927–2002)
        * `ALL` - Albanian Lek
        * `ALK` - Albanian Lek (1946–1965)
        * `DZD` - Algerian Dinar
        * `ADP` - Andorran Peseta
        * `AOA` - Angolan Kwanza
        * `AOK` - Angolan Kwanza (1977–1991)
        * `AON` - Angolan New Kwanza (1990–2000)
        * `AOR` - Angolan Readjusted Kwanza (1995–1999)
        * `ARA` - Argentine Austral
        * `ARS` - Argentine Peso
        * `ARM` - Argentine Peso (1881–1970)
        * `ARP` - Argentine Peso (1983–1985)
        * `ARL` - Argentine Peso Ley (1970–1983)
        * `AMD` - Armenian Dram
        * `AWG` - Aruban Florin
        * `AUD` - Australian Dollar
        * `ATS` - Austrian Schilling
        * `AZN` - Azerbaijani Manat
        * `AZM` - Azerbaijani Manat (1993–2006)
        * `BSD` - Bahamian Dollar
        * `BHD` - Bahraini Dinar
        * `BDT` - Bangladeshi Taka
        * `BBD` - Barbadian Dollar
        * `BYN` - Belarusian Ruble
        * `BYB` - Belarusian Ruble (1994–1999)
        * `BYR` - Belarusian Ruble (2000–2016)
        * `BEF` - Belgian Franc
        * `BEC` - Belgian Franc (convertible)
        * `BEL` - Belgian Franc (financial)
        * `BZD` - Belize Dollar
        * `BMD` - Bermudan Dollar
        * `BTN` - Bhutanese Ngultrum
        * `BOB` - Bolivian Boliviano
        * `BOL` - Bolivian Boliviano (1863–1963)
        * `BOV` - Bolivian Mvdol
        * `BOP` - Bolivian Peso
        * `BAM` - Bosnia-Herzegovina Convertible Mark
        * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
        * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
        * `BWP` - Botswanan Pula
        * `BRC` - Brazilian Cruzado (1986–1989)
        * `BRZ` - Brazilian Cruzeiro (1942–1967)
        * `BRE` - Brazilian Cruzeiro (1990–1993)
        * `BRR` - Brazilian Cruzeiro (1993–1994)
        * `BRN` - Brazilian New Cruzado (1989–1990)
        * `BRB` - Brazilian New Cruzeiro (1967–1986)
        * `BRL` - Brazilian Real
        * `GBP` - British Pound
        * `BND` - Brunei Dollar
        * `BGL` - Bulgarian Hard Lev
        * `BGN` - Bulgarian Lev
        * `BGO` - Bulgarian Lev (1879–1952)
        * `BGM` - Bulgarian Socialist Lev
        * `BUK` - Burmese Kyat
        * `BIF` - Burundian Franc
        * `XPF` - CFP Franc
        * `KHR` - Cambodian Riel
        * `CAD` - Canadian Dollar
        * `CVE` - Cape Verdean Escudo
        * `KYD` - Cayman Islands Dollar
        * `XAF` - Central African CFA Franc
        * `CLE` - Chilean Escudo
        * `CLP` - Chilean Peso
        * `CLF` - Chilean Unit of Account (UF)
        * `CNX` - Chinese People’s Bank Dollar
        * `CNY` - Chinese Yuan
        * `CNH` - Chinese Yuan (offshore)
        * `COP` - Colombian Peso
        * `COU` - Colombian Real Value Unit
        * `KMF` - Comorian Franc
        * `CDF` - Congolese Franc
        * `CRC` - Costa Rican Colón
        * `HRD` - Croatian Dinar
        * `HRK` - Croatian Kuna
        * `CUC` - Cuban Convertible Peso
        * `CUP` - Cuban Peso
        * `CYP` - Cypriot Pound
        * `CZK` - Czech Koruna
        * `CSK` - Czechoslovak Hard Koruna
        * `DKK` - Danish Krone
        * `DJF` - Djiboutian Franc
        * `DOP` - Dominican Peso
        * `NLG` - Dutch Guilder
        * `XCD` - East Caribbean Dollar
        * `DDM` - East German Mark
        * `ECS` - Ecuadorian Sucre
        * `ECV` - Ecuadorian Unit of Constant Value
        * `EGP` - Egyptian Pound
        * `GQE` - Equatorial Guinean Ekwele
        * `ERN` - Eritrean Nakfa
        * `EEK` - Estonian Kroon
        * `ETB` - Ethiopian Birr
        * `EUR` - Euro
        * `XBA` - European Composite Unit
        * `XEU` - European Currency Unit
        * `XBB` - European Monetary Unit
        * `XBC` - European Unit of Account (XBC)
        * `XBD` - European Unit of Account (XBD)
        * `FKP` - Falkland Islands Pound
        * `FJD` - Fijian Dollar
        * `FIM` - Finnish Markka
        * `FRF` - French Franc
        * `XFO` - French Gold Franc
        * `XFU` - French UIC-Franc
        * `GMD` - Gambian Dalasi
        * `GEK` - Georgian Kupon Larit
        * `GEL` - Georgian Lari
        * `DEM` - German Mark
        * `GHS` - Ghanaian Cedi
        * `GHC` - Ghanaian Cedi (1979–2007)
        * `GIP` - Gibraltar Pound
        * `XAU` - Gold
        * `GRD` - Greek Drachma
        * `GTQ` - Guatemalan Quetzal
        * `GWP` - Guinea-Bissau Peso
        * `GNF` - Guinean Franc
        * `GNS` - Guinean Syli
        * `GYD` - Guyanaese Dollar
        * `HTG` - Haitian Gourde
        * `HNL` - Honduran Lempira
        * `HKD` - Hong Kong Dollar
        * `HUF` - Hungarian Forint
        * `IMP` - IMP
        * `ISK` - Icelandic Króna
        * `ISJ` - Icelandic Króna (1918–1981)
        * `INR` - Indian Rupee
        * `IDR` - Indonesian Rupiah
        * `IRR` - Iranian Rial
        * `IQD` - Iraqi Dinar
        * `IEP` - Irish Pound
        * `ILS` - Israeli New Shekel
        * `ILP` - Israeli Pound
        * `ILR` - Israeli Shekel (1980–1985)
        * `ITL` - Italian Lira
        * `JMD` - Jamaican Dollar
        * `JPY` - Japanese Yen
        * `JOD` - Jordanian Dinar
        * `KZT` - Kazakhstani Tenge
        * `KES` - Kenyan Shilling
        * `KWD` - Kuwaiti Dinar
        * `KGS` - Kyrgystani Som
        * `LAK` - Laotian Kip
        * `LVL` - Latvian Lats
        * `LVR` - Latvian Ruble
        * `LBP` - Lebanese Pound
        * `LSL` - Lesotho Loti
        * `LRD` - Liberian Dollar
        * `LYD` - Libyan Dinar
        * `LTL` - Lithuanian Litas
        * `LTT` - Lithuanian Talonas
        * `LUL` - Luxembourg Financial Franc
        * `LUC` - Luxembourgian Convertible Franc
        * `LUF` - Luxembourgian Franc
        * `MOP` - Macanese Pataca
        * `MKD` - Macedonian Denar
        * `MKN` - Macedonian Denar (1992–1993)
        * `MGA` - Malagasy Ariary
        * `MGF` - Malagasy Franc
        * `MWK` - Malawian Kwacha
        * `MYR` - Malaysian Ringgit
        * `MVR` - Maldivian Rufiyaa
        * `MVP` - Maldivian Rupee (1947–1981)
        * `MLF` - Malian Franc
        * `MTL` - Maltese Lira
        * `MTP` - Maltese Pound
        * `MRU` - Mauritanian Ouguiya
        * `MRO` - Mauritanian Ouguiya (1973–2017)
        * `MUR` - Mauritian Rupee
        * `MXV` - Mexican Investment Unit
        * `MXN` - Mexican Peso
        * `MXP` - Mexican Silver Peso (1861–1992)
        * `MDC` - Moldovan Cupon
        * `MDL` - Moldovan Leu
        * `MCF` - Monegasque Franc
        * `MNT` - Mongolian Tugrik
        * `MAD` - Moroccan Dirham
        * `MAF` - Moroccan Franc
        * `MZE` - Mozambican Escudo
        * `MZN` - Mozambican Metical
        * `MZM` - Mozambican Metical (1980–2006)
        * `MMK` - Myanmar Kyat
        * `NAD` - Namibian Dollar
        * `NPR` - Nepalese Rupee
        * `ANG` - Netherlands Antillean Guilder
        * `TWD` - New Taiwan Dollar
        * `NZD` - New Zealand Dollar
        * `NIO` - Nicaraguan Córdoba
        * `NIC` - Nicaraguan Córdoba (1988–1991)
        * `NGN` - Nigerian Naira
        * `KPW` - North Korean Won
        * `NOK` - Norwegian Krone
        * `OMR` - Omani Rial
        * `PKR` - Pakistani Rupee
        * `XPD` - Palladium
        * `PAB` - Panamanian Balboa
        * `PGK` - Papua New Guinean Kina
        * `PYG` - Paraguayan Guarani
        * `PEI` - Peruvian Inti
        * `PEN` - Peruvian Sol
        * `PES` - Peruvian Sol (1863–1965)
        * `PHP` - Philippine Peso
        * `XPT` - Platinum
        * `PLN` - Polish Zloty
        * `PLZ` - Polish Zloty (1950–1995)
        * `PTE` - Portuguese Escudo
        * `GWE` - Portuguese Guinea Escudo
        * `QAR` - Qatari Rial
        * `XRE` - RINET Funds
        * `RHD` - Rhodesian Dollar
        * `RON` - Romanian Leu
        * `ROL` - Romanian Leu (1952–2006)
        * `RUB` - Russian Ruble
        * `RUR` - Russian Ruble (1991–1998)
        * `RWF` - Rwandan Franc
        * `SVC` - Salvadoran Colón
        * `WST` - Samoan Tala
        * `SAR` - Saudi Riyal
        * `RSD` - Serbian Dinar
        * `CSD` - Serbian Dinar (2002–2006)
        * `SCR` - Seychellois Rupee
        * `SLL` - Sierra Leonean Leone
        * `XAG` - Silver
        * `SGD` - Singapore Dollar
        * `SKK` - Slovak Koruna
        * `SIT` - Slovenian Tolar
        * `SBD` - Solomon Islands Dollar
        * `SOS` - Somali Shilling
        * `ZAR` - South African Rand
        * `ZAL` - South African Rand (financial)
        * `KRH` - South Korean Hwan (1953–1962)
        * `KRW` - South Korean Won
        * `KRO` - South Korean Won (1945–1953)
        * `SSP` - South Sudanese Pound
        * `SUR` - Soviet Rouble
        * `ESP` - Spanish Peseta
        * `ESA` - Spanish Peseta (A account)
        * `ESB` - Spanish Peseta (convertible account)
        * `XDR` - Special Drawing Rights
        * `LKR` - Sri Lankan Rupee
        * `SHP` - St. Helena Pound
        * `XSU` - Sucre
        * `SDD` - Sudanese Dinar (1992–2007)
        * `SDG` - Sudanese Pound
        * `SDP` - Sudanese Pound (1957–1998)
        * `SRD` - Surinamese Dollar
        * `SRG` - Surinamese Guilder
        * `SZL` - Swazi Lilangeni
        * `SEK` - Swedish Krona
        * `CHF` - Swiss Franc
        * `SYP` - Syrian Pound
        * `STN` - São Tomé & Príncipe Dobra
        * `STD` - São Tomé & Príncipe Dobra (1977–2017)
        * `TVD` - TVD
        * `TJR` - Tajikistani Ruble
        * `TJS` - Tajikistani Somoni
        * `TZS` - Tanzanian Shilling
        * `XTS` - Testing Currency Code
        * `THB` - Thai Baht
        * `XXX` - The codes assigned for transactions where no currency is involved
        * `TPE` - Timorese Escudo
        * `TOP` - Tongan Paʻanga
        * `TTD` - Trinidad & Tobago Dollar
        * `TND` - Tunisian Dinar
        * `TRY` - Turkish Lira
        * `TRL` - Turkish Lira (1922–2005)
        * `TMT` - Turkmenistani Manat
        * `TMM` - Turkmenistani Manat (1993–2009)
        * `USD` - US Dollar
        * `USN` - US Dollar (Next day)
        * `USS` - US Dollar (Same day)
        * `UGX` - Ugandan Shilling
        * `UGS` - Ugandan Shilling (1966–1987)
        * `UAH` - Ukrainian Hryvnia
        * `UAK` - Ukrainian Karbovanets
        * `AED` - United Arab Emirates Dirham
        * `UYW` - Uruguayan Nominal Wage Index Unit
        * `UYU` - Uruguayan Peso
        * `UYP` - Uruguayan Peso (1975–1993)
        * `UYI` - Uruguayan Peso (Indexed Units)
        * `UZS` - Uzbekistani Som
        * `VUV` - Vanuatu Vatu
        * `VES` - Venezuelan Bolívar
        * `VEB` - Venezuelan Bolívar (1871–2008)
        * `VEF` - Venezuelan Bolívar (2008–2018)
        * `VND` - Vietnamese Dong
        * `VNN` - Vietnamese Dong (1978–1985)
        * `CHE` - WIR Euro
        * `CHW` - WIR Franc
        * `XOF` - West African CFA Franc
        * `YDD` - Yemeni Dinar
        * `YER` - Yemeni Rial
        * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
        * `YUD` - Yugoslavian Hard Dinar (1966–1990)
        * `YUM` - Yugoslavian New Dinar (1994–2002)
        * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
        * `ZWN` - ZWN
        * `ZRN` - Zairean New Zaire (1993–1998)
        * `ZRZ` - Zairean Zaire (1971–1993)
        * `ZMW` - Zambian Kwacha
        * `ZMK` - Zambian Kwacha (1968–2012)
        * `ZWD` - Zimbabwean Dollar (1980–2008)
        * `ZWR` - Zimbabwean Dollar (2008)
        * `ZWL` - Zimbabwean Dollar (2009)
      x-merge-category: accounting
    TransactionLineItem:
      type: object
      description: |-
        # The TransactionLineItem Object
        ### Description
        The `TransactionLineItem` object is used to represent a transaction's line items.

        ### Usage Example
        Fetch from the `GET TransactionLineItem` endpoint and view the transaction's line items.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '121222'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        memo:
          type: string
          nullable: true
          description: An internal note used by the business to clarify purpose of
            the transaction.
          example: Pickleball paddles
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The line item's unit price.
          example: '25.0'
        quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,24}(?:\.\d{0,8})?$
          nullable: true
          description: The line item's quantity.
          example: '10.0'
        item:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Item'
          nullable: true
          example: 0958cbc6-6040-430a-848e-aafacbadf4ae
          x-merge-expands-to: Item
        account:
          type: string
          format: uuid
          nullable: true
          description: The line item's account.
          example: 2b38c085-2620-4269-b5ec-75dd9095ed2c
        tracking_category:
          type: string
          format: uuid
          nullable: true
          description: The line's associated tracking category.
          deprecated: true
        tracking_categories:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
          example:
          - f1214c24-2702-4617-b74b-3ddecfc0d384
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The transaction line item's associated tracking categories.
        total_line_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The line item's total.
          example: 260
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: a12e7c20-1922-9df7-s75n-edfeewnn7384
          description: The tax rate that applies to this line item.
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The line item's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The line item's exchange rate.
          example: '2.9'
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the line belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"item": "Item"}'
      x-merge-category: accounting
    Type2bbEnum:
      enum:
      - INVENTORY
      - NON_INVENTORY
      - SERVICE
      - UNKNOWN
      type: string
      description: |-
        * `INVENTORY` - INVENTORY
        * `NON_INVENTORY` - NON_INVENTORY
        * `SERVICE` - SERVICE
        * `UNKNOWN` - UNKNOWN
      x-merge-category: accounting
    UnderlyingTransactionTypeEnum:
      enum:
      - INVOICE
      - EXPENSE
      - TRANSACTION
      - JOURNAL_ENTRY
      - PAYMENT
      - VENDOR_CREDIT
      - CREDIT_NOTE
      type: string
      description: |-
        * `INVOICE` - INVOICE
        * `EXPENSE` - EXPENSE
        * `TRANSACTION` - TRANSACTION
        * `JOURNAL_ENTRY` - JOURNAL_ENTRY
        * `PAYMENT` - PAYMENT
        * `VENDOR_CREDIT` - VENDOR_CREDIT
        * `CREDIT_NOTE` - CREDIT_NOTE
      x-merge-category: accounting
    ValidationProblemSource:
      type: object
      properties:
        pointer:
          type: string
      required:
      - pointer
      x-merge-category: accounting
    VendorCredit:
      type: object
      description: |-
        # The VendorCredit Object
        ### Description
        A `VendorCredit` is transaction issued by a vendor to the accounting company, indicating a reduction or cancellation of the amount owed to the vendor. It is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a purchasing transaction. A `VendorCredit` can be applied to `Accounts Payable` Invoices to decrease the overall amount of the `Invoice`.

        ### Usage Example
        Fetch from the `GET VendorCredit` endpoint and view a company's vendor credits.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        number:
          type: string
          nullable: true
          description: The vendor credit's number.
          example: '6'
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The vendor credit's transaction date.
          example: '2020-03-31T00:00:00Z'
        vendor:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The vendor that owes the gift or refund.
          example: 3d263469-51a1-4766-9205-f6c997826be1
          x-merge-expands-to: Contact
        total_amount:
          type: number
          format: double
          nullable: true
          description: The vendor credit's total amount.
          example: 10000
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The vendor credit's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The vendor credit's exchange rate.
          example: '2.9'
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the vendor credit belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        lines:
          type: array
          items:
            $ref: '#/components/schemas/VendorCreditLine'
          readOnly: true
          example:
          - remote_id: '121222'
            net_amount: 25.54
            tracking_categories:
            - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            project: 22e65a5d-2df5-4e6e-884a-e538d0339000
            contact: 908934-49j9-093f-0989-908923908
            tax_rate: a12e7c20-1922-9df7-s75n-edfeewnn7384
            exchange_rate: '2.9'
            description: Gifted Merge Credit
            account: 9d892439-5fab-4dbb-8bd8-34f7f96c7912
            company: 595c8f97-2ac4-45b7-b000-41bdf43240b5
            remote_was_deleted: false
          - remote_id: '121223'
            net_amount: 10
            tracking_categories:
            - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
            - 9b840d2-686a-465a-8a8e-7b028498f8e4
            - a47e11b6-c73b-4a0c-be31-130fc48177fa
            description: Refund for overpayment
            account: 9d892439-5fab-4dbb-8bd8-34f7f96c7912
          x-merge-expands-to: VendorCreditLine
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        applied_to_lines:
          type: array
          items:
            $ref: '#/components/schemas/VendorCreditApplyLineForVendorCredit'
          description: A list of VendorCredit Applied to Lines objects.
          example:
          - invoice: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
            applied_date: '2020-03-31T00:00:00Z'
            applied_amount: '2.9'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the VendorCredit was generated in.
          example: 9b840d2-686a-465a-8a8e-7b028498f8e4
          x-merge-expands-to: AccountingPeriod
        field_mappings:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
          example:
            organization_defined_targets:
              custom_key: custom_value
            linked_account_defined_targets:
              custom_key: custom_value
        remote_data:
          type: array
          items:
            $ref: '#/components/schemas/RemoteData'
          readOnly: true
          nullable: true
          example:
          - path: /actions
            data:
            - Varies by platform
      x-merge-expands: '{"accounting_period": "AccountingPeriod", "company": "CompanyInfo",
        "lines": "VendorCreditLine", "tracking_categories": "TrackingCategory", "vendor":
        "Contact"}'
      x-merge-category: accounting
    VendorCreditApplyLineForInvoice:
      type: object
      description: |-
        # The VendorCreditApplyLine Object
        ### Description
        The `VendorCreditApplyLine` object is used to represent a applied vendor credit.

        ### Usage Example
        Fetch from the `GET VendorCredit` endpoint and view the vendor credit's applied to lines.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        vendor_credit:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/VendorCredit'
          nullable: true
          example: f776d7e886ebcc3c56ff31b5ab2608c10f9fd823
          x-merge-expands-to: VendorCredit
        applied_date:
          type: string
          format: date-time
          nullable: true
          description: Date that the vendor credit is applied to the invoice.
          example: '2020-03-31T00:00:00Z'
        applied_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The amount of the VendorCredit applied to the invoice.
          example: '2.9'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"vendor_credit": "VendorCredit"}'
      x-merge-category: accounting
    VendorCreditApplyLineForVendorCredit:
      type: object
      description: |-
        # The VendorCreditApplyLine Object
        ### Description
        The `VendorCreditApplyLine` object is used to represent a applied vendor credit.

        ### Usage Example
        Fetch from the `GET VendorCredit` endpoint and view the vendor credit's applied to lines.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        invoice:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Invoice'
          nullable: true
          example: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
          x-merge-expands-to: Invoice
        applied_date:
          type: string
          format: date-time
          nullable: true
          description: Date that the vendor credit is applied to the invoice.
          example: '2020-03-31T00:00:00Z'
        applied_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The amount of the VendorCredit applied to the invoice.
          example: '2.9'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"invoice": "Invoice"}'
      x-merge-category: accounting
    VendorCreditApplyLineForVendorCreditRequest:
      type: object
      description: |-
        # The VendorCreditApplyLine Object
        ### Description
        The `VendorCreditApplyLine` object is used to represent a applied vendor credit.

        ### Usage Example
        Fetch from the `GET VendorCredit` endpoint and view the vendor credit's applied to lines.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '088899'
        invoice:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Invoice'
          nullable: true
          example: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
          x-merge-expands-to: Invoice
        applied_date:
          type: string
          format: date-time
          nullable: true
          description: Date that the vendor credit is applied to the invoice.
          example: '2020-03-31T00:00:00Z'
        applied_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The amount of the VendorCredit applied to the invoice.
          example: '2.9'
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-expands: '{"invoice": "Invoice"}'
      x-merge-category: accounting
    VendorCreditEndpointRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/VendorCreditRequest'
      required:
      - model
      x-merge-category: accounting
    VendorCreditLine:
      type: object
      description: |-
        # The VendorCreditLine Object
        ### Description
        The `VendorCreditLine` object is used to represent a vendor credit's line items.

        ### Usage Example
        Fetch from the `GET VendorCredit` endpoint and view the vendor credit's line items.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: ecbe05ac-62a3-46c5-ab31-4b478b37d1b4
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '121222'
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was created by Merge.
          example: '2021-09-15T00:00:00Z'
        modified_at:
          type: string
          format: date-time
          readOnly: true
          description: The datetime that this object was modified by Merge.
          example: '2021-10-16T00:00:00Z'
        net_amount:
          type: number
          format: double
          nullable: true
          description: The full value of the credit.
          example: 25.54
        tracking_category:
          type: string
          format: uuid
          nullable: true
          description: The line's associated tracking category.
          deprecated: true
        tracking_categories:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The vendor credit line item's associated tracking categories.
        description:
          type: string
          nullable: true
          description: The line's description.
          example: Gifted Merge Credit
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: The line's account.
          example: 9d892439-5fab-4dbb-8bd8-34f7f96c7912
          x-merge-expands-to: Account
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the line belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        project:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Project'
          nullable: true
          example: 22e65a5d-2df5-4e6e-884a-e538d0339000
          x-merge-expands-to: Project
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          example: 908934-49j9-093f-0989-908923908
          x-merge-expands-to: Contact
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: a12e7c20-1922-9df7-s75n-edfeewnn7384
          description: The tax rate that applies to this line item.
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The vendor credit line item's exchange rate.
          example: '2.9'
        remote_was_deleted:
          type: boolean
          readOnly: true
          description: Indicates whether or not this object has been deleted in the
            third party platform. Full coverage deletion detection is a premium add-on.
            Native deletion detection is offered for free with limited coverage. [Learn
            more](https://docs.merge.dev/integrations/hris/supported-features/).
      x-merge-nested-write-allowed: true
      x-merge-expands: '{"account": "Account", "contact": "Contact", "project": "Project"}'
      x-merge-category: accounting
    VendorCreditLineRequest:
      type: object
      description: |-
        # The VendorCreditLine Object
        ### Description
        The `VendorCreditLine` object is used to represent a vendor credit's line items.

        ### Usage Example
        Fetch from the `GET VendorCredit` endpoint and view the vendor credit's line items.
      properties:
        remote_id:
          type: string
          nullable: true
          description: The third-party API ID of the matching object.
          example: '121222'
        net_amount:
          type: number
          format: double
          nullable: true
          description: The full value of the credit.
          example: 25.54
        tracking_category:
          type: string
          format: uuid
          nullable: true
          description: The line's associated tracking category.
          deprecated: true
        tracking_categories:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          description: The vendor credit line item's associated tracking categories.
        description:
          type: string
          nullable: true
          description: The line's description.
          example: Gifted Merge Credit
        account:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Account'
          nullable: true
          description: The line's account.
          example: 9d892439-5fab-4dbb-8bd8-34f7f96c7912
          x-merge-expands-to: Account
        company:
          type: string
          format: uuid
          nullable: true
          description: The company the line belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
        project:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Project'
          nullable: true
          example: 22e65a5d-2df5-4e6e-884a-e538d0339000
          x-merge-expands-to: Project
        contact:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          example: 908934-49j9-093f-0989-908923908
          x-merge-expands-to: Contact
        tax_rate:
          type: string
          format: uuid
          nullable: true
          example: a12e7c20-1922-9df7-s75n-edfeewnn7384
          description: The tax rate that applies to this line item.
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The vendor credit line item's exchange rate.
          example: '2.9'
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-expands: '{"account": "Account", "contact": "Contact", "project": "Project"}'
      x-merge-category: accounting
    VendorCreditRequest:
      type: object
      description: |-
        # The VendorCredit Object
        ### Description
        A `VendorCredit` is transaction issued by a vendor to the accounting company, indicating a reduction or cancellation of the amount owed to the vendor. It is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a purchasing transaction. A `VendorCredit` can be applied to `Accounts Payable` Invoices to decrease the overall amount of the `Invoice`.

        ### Usage Example
        Fetch from the `GET VendorCredit` endpoint and view a company's vendor credits.
      properties:
        number:
          type: string
          nullable: true
          description: The vendor credit's number.
          example: '6'
        transaction_date:
          type: string
          format: date-time
          nullable: true
          description: The vendor credit's transaction date.
          example: '2020-03-31T00:00:00Z'
        vendor:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/Contact'
          nullable: true
          description: The vendor that owes the gift or refund.
          example: 3d263469-51a1-4766-9205-f6c997826be1
          x-merge-expands-to: Contact
        total_amount:
          type: number
          format: double
          nullable: true
          description: The vendor credit's total amount.
          example: 10000
        currency:
          oneOf:
          - $ref: '#/components/schemas/TransactionCurrencyEnum'
          - type: string
          nullable: true
          description: |-
            The vendor credit's currency.

            * `XUA` - ADB Unit of Account
            * `AFN` - Afghan Afghani
            * `AFA` - Afghan Afghani (1927–2002)
            * `ALL` - Albanian Lek
            * `ALK` - Albanian Lek (1946–1965)
            * `DZD` - Algerian Dinar
            * `ADP` - Andorran Peseta
            * `AOA` - Angolan Kwanza
            * `AOK` - Angolan Kwanza (1977–1991)
            * `AON` - Angolan New Kwanza (1990–2000)
            * `AOR` - Angolan Readjusted Kwanza (1995–1999)
            * `ARA` - Argentine Austral
            * `ARS` - Argentine Peso
            * `ARM` - Argentine Peso (1881–1970)
            * `ARP` - Argentine Peso (1983–1985)
            * `ARL` - Argentine Peso Ley (1970–1983)
            * `AMD` - Armenian Dram
            * `AWG` - Aruban Florin
            * `AUD` - Australian Dollar
            * `ATS` - Austrian Schilling
            * `AZN` - Azerbaijani Manat
            * `AZM` - Azerbaijani Manat (1993–2006)
            * `BSD` - Bahamian Dollar
            * `BHD` - Bahraini Dinar
            * `BDT` - Bangladeshi Taka
            * `BBD` - Barbadian Dollar
            * `BYN` - Belarusian Ruble
            * `BYB` - Belarusian Ruble (1994–1999)
            * `BYR` - Belarusian Ruble (2000–2016)
            * `BEF` - Belgian Franc
            * `BEC` - Belgian Franc (convertible)
            * `BEL` - Belgian Franc (financial)
            * `BZD` - Belize Dollar
            * `BMD` - Bermudan Dollar
            * `BTN` - Bhutanese Ngultrum
            * `BOB` - Bolivian Boliviano
            * `BOL` - Bolivian Boliviano (1863–1963)
            * `BOV` - Bolivian Mvdol
            * `BOP` - Bolivian Peso
            * `BAM` - Bosnia-Herzegovina Convertible Mark
            * `BAD` - Bosnia-Herzegovina Dinar (1992–1994)
            * `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)
            * `BWP` - Botswanan Pula
            * `BRC` - Brazilian Cruzado (1986–1989)
            * `BRZ` - Brazilian Cruzeiro (1942–1967)
            * `BRE` - Brazilian Cruzeiro (1990–1993)
            * `BRR` - Brazilian Cruzeiro (1993–1994)
            * `BRN` - Brazilian New Cruzado (1989–1990)
            * `BRB` - Brazilian New Cruzeiro (1967–1986)
            * `BRL` - Brazilian Real
            * `GBP` - British Pound
            * `BND` - Brunei Dollar
            * `BGL` - Bulgarian Hard Lev
            * `BGN` - Bulgarian Lev
            * `BGO` - Bulgarian Lev (1879–1952)
            * `BGM` - Bulgarian Socialist Lev
            * `BUK` - Burmese Kyat
            * `BIF` - Burundian Franc
            * `XPF` - CFP Franc
            * `KHR` - Cambodian Riel
            * `CAD` - Canadian Dollar
            * `CVE` - Cape Verdean Escudo
            * `KYD` - Cayman Islands Dollar
            * `XAF` - Central African CFA Franc
            * `CLE` - Chilean Escudo
            * `CLP` - Chilean Peso
            * `CLF` - Chilean Unit of Account (UF)
            * `CNX` - Chinese People’s Bank Dollar
            * `CNY` - Chinese Yuan
            * `CNH` - Chinese Yuan (offshore)
            * `COP` - Colombian Peso
            * `COU` - Colombian Real Value Unit
            * `KMF` - Comorian Franc
            * `CDF` - Congolese Franc
            * `CRC` - Costa Rican Colón
            * `HRD` - Croatian Dinar
            * `HRK` - Croatian Kuna
            * `CUC` - Cuban Convertible Peso
            * `CUP` - Cuban Peso
            * `CYP` - Cypriot Pound
            * `CZK` - Czech Koruna
            * `CSK` - Czechoslovak Hard Koruna
            * `DKK` - Danish Krone
            * `DJF` - Djiboutian Franc
            * `DOP` - Dominican Peso
            * `NLG` - Dutch Guilder
            * `XCD` - East Caribbean Dollar
            * `DDM` - East German Mark
            * `ECS` - Ecuadorian Sucre
            * `ECV` - Ecuadorian Unit of Constant Value
            * `EGP` - Egyptian Pound
            * `GQE` - Equatorial Guinean Ekwele
            * `ERN` - Eritrean Nakfa
            * `EEK` - Estonian Kroon
            * `ETB` - Ethiopian Birr
            * `EUR` - Euro
            * `XBA` - European Composite Unit
            * `XEU` - European Currency Unit
            * `XBB` - European Monetary Unit
            * `XBC` - European Unit of Account (XBC)
            * `XBD` - European Unit of Account (XBD)
            * `FKP` - Falkland Islands Pound
            * `FJD` - Fijian Dollar
            * `FIM` - Finnish Markka
            * `FRF` - French Franc
            * `XFO` - French Gold Franc
            * `XFU` - French UIC-Franc
            * `GMD` - Gambian Dalasi
            * `GEK` - Georgian Kupon Larit
            * `GEL` - Georgian Lari
            * `DEM` - German Mark
            * `GHS` - Ghanaian Cedi
            * `GHC` - Ghanaian Cedi (1979–2007)
            * `GIP` - Gibraltar Pound
            * `XAU` - Gold
            * `GRD` - Greek Drachma
            * `GTQ` - Guatemalan Quetzal
            * `GWP` - Guinea-Bissau Peso
            * `GNF` - Guinean Franc
            * `GNS` - Guinean Syli
            * `GYD` - Guyanaese Dollar
            * `HTG` - Haitian Gourde
            * `HNL` - Honduran Lempira
            * `HKD` - Hong Kong Dollar
            * `HUF` - Hungarian Forint
            * `IMP` - IMP
            * `ISK` - Icelandic Króna
            * `ISJ` - Icelandic Króna (1918–1981)
            * `INR` - Indian Rupee
            * `IDR` - Indonesian Rupiah
            * `IRR` - Iranian Rial
            * `IQD` - Iraqi Dinar
            * `IEP` - Irish Pound
            * `ILS` - Israeli New Shekel
            * `ILP` - Israeli Pound
            * `ILR` - Israeli Shekel (1980–1985)
            * `ITL` - Italian Lira
            * `JMD` - Jamaican Dollar
            * `JPY` - Japanese Yen
            * `JOD` - Jordanian Dinar
            * `KZT` - Kazakhstani Tenge
            * `KES` - Kenyan Shilling
            * `KWD` - Kuwaiti Dinar
            * `KGS` - Kyrgystani Som
            * `LAK` - Laotian Kip
            * `LVL` - Latvian Lats
            * `LVR` - Latvian Ruble
            * `LBP` - Lebanese Pound
            * `LSL` - Lesotho Loti
            * `LRD` - Liberian Dollar
            * `LYD` - Libyan Dinar
            * `LTL` - Lithuanian Litas
            * `LTT` - Lithuanian Talonas
            * `LUL` - Luxembourg Financial Franc
            * `LUC` - Luxembourgian Convertible Franc
            * `LUF` - Luxembourgian Franc
            * `MOP` - Macanese Pataca
            * `MKD` - Macedonian Denar
            * `MKN` - Macedonian Denar (1992–1993)
            * `MGA` - Malagasy Ariary
            * `MGF` - Malagasy Franc
            * `MWK` - Malawian Kwacha
            * `MYR` - Malaysian Ringgit
            * `MVR` - Maldivian Rufiyaa
            * `MVP` - Maldivian Rupee (1947–1981)
            * `MLF` - Malian Franc
            * `MTL` - Maltese Lira
            * `MTP` - Maltese Pound
            * `MRU` - Mauritanian Ouguiya
            * `MRO` - Mauritanian Ouguiya (1973–2017)
            * `MUR` - Mauritian Rupee
            * `MXV` - Mexican Investment Unit
            * `MXN` - Mexican Peso
            * `MXP` - Mexican Silver Peso (1861–1992)
            * `MDC` - Moldovan Cupon
            * `MDL` - Moldovan Leu
            * `MCF` - Monegasque Franc
            * `MNT` - Mongolian Tugrik
            * `MAD` - Moroccan Dirham
            * `MAF` - Moroccan Franc
            * `MZE` - Mozambican Escudo
            * `MZN` - Mozambican Metical
            * `MZM` - Mozambican Metical (1980–2006)
            * `MMK` - Myanmar Kyat
            * `NAD` - Namibian Dollar
            * `NPR` - Nepalese Rupee
            * `ANG` - Netherlands Antillean Guilder
            * `TWD` - New Taiwan Dollar
            * `NZD` - New Zealand Dollar
            * `NIO` - Nicaraguan Córdoba
            * `NIC` - Nicaraguan Córdoba (1988–1991)
            * `NGN` - Nigerian Naira
            * `KPW` - North Korean Won
            * `NOK` - Norwegian Krone
            * `OMR` - Omani Rial
            * `PKR` - Pakistani Rupee
            * `XPD` - Palladium
            * `PAB` - Panamanian Balboa
            * `PGK` - Papua New Guinean Kina
            * `PYG` - Paraguayan Guarani
            * `PEI` - Peruvian Inti
            * `PEN` - Peruvian Sol
            * `PES` - Peruvian Sol (1863–1965)
            * `PHP` - Philippine Peso
            * `XPT` - Platinum
            * `PLN` - Polish Zloty
            * `PLZ` - Polish Zloty (1950–1995)
            * `PTE` - Portuguese Escudo
            * `GWE` - Portuguese Guinea Escudo
            * `QAR` - Qatari Rial
            * `XRE` - RINET Funds
            * `RHD` - Rhodesian Dollar
            * `RON` - Romanian Leu
            * `ROL` - Romanian Leu (1952–2006)
            * `RUB` - Russian Ruble
            * `RUR` - Russian Ruble (1991–1998)
            * `RWF` - Rwandan Franc
            * `SVC` - Salvadoran Colón
            * `WST` - Samoan Tala
            * `SAR` - Saudi Riyal
            * `RSD` - Serbian Dinar
            * `CSD` - Serbian Dinar (2002–2006)
            * `SCR` - Seychellois Rupee
            * `SLL` - Sierra Leonean Leone
            * `XAG` - Silver
            * `SGD` - Singapore Dollar
            * `SKK` - Slovak Koruna
            * `SIT` - Slovenian Tolar
            * `SBD` - Solomon Islands Dollar
            * `SOS` - Somali Shilling
            * `ZAR` - South African Rand
            * `ZAL` - South African Rand (financial)
            * `KRH` - South Korean Hwan (1953–1962)
            * `KRW` - South Korean Won
            * `KRO` - South Korean Won (1945–1953)
            * `SSP` - South Sudanese Pound
            * `SUR` - Soviet Rouble
            * `ESP` - Spanish Peseta
            * `ESA` - Spanish Peseta (A account)
            * `ESB` - Spanish Peseta (convertible account)
            * `XDR` - Special Drawing Rights
            * `LKR` - Sri Lankan Rupee
            * `SHP` - St. Helena Pound
            * `XSU` - Sucre
            * `SDD` - Sudanese Dinar (1992–2007)
            * `SDG` - Sudanese Pound
            * `SDP` - Sudanese Pound (1957–1998)
            * `SRD` - Surinamese Dollar
            * `SRG` - Surinamese Guilder
            * `SZL` - Swazi Lilangeni
            * `SEK` - Swedish Krona
            * `CHF` - Swiss Franc
            * `SYP` - Syrian Pound
            * `STN` - São Tomé & Príncipe Dobra
            * `STD` - São Tomé & Príncipe Dobra (1977–2017)
            * `TVD` - TVD
            * `TJR` - Tajikistani Ruble
            * `TJS` - Tajikistani Somoni
            * `TZS` - Tanzanian Shilling
            * `XTS` - Testing Currency Code
            * `THB` - Thai Baht
            * `XXX` - The codes assigned for transactions where no currency is involved
            * `TPE` - Timorese Escudo
            * `TOP` - Tongan Paʻanga
            * `TTD` - Trinidad & Tobago Dollar
            * `TND` - Tunisian Dinar
            * `TRY` - Turkish Lira
            * `TRL` - Turkish Lira (1922–2005)
            * `TMT` - Turkmenistani Manat
            * `TMM` - Turkmenistani Manat (1993–2009)
            * `USD` - US Dollar
            * `USN` - US Dollar (Next day)
            * `USS` - US Dollar (Same day)
            * `UGX` - Ugandan Shilling
            * `UGS` - Ugandan Shilling (1966–1987)
            * `UAH` - Ukrainian Hryvnia
            * `UAK` - Ukrainian Karbovanets
            * `AED` - United Arab Emirates Dirham
            * `UYW` - Uruguayan Nominal Wage Index Unit
            * `UYU` - Uruguayan Peso
            * `UYP` - Uruguayan Peso (1975–1993)
            * `UYI` - Uruguayan Peso (Indexed Units)
            * `UZS` - Uzbekistani Som
            * `VUV` - Vanuatu Vatu
            * `VES` - Venezuelan Bolívar
            * `VEB` - Venezuelan Bolívar (1871–2008)
            * `VEF` - Venezuelan Bolívar (2008–2018)
            * `VND` - Vietnamese Dong
            * `VNN` - Vietnamese Dong (1978–1985)
            * `CHE` - WIR Euro
            * `CHW` - WIR Franc
            * `XOF` - West African CFA Franc
            * `YDD` - Yemeni Dinar
            * `YER` - Yemeni Rial
            * `YUN` - Yugoslavian Convertible Dinar (1990–1992)
            * `YUD` - Yugoslavian Hard Dinar (1966–1990)
            * `YUM` - Yugoslavian New Dinar (1994–2002)
            * `YUR` - Yugoslavian Reformed Dinar (1992–1993)
            * `ZWN` - ZWN
            * `ZRN` - Zairean New Zaire (1993–1998)
            * `ZRZ` - Zairean Zaire (1971–1993)
            * `ZMW` - Zambian Kwacha
            * `ZMK` - Zambian Kwacha (1968–2012)
            * `ZWD` - Zimbabwean Dollar (1980–2008)
            * `ZWR` - Zimbabwean Dollar (2008)
            * `ZWL` - Zimbabwean Dollar (2009)
          example: USD
        exchange_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,32}(?:\.\d{0,16})?$
          nullable: true
          description: The vendor credit's exchange rate.
          example: '2.9'
        inclusive_of_tax:
          type: boolean
          nullable: true
          description: If the transaction is inclusive or exclusive of tax. `True`
            if inclusive, `False` if exclusive.
        company:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/CompanyInfo'
          nullable: true
          description: The company the vendor credit belongs to.
          example: 595c8f97-2ac4-45b7-b000-41bdf43240b5
          x-merge-expands-to: CompanyInfo
        tracking_categories:
          type: array
          items:
            oneOf:
            - type: string
              format: uuid
            - $ref: '#/components/schemas/TrackingCategory'
            nullable: true
          example:
          - b38c59b0-a9d7-4740-b1ee-5436c6751e3d
          - 9b840d2-686a-465a-8a8e-7b028498f8e4
          - a47e11b6-c73b-4a0c-be31-130fc48177fa
          x-merge-expands-to: TrackingCategory
        applied_to_lines:
          type: array
          items:
            $ref: '#/components/schemas/VendorCreditApplyLineForVendorCreditRequest'
          description: A list of VendorCredit Applied to Lines objects.
          example:
          - invoice: 5b3c1341-a20f-4e51-b72c-f3830a16c97b
            applied_date: '2020-03-31T00:00:00Z'
            applied_amount: '2.9'
        accounting_period:
          oneOf:
          - type: string
            format: uuid
          - $ref: '#/components/schemas/AccountingPeriod'
          nullable: true
          description: The accounting period that the VendorCredit was generated in.
          example: 9b840d2-686a-465a-8a8e-7b028498f8e4
          x-merge-expands-to: AccountingPeriod
        integration_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_integration_field: unique_integration_field_value
        linked_account_params:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          example:
            unique_linked_account_field: unique_linked_account_field_value
      x-merge-expands: '{"accounting_period": "AccountingPeriod", "company": "CompanyInfo",
        "lines": "VendorCreditLine", "tracking_categories": "TrackingCategory", "vendor":
        "Contact"}'
      x-merge-category: accounting
    VendorCreditResponse:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/VendorCredit'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/WarningValidationProblem'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorValidationProblem'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/DebugModeLog'
      required:
      - errors
      - model
      - warnings
      x-merge-category: accounting
    WarningValidationProblem:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/ValidationProblemSource'
          example:
            pointer: /age
        title:
          type: string
          example: Unrecognized Field
        detail:
          type: string
          example: An unrecognized field, age, was passed in with request data.
        problem_type:
          type: string
          example: UNRECOGNIZED_FIELD
      required:
      - detail
      - problem_type
      - title
      x-merge-category: accounting
    WebhookReceiver:
      type: object
      properties:
        event:
          type: string
        is_active:
          type: boolean
        key:
          type: string
      required:
      - event
      - is_active
      x-merge-category: accounting
    WebhookReceiverRequest:
      type: object
      properties:
        event:
          type: string
          minLength: 1
        is_active:
          type: boolean
        key:
          type: string
          minLength: 1
      required:
      - event
      - is_active
      x-merge-category: accounting
  securitySchemes:
    tokenAuth:
      type: http
      scheme: bearer
      description: Token-based authentication with required prefix "Bearer"
      x-fern-token-variable-name: api_key
servers:
- url: https://api.merge.dev/api/accounting/v1
  description: Production
  x-fern-server-name: Production
- url: https://api-sandbox.merge.dev/api/accounting/v1
  description: Sandbox
  x-fern-server-name: Sandbox
- url: https://api-eu.merge.dev/api/accounting/v1
  description: Production EU
  x-fern-server-name: ProductionEU
- url: https://api-ap.merge.dev/api/accounting/v1
  description: Production APSE1
  x-fern-server-name: ProductionAPSE1
